<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>all_options.dox</name>
    <path>D:/src/MSw/Aria/ArNetworking/docs/options/</path>
    <filename>all__options_8dox</filename>
  </compound>
  <compound kind="file">
    <name>ArCentralForwarder.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArCentralForwarder_8cpp</filename>
    <includes id="ArCentralForwarder_8h" name="ArCentralForwarder.h" local="yes" imported="no">ArCentralForwarder.h</includes>
    <includes id="ArClientData_8h" name="ArClientData.h" local="yes" imported="no">ArClientData.h</includes>
  </compound>
  <compound kind="file">
    <name>ArCentralForwarder.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArCentralForwarder_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <class kind="class">ArCentralForwarder</class>
  </compound>
  <compound kind="file">
    <name>ArCentralManager.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArCentralManager_8cpp</filename>
    <includes id="ArCentralManager_8h" name="ArCentralManager.h" local="yes" imported="no">ArCentralManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ArCentralManager.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArCentralManager_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArCentralForwarder_8h" name="ArCentralForwarder.h" local="yes" imported="no">ArCentralForwarder.h</includes>
    <class kind="class">ArCentralManager</class>
  </compound>
  <compound kind="file">
    <name>ArClientArgUtils.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientArgUtils_8cpp</filename>
    <includes id="ArClientArgUtils_8h" name="ArClientArgUtils.h" local="yes" imported="no">ArClientArgUtils.h</includes>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IFDEBUG</name>
      <anchorfile>ArClientArgUtils_8cpp.html</anchorfile>
      <anchor>a8f190bfcdf45dd402c71a98ab76b6fdd</anchor>
      <arglist>(code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArClientArgUtils.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientArgUtils_8h</filename>
    <class kind="class">ArClientArg</class>
  </compound>
  <compound kind="file">
    <name>ArClientBase.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientBase_8cpp</filename>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <includes id="ArServerCommands_8h" name="ArServerCommands.h" local="yes" imported="no">ArServerCommands.h</includes>
    <includes id="ArClientCommands_8h" name="ArClientCommands.h" local="yes" imported="no">ArClientCommands.h</includes>
    <includes id="ArClientData_8h" name="ArClientData.h" local="yes" imported="no">ArClientData.h</includes>
    <includes id="md5_8h" name="md5.h" local="yes" imported="no">md5.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IFDEBUG</name>
      <anchorfile>ArClientBase_8cpp.html</anchorfile>
      <anchor>a8f190bfcdf45dd402c71a98ab76b6fdd</anchor>
      <arglist>(code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArClientBase.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientBase_8h</filename>
    <includes id="ArClientCommands_8h" name="ArClientCommands.h" local="yes" imported="no">ArClientCommands.h</includes>
    <includes id="ArServerCommands_8h" name="ArServerCommands.h" local="yes" imported="no">ArServerCommands.h</includes>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <includes id="ArNetPacketSenderTcp_8h" name="ArNetPacketSenderTcp.h" local="yes" imported="no">ArNetPacketSenderTcp.h</includes>
    <includes id="ArNetPacketReceiverTcp_8h" name="ArNetPacketReceiverTcp.h" local="yes" imported="no">ArNetPacketReceiverTcp.h</includes>
    <includes id="ArNetPacketReceiverUdp_8h" name="ArNetPacketReceiverUdp.h" local="yes" imported="no">ArNetPacketReceiverUdp.h</includes>
    <class kind="class">ArClientBase</class>
    <class kind="class">ArClientBase::Tracker</class>
  </compound>
  <compound kind="file">
    <name>ArClientCommands.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientCommands_8h</filename>
    <class kind="class">ArClientCommands</class>
  </compound>
  <compound kind="file">
    <name>ArClientData.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientData_8cpp</filename>
    <includes id="ArClientData_8h" name="ArClientData.h" local="yes" imported="no">ArClientData.h</includes>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
  </compound>
  <compound kind="file">
    <name>ArClientData.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientData_8h</filename>
    <class kind="class">ArClientData</class>
  </compound>
  <compound kind="file">
    <name>ArClientDataReceiver.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientDataReceiver_8h</filename>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <class kind="class">ArClientDataReceiver</class>
  </compound>
  <compound kind="file">
    <name>ArClientFileUtils.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientFileUtils_8cpp</filename>
    <includes id="ArClientFileUtils_8h" name="ArClientFileUtils.h" local="yes" imported="no">ArClientFileUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>ArClientFileUtils.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientFileUtils_8h</filename>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <class kind="class">ArClientDeleteFileOnServer</class>
    <class kind="class">ArClientFileFromClient</class>
    <class kind="class">ArClientFileLister</class>
    <class kind="class">ArClientFileListerItem</class>
    <class kind="class">ArClientFileToClient</class>
  </compound>
  <compound kind="file">
    <name>ArClientHandlerConfig.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientHandlerConfig_8cpp</filename>
    <includes id="ArClientHandlerConfig_8h" name="ArClientHandlerConfig.h" local="yes" imported="no">ArClientHandlerConfig.h</includes>
    <includes id="ArClientArgUtils_8h" name="ArClientArgUtils.h" local="yes" imported="no">ArClientArgUtils.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ARDEBUG_CLIENTHANDLERCONFIG</name>
      <anchorfile>ArClientHandlerConfig_8cpp.html</anchorfile>
      <anchor>a18e9880aceb679e5a9c1ba16ec803bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IFDEBUG</name>
      <anchorfile>ArClientHandlerConfig_8cpp.html</anchorfile>
      <anchor>a8f190bfcdf45dd402c71a98ab76b6fdd</anchor>
      <arglist>(code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArClientHandlerConfig.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientHandlerConfig_8h</filename>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <class kind="class">ArClientHandlerConfig</class>
  </compound>
  <compound kind="file">
    <name>ArClientHandlerRobotUpdate.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientHandlerRobotUpdate_8cpp</filename>
    <includes id="ArClientHandlerRobotUpdate_8h" name="ArClientHandlerRobotUpdate.h" local="yes" imported="no">ArClientHandlerRobotUpdate.h</includes>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
  </compound>
  <compound kind="file">
    <name>ArClientHandlerRobotUpdate.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientHandlerRobotUpdate_8h</filename>
    <class kind="class">ArClientHandlerRobotUpdate</class>
    <class kind="struct">ArClientHandlerRobotUpdate::RobotData</class>
  </compound>
  <compound kind="file">
    <name>ArClientRatioDrive.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientRatioDrive_8cpp</filename>
    <includes id="ArClientRatioDrive_8h" name="ArClientRatioDrive.h" local="yes" imported="no">ArClientRatioDrive.h</includes>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
  </compound>
  <compound kind="file">
    <name>ArClientRatioDrive.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientRatioDrive_8h</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <class kind="class">ArClientRatioDrive</class>
  </compound>
  <compound kind="file">
    <name>ArClientSimpleConnector.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientSimpleConnector_8cpp</filename>
    <includes id="ArClientSimpleConnector_8h" name="ArClientSimpleConnector.h" local="yes" imported="no">ArClientSimpleConnector.h</includes>
  </compound>
  <compound kind="file">
    <name>ArClientSimpleConnector.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientSimpleConnector_8h</filename>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <class kind="class">ArClientSimpleConnector</class>
  </compound>
  <compound kind="file">
    <name>ArClientSwitchManager.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArClientSwitchManager_8cpp</filename>
    <includes id="ArClientSwitchManager_8h" name="ArClientSwitchManager.h" local="yes" imported="no">ArClientSwitchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ArClientSwitchManager.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArClientSwitchManager_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <class kind="class">ArClientSwitchManager</class>
  </compound>
  <compound kind="file">
    <name>ArHybridForwarderVideo.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArHybridForwarderVideo_8cpp</filename>
    <includes id="ArHybridForwarderVideo_8h" name="ArHybridForwarderVideo.h" local="yes" imported="no">ArHybridForwarderVideo.h</includes>
  </compound>
  <compound kind="file">
    <name>ArHybridForwarderVideo.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArHybridForwarderVideo_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <class kind="class">ArHybridForwarderVideo</class>
  </compound>
  <compound kind="file">
    <name>ArMapChanger.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArMapChanger_8cpp</filename>
    <includes id="ArMapChanger_8h" name="ArMapChanger.h" local="yes" imported="no">ArMapChanger.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IFDEBUG</name>
      <anchorfile>ArMapChanger_8cpp.html</anchorfile>
      <anchor>a8f190bfcdf45dd402c71a98ab76b6fdd</anchor>
      <arglist>(code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArMapChanger.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArMapChanger_8h</filename>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <includes id="ArCentralForwarder_8h" name="ArCentralForwarder.h" local="yes" imported="no">ArCentralForwarder.h</includes>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <includes id="ArClientSwitchManager_8h" name="ArClientSwitchManager.h" local="yes" imported="no">ArClientSwitchManager.h</includes>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerClient_8h" name="ArServerClient.h" local="yes" imported="no">ArServerClient.h</includes>
    <includes id="ArMapChanger_8h" name="ArMapChanger.h" local="yes" imported="no">ArMapChanger.h</includes>
    <class kind="class">ArMapChanger</class>
    <class kind="struct">ArMapChanger::ClientChangeInfo</class>
  </compound>
  <compound kind="file">
    <name>ArNetPacket.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArNetPacket_8cpp</filename>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
  </compound>
  <compound kind="file">
    <name>ArNetPacket.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArNetPacket_8h</filename>
    <class kind="class">ArNetPacket</class>
  </compound>
  <compound kind="file">
    <name>ArNetPacketReceiverTcp.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArNetPacketReceiverTcp_8cpp</filename>
    <includes id="ArNetPacketReceiverTcp_8h" name="ArNetPacketReceiverTcp.h" local="yes" imported="no">ArNetPacketReceiverTcp.h</includes>
  </compound>
  <compound kind="file">
    <name>ArNetPacketReceiverTcp.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArNetPacketReceiverTcp_8h</filename>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <class kind="class">ArNetPacketReceiverTcp</class>
  </compound>
  <compound kind="file">
    <name>ArNetPacketReceiverUdp.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArNetPacketReceiverUdp_8cpp</filename>
    <includes id="ArNetPacketReceiverUdp_8h" name="ArNetPacketReceiverUdp.h" local="yes" imported="no">ArNetPacketReceiverUdp.h</includes>
  </compound>
  <compound kind="file">
    <name>ArNetPacketReceiverUdp.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArNetPacketReceiverUdp_8h</filename>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <class kind="class">ArNetPacketReceiverUdp</class>
  </compound>
  <compound kind="file">
    <name>ArNetPacketSenderTcp.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArNetPacketSenderTcp_8cpp</filename>
    <includes id="ArNetPacketSenderTcp_8h" name="ArNetPacketSenderTcp.h" local="yes" imported="no">ArNetPacketSenderTcp.h</includes>
  </compound>
  <compound kind="file">
    <name>ArNetPacketSenderTcp.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArNetPacketSenderTcp_8h</filename>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <class kind="class">ArNetPacketSenderTcp</class>
  </compound>
  <compound kind="file">
    <name>ArNetworking.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArNetworking_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerClient_8h" name="ArServerClient.h" local="yes" imported="no">ArServerClient.h</includes>
    <includes id="ArServerCommands_8h" name="ArServerCommands.h" local="yes" imported="no">ArServerCommands.h</includes>
    <includes id="ArClientBase_8h" name="ArClientBase.h" local="yes" imported="no">ArClientBase.h</includes>
    <includes id="ArClientCommands_8h" name="ArClientCommands.h" local="yes" imported="no">ArClientCommands.h</includes>
    <includes id="ArMapChanger_8h" name="ArMapChanger.h" local="yes" imported="no">ArMapChanger.h</includes>
    <includes id="ArServerHandlerCamera_8h" name="ArServerHandlerCamera.h" local="yes" imported="no">ArServerHandlerCamera.h</includes>
    <includes id="ArServerHandlerCameraCollection_8h" name="ArServerHandlerCameraCollection.h" local="yes" imported="no">ArServerHandlerCameraCollection.h</includes>
    <includes id="ArServerHandlerCommMonitor_8h" name="ArServerHandlerCommMonitor.h" local="yes" imported="no">ArServerHandlerCommMonitor.h</includes>
    <includes id="ArServerHandlerCommands_8h" name="ArServerHandlerCommands.h" local="yes" imported="no">ArServerHandlerCommands.h</includes>
    <includes id="ArServerHandlerPopup_8h" name="ArServerHandlerPopup.h" local="yes" imported="no">ArServerHandlerPopup.h</includes>
    <includes id="ArServerInfoDrawings_8h" name="ArServerInfoDrawings.h" local="yes" imported="no">ArServerInfoDrawings.h</includes>
    <includes id="ArServerInfoRobot_8h" name="ArServerInfoRobot.h" local="yes" imported="no">ArServerInfoRobot.h</includes>
    <includes id="ArServerInfoSensor_8h" name="ArServerInfoSensor.h" local="yes" imported="no">ArServerInfoSensor.h</includes>
    <includes id="ArServerHandlerMap_8h" name="ArServerHandlerMap.h" local="yes" imported="no">ArServerHandlerMap.h</includes>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <includes id="ArServerModeDrive_8h" name="ArServerModeDrive.h" local="yes" imported="no">ArServerModeDrive.h</includes>
    <includes id="ArServerModeRatioDrive_8h" name="ArServerModeRatioDrive.h" local="yes" imported="no">ArServerModeRatioDrive.h</includes>
    <includes id="ArServerModeStop_8h" name="ArServerModeStop.h" local="yes" imported="no">ArServerModeStop.h</includes>
    <includes id="ArServerModeWander_8h" name="ArServerModeWander.h" local="yes" imported="no">ArServerModeWander.h</includes>
    <includes id="ArServerHandlerConfig_8h" name="ArServerHandlerConfig.h" local="yes" imported="no">ArServerHandlerConfig.h</includes>
    <includes id="ArClientHandlerConfig_8h" name="ArClientHandlerConfig.h" local="yes" imported="no">ArClientHandlerConfig.h</includes>
    <includes id="ArHybridForwarderVideo_8h" name="ArHybridForwarderVideo.h" local="yes" imported="no">ArHybridForwarderVideo.h</includes>
    <includes id="ArServerSimpleCommands_8h" name="ArServerSimpleCommands.h" local="yes" imported="no">ArServerSimpleCommands.h</includes>
    <includes id="ArServerFileUtils_8h" name="ArServerFileUtils.h" local="yes" imported="no">ArServerFileUtils.h</includes>
    <includes id="ArClientFileUtils_8h" name="ArClientFileUtils.h" local="yes" imported="no">ArClientFileUtils.h</includes>
    <includes id="ArServerUserInfo_8h" name="ArServerUserInfo.h" local="yes" imported="no">ArServerUserInfo.h</includes>
    <includes id="ArClientSimpleConnector_8h" name="ArClientSimpleConnector.h" local="yes" imported="no">ArClientSimpleConnector.h</includes>
    <includes id="ArServerHandlerMapping_8h" name="ArServerHandlerMapping.h" local="yes" imported="no">ArServerHandlerMapping.h</includes>
    <includes id="ArServerSimpleOpener_8h" name="ArServerSimpleOpener.h" local="yes" imported="no">ArServerSimpleOpener.h</includes>
    <includes id="ArServerInfoStrings_8h" name="ArServerInfoStrings.h" local="yes" imported="no">ArServerInfoStrings.h</includes>
    <includes id="ArClientArgUtils_8h" name="ArClientArgUtils.h" local="yes" imported="no">ArClientArgUtils.h</includes>
    <includes id="ArCentralManager_8h" name="ArCentralManager.h" local="yes" imported="no">ArCentralManager.h</includes>
    <includes id="ArCentralForwarder_8h" name="ArCentralForwarder.h" local="yes" imported="no">ArCentralForwarder.h</includes>
    <includes id="ArClientSwitchManager_8h" name="ArClientSwitchManager.h" local="yes" imported="no">ArClientSwitchManager.h</includes>
    <includes id="ArServerModeIdle_8h" name="ArServerModeIdle.h" local="yes" imported="no">ArServerModeIdle.h</includes>
    <includes id="ArTempDirectoryHelper_8h" name="ArTempDirectoryHelper.h" local="yes" imported="no">ArTempDirectoryHelper.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerAdvertiser.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerAdvertiser_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerAdvertiser</class>
    <member kind="typedef">
      <type>ArServerAdvertiser</type>
      <name>ArServerAdv</name>
      <anchorfile>ArServerAdvertiser_8h.html</anchorfile>
      <anchor>afe9f67e8647b1478187ec3dd74ef156b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArServerBase.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerBase_8cpp</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerCommands_8h" name="ArServerCommands.h" local="yes" imported="no">ArServerCommands.h</includes>
    <includes id="ArClientCommands_8h" name="ArClientCommands.h" local="yes" imported="no">ArClientCommands.h</includes>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <includes id="ArServerData_8h" name="ArServerData.h" local="yes" imported="no">ArServerData.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IFDEBUG</name>
      <anchorfile>ArServerBase_8cpp.html</anchorfile>
      <anchor>a8f190bfcdf45dd402c71a98ab76b6fdd</anchor>
      <arglist>(code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArServerBase.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerBase_8h</filename>
    <includes id="ArServerCommands_8h" name="ArServerCommands.h" local="yes" imported="no">ArServerCommands.h</includes>
    <includes id="ArServerClient_8h" name="ArServerClient.h" local="yes" imported="no">ArServerClient.h</includes>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <includes id="ArNetPacketReceiverUdp_8h" name="ArNetPacketReceiverUdp.h" local="yes" imported="no">ArNetPacketReceiverUdp.h</includes>
    <includes id="ArServerUserInfo_8h" name="ArServerUserInfo.h" local="yes" imported="no">ArServerUserInfo.h</includes>
    <class kind="class">ArServerBase</class>
    <class kind="class">ArServerBase::SlowIdleThread</class>
  </compound>
  <compound kind="file">
    <name>ArServerClient.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerClient_8cpp</filename>
    <includes id="ArServerClient_8h" name="ArServerClient.h" local="yes" imported="no">ArServerClient.h</includes>
    <includes id="ArServerCommands_8h" name="ArServerCommands.h" local="yes" imported="no">ArServerCommands.h</includes>
    <includes id="ArClientCommands_8h" name="ArClientCommands.h" local="yes" imported="no">ArClientCommands.h</includes>
    <includes id="ArServerData_8h" name="ArServerData.h" local="yes" imported="no">ArServerData.h</includes>
    <includes id="ArServerUserInfo_8h" name="ArServerUserInfo.h" local="yes" imported="no">ArServerUserInfo.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerClient.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerClient_8h</filename>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
    <includes id="ArServerCommands_8h" name="ArServerCommands.h" local="yes" imported="no">ArServerCommands.h</includes>
    <includes id="ArNetPacketReceiverTcp_8h" name="ArNetPacketReceiverTcp.h" local="yes" imported="no">ArNetPacketReceiverTcp.h</includes>
    <includes id="ArNetPacketSenderTcp_8h" name="ArNetPacketSenderTcp.h" local="yes" imported="no">ArNetPacketSenderTcp.h</includes>
    <includes id="ArServerClientData_8h" name="ArServerClientData.h" local="yes" imported="no">ArServerClientData.h</includes>
    <includes id="ArServerClientIdentifier_8h" name="ArServerClientIdentifier.h" local="yes" imported="no">ArServerClientIdentifier.h</includes>
    <class kind="class">ArServerClient</class>
    <class kind="class">ArServerClient::Tracker</class>
  </compound>
  <compound kind="file">
    <name>ArServerClientData.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerClientData_8h</filename>
    <class kind="class">ArServerClientData</class>
  </compound>
  <compound kind="file">
    <name>ArServerClientIdentifier.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerClientIdentifier_8h</filename>
    <class kind="class">ArServerClientIdentifier</class>
  </compound>
  <compound kind="file">
    <name>ArServerCommands.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerCommands_8h</filename>
    <class kind="class">ArServerCommands</class>
  </compound>
  <compound kind="file">
    <name>ArServerData.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerData_8cpp</filename>
    <includes id="ArServerData_8h" name="ArServerData.h" local="yes" imported="no">ArServerData.h</includes>
    <includes id="ArServerClient_8h" name="ArServerClient.h" local="yes" imported="no">ArServerClient.h</includes>
    <includes id="ArNetPacket_8h" name="ArNetPacket.h" local="yes" imported="no">ArNetPacket.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerData.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerData_8h</filename>
    <class kind="class">ArServerData</class>
  </compound>
  <compound kind="file">
    <name>ArServerDataProvider.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerDataProvider_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerDataProvider</class>
  </compound>
  <compound kind="file">
    <name>ArServerFileUtils.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerFileUtils_8cpp</filename>
    <includes id="ArServerFileUtils_8h" name="ArServerFileUtils.h" local="yes" imported="no">ArServerFileUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerFileUtils.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerFileUtils_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerDeleteFileOnServer</class>
    <class kind="class">ArServerFileFromClient</class>
    <class kind="class">ArServerFileLister</class>
    <class kind="class">ArServerFileToClient</class>
    <class kind="class">ArServerFileFromClient::FileInfo</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCamera.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerCamera_8cpp</filename>
    <includes id="ArServerHandlerCamera_8h" name="ArServerHandlerCamera.h" local="yes" imported="no">ArServerHandlerCamera.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IFDEBUG</name>
      <anchorfile>ArServerHandlerCamera_8cpp.html</anchorfile>
      <anchor>a8f190bfcdf45dd402c71a98ab76b6fdd</anchor>
      <arglist>(code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCamera.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerCamera_8h</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <class kind="class">ArServerHandlerCamera</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCameraCollection.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerCameraCollection_8cpp</filename>
    <includes id="ArServerHandlerCameraCollection_8h" name="ArServerHandlerCameraCollection.h" local="yes" imported="no">ArServerHandlerCameraCollection.h</includes>
    <includes id="ArClientArgUtils_8h" name="ArClientArgUtils.h" local="yes" imported="no">ArClientArgUtils.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCameraCollection.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerCameraCollection_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerClient_8h" name="ArServerClient.h" local="yes" imported="no">ArServerClient.h</includes>
    <class kind="class">ArServerHandlerCameraCollection</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCommands.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerCommands_8cpp</filename>
    <includes id="ArServerHandlerCommands_8h" name="ArServerHandlerCommands.h" local="yes" imported="no">ArServerHandlerCommands.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCommands.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerCommands_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerHandlerCommands</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCommMonitor.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerCommMonitor_8cpp</filename>
    <includes id="ArServerHandlerCommMonitor_8h" name="ArServerHandlerCommMonitor.h" local="yes" imported="no">ArServerHandlerCommMonitor.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerCommMonitor.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerCommMonitor_8h</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <class kind="class">ArServerHandlerCommMonitor</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerConfig.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerConfig_8cpp</filename>
    <includes id="ArServerHandlerConfig_8h" name="ArServerHandlerConfig.h" local="yes" imported="no">ArServerHandlerConfig.h</includes>
    <includes id="ArClientArgUtils_8h" name="ArClientArgUtils.h" local="yes" imported="no">ArClientArgUtils.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IFDEBUG</name>
      <anchorfile>ArServerHandlerConfig_8cpp.html</anchorfile>
      <anchor>a8f190bfcdf45dd402c71a98ab76b6fdd</anchor>
      <arglist>(code)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerConfig.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerConfig_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerHandlerConfig</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerMap.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerMap_8cpp</filename>
    <includes id="ArServerHandlerMap_8h" name="ArServerHandlerMap.h" local="yes" imported="no">ArServerHandlerMap.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerMap.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerMap_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerHandlerMap</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerMapping.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerMapping_8cpp</filename>
    <includes id="ArServerHandlerMapping_8h" name="ArServerHandlerMapping.h" local="yes" imported="no">ArServerHandlerMapping.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerMapping.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerMapping_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerHandlerCommands_8h" name="ArServerHandlerCommands.h" local="yes" imported="no">ArServerHandlerCommands.h</includes>
    <includes id="ArTempDirectoryHelper_8h" name="ArTempDirectoryHelper.h" local="yes" imported="no">ArTempDirectoryHelper.h</includes>
    <class kind="class">ArServerHandlerMapping</class>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerPopup.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerHandlerPopup_8cpp</filename>
    <includes id="ArServerHandlerPopup_8h" name="ArServerHandlerPopup.h" local="yes" imported="no">ArServerHandlerPopup.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerHandlerPopup.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerHandlerPopup_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerHandlerPopup</class>
    <class kind="class">ArServerHandlerPopupInfo</class>
    <class kind="class">ArServerHandlerPopup::PopupData</class>
  </compound>
  <compound kind="file">
    <name>ArServerInfoDrawings.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerInfoDrawings_8cpp</filename>
    <includes id="ArServerInfoDrawings_8h" name="ArServerInfoDrawings.h" local="yes" imported="no">ArServerInfoDrawings.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerInfoDrawings.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerInfoDrawings_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerInfoDrawings</class>
  </compound>
  <compound kind="file">
    <name>ArServerInfoRobot.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerInfoRobot_8cpp</filename>
    <includes id="ArServerInfoRobot_8h" name="ArServerInfoRobot.h" local="yes" imported="no">ArServerInfoRobot.h</includes>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerInfoRobot.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerInfoRobot_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerInfoRobot</class>
  </compound>
  <compound kind="file">
    <name>ArServerInfoSensor.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerInfoSensor_8cpp</filename>
    <includes id="ArServerInfoSensor_8h" name="ArServerInfoSensor.h" local="yes" imported="no">ArServerInfoSensor.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerInfoSensor.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerInfoSensor_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerInfoSensor</class>
  </compound>
  <compound kind="file">
    <name>ArServerInfoStrings.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerInfoStrings_8cpp</filename>
    <includes id="ArServerInfoStrings_8h" name="ArServerInfoStrings.h" local="yes" imported="no">ArServerInfoStrings.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerInfoStrings.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerInfoStrings_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerInfoStrings</class>
  </compound>
  <compound kind="file">
    <name>ArServerInfoTrailDrawing.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerInfoTrailDrawing_8h</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <class kind="class">ArServerInfoTrailDrawing</class>
  </compound>
  <compound kind="file">
    <name>ArServerMode.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerMode_8cpp</filename>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <includes id="ArServerModeIdle_8h" name="ArServerModeIdle.h" local="yes" imported="no">ArServerModeIdle.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerMode.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerMode_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <class kind="class">ArServerMode</class>
  </compound>
  <compound kind="file">
    <name>ArServerModeDrive.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerModeDrive_8cpp</filename>
    <includes id="ArServerModeDrive_8h" name="ArServerModeDrive.h" local="yes" imported="no">ArServerModeDrive.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerModeDrive.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerModeDrive_8h</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <class kind="class">ArServerModeDrive</class>
  </compound>
  <compound kind="file">
    <name>ArServerModeIdle.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerModeIdle_8cpp</filename>
    <includes id="ArServerModeIdle_8h" name="ArServerModeIdle.h" local="yes" imported="no">ArServerModeIdle.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerModeIdle.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerModeIdle_8h</filename>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <class kind="class">ArServerModeIdle</class>
  </compound>
  <compound kind="file">
    <name>ArServerModeJogPosition.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerModeJogPosition_8cpp</filename>
    <includes id="ArServerModeJogPosition_8h" name="ArServerModeJogPosition.h" local="yes" imported="no">ArServerModeJogPosition.h</includes>
    <includes id="ArServerHandlerCommands_8h" name="ArServerHandlerCommands.h" local="yes" imported="no">ArServerHandlerCommands.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerModeJogPosition.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerModeJogPosition_8h</filename>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <class kind="class">ArServerModeJogPosition</class>
  </compound>
  <compound kind="file">
    <name>ArServerModeRatioDrive.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerModeRatioDrive_8cpp</filename>
    <includes id="ArServerModeRatioDrive_8h" name="ArServerModeRatioDrive.h" local="yes" imported="no">ArServerModeRatioDrive.h</includes>
    <includes id="ArServerHandlerCommands_8h" name="ArServerHandlerCommands.h" local="yes" imported="no">ArServerHandlerCommands.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerModeRatioDrive.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerModeRatioDrive_8h</filename>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <class kind="class">ArServerModeRatioDrive</class>
  </compound>
  <compound kind="file">
    <name>ArServerModeStop.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerModeStop_8cpp</filename>
    <includes id="ArServerModeStop_8h" name="ArServerModeStop.h" local="yes" imported="no">ArServerModeStop.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerModeStop.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerModeStop_8h</filename>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <class kind="class">ArServerModeStop</class>
  </compound>
  <compound kind="file">
    <name>ArServerModeTestLoop.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerModeTestLoop_8cpp</filename>
    <includes id="ArServerModeTestLoop_8h" name="ArServerModeTestLoop.h" local="yes" imported="no">ArServerModeTestLoop.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerModeTestLoop.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerModeTestLoop_8h</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <class kind="class">ArServerModeTestLoop</class>
  </compound>
  <compound kind="file">
    <name>ArServerModeWander.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerModeWander_8cpp</filename>
    <includes id="ArServerModeWander_8h" name="ArServerModeWander.h" local="yes" imported="no">ArServerModeWander.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerModeWander.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerModeWander_8h</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArServerMode_8h" name="ArServerMode.h" local="yes" imported="no">ArServerMode.h</includes>
    <class kind="class">ArServerModeWander</class>
    <class kind="class">ArServerModeWander::StopIfNoRangeDevicesAction</class>
  </compound>
  <compound kind="file">
    <name>ArServerSimpleCommands.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerSimpleCommands_8cpp</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerSimpleCommands_8h" name="ArServerSimpleCommands.h" local="yes" imported="no">ArServerSimpleCommands.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerSimpleCommands.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerSimpleCommands_8h</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerHandlerCommands_8h" name="ArServerHandlerCommands.h" local="yes" imported="no">ArServerHandlerCommands.h</includes>
    <includes id="ArServerHandlerPopup_8h" name="ArServerHandlerPopup.h" local="yes" imported="no">ArServerHandlerPopup.h</includes>
    <class kind="class">ArServerSimpleComGyro</class>
    <class kind="class">ArServerSimpleComLogActions</class>
    <class kind="class">ArServerSimpleComLogRobotConfig</class>
    <class kind="class">ArServerSimpleComMovementLogging</class>
    <class kind="class">ArServerSimpleComUC</class>
    <class kind="class">ArServerSimpleConnectionTester</class>
    <class kind="class">ArServerSimpleLogRobotDebugPackets</class>
    <class kind="class">ArServerSimplePopup</class>
    <class kind="class">ArServerSimpleServerCommands</class>
  </compound>
  <compound kind="file">
    <name>ArServerSimpleOpener.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerSimpleOpener_8cpp</filename>
    <includes id="ArServerBase_8h" name="ArServerBase.h" local="yes" imported="no">ArServerBase.h</includes>
    <includes id="ArServerSimpleOpener_8h" name="ArServerSimpleOpener.h" local="yes" imported="no">ArServerSimpleOpener.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerSimpleOpener.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerSimpleOpener_8h</filename>
    <class kind="class">ArServerSimpleOpener</class>
  </compound>
  <compound kind="file">
    <name>ArServerUserInfo.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArServerUserInfo_8cpp</filename>
    <includes id="ArServerUserInfo_8h" name="ArServerUserInfo.h" local="yes" imported="no">ArServerUserInfo.h</includes>
    <includes id="md5_8h" name="md5.h" local="yes" imported="no">md5.h</includes>
  </compound>
  <compound kind="file">
    <name>ArServerUserInfo.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArServerUserInfo_8h</filename>
    <class kind="class">ArServerUserInfo</class>
  </compound>
  <compound kind="file">
    <name>ArTempDirectoryHelper.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>ArTempDirectoryHelper_8cpp</filename>
    <includes id="ArTempDirectoryHelper_8h" name="ArTempDirectoryHelper.h" local="yes" imported="no">ArTempDirectoryHelper.h</includes>
  </compound>
  <compound kind="file">
    <name>ArTempDirectoryHelper.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>ArTempDirectoryHelper_8h</filename>
    <class kind="class">ArTempDirectoryHelper</class>
  </compound>
  <compound kind="file">
    <name>changeMapOnServer.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>changeMapOnServer_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>void</type>
      <name>gotConfig</name>
      <anchorfile>changeMapOnServer_8cpp.html</anchorfile>
      <anchor>ab8946d6e7cc5a808b5e38e0af5c59a1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>changeMapOnServer_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>ArClientBase *</type>
      <name>client</name>
      <anchorfile>changeMapOnServer_8cpp.html</anchorfile>
      <anchor>afe594bfb305907ae82f259409cc214cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArClientHandlerConfig *</type>
      <name>configHandler</name>
      <anchorfile>changeMapOnServer_8cpp.html</anchorfile>
      <anchor>a23fc63bf087f036c9b9aeca16a881e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>done</name>
      <anchorfile>changeMapOnServer_8cpp.html</anchorfile>
      <anchor>a1d39aac66e12dae50a24cd7a9100ef33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>newmapname</name>
      <anchorfile>changeMapOnServer_8cpp.html</anchorfile>
      <anchor>a7fbcf2b9c4e9e7018da2261c0274dec9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clientCommandLister.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>clientCommandLister_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>clientCommandLister_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clientDemo.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>clientDemo_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArClientRatioDrive_8h" name="ArClientRatioDrive.h" local="yes" imported="no">ArClientRatioDrive.h</includes>
    <class kind="class">InputHandler</class>
    <class kind="class">OutputHandler</class>
    <member kind="define">
      <type>#define</type>
      <name>VEL_AMOUNT</name>
      <anchorfile>clientDemo_8cpp.html</anchorfile>
      <anchor>a811508c0bfced9ad9ddbc0fe843e59c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>escape</name>
      <anchorfile>clientDemo_8cpp.html</anchorfile>
      <anchor>a12f7c386fb6452d2f8f22417e6dc90fb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>clientDemo_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>clientStringInfoExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>clientStringInfoExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArClientHandlerRobotUpdate_8h" name="ArClientHandlerRobotUpdate.h" local="yes" imported="no">ArClientHandlerRobotUpdate.h</includes>
    <class kind="struct">Item</class>
    <member kind="function">
      <type>void</type>
      <name>handleStringsData</name>
      <anchorfile>clientStringInfoExample_8cpp.html</anchorfile>
      <anchor>a1f680c75bc8f0316b50d84f79907352d</anchor>
      <arglist>(ArNetPacket *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleStringsInfo</name>
      <anchorfile>clientStringInfoExample_8cpp.html</anchorfile>
      <anchor>af21395aeb5e3dd032df3f9a46211a940</anchor>
      <arglist>(ArNetPacket *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>clientStringInfoExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>ArClientBase</type>
      <name>client</name>
      <anchorfile>clientStringInfoExample_8cpp.html</anchorfile>
      <anchor>a1c29a1d0b25060a8fc5beba569fbf5a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; struct Item &gt;</type>
      <name>data</name>
      <anchorfile>clientStringInfoExample_8cpp.html</anchorfile>
      <anchor>aa145b758b8385fd760f174780ccc5c69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArMutex</type>
      <name>dataMutex</name>
      <anchorfile>clientStringInfoExample_8cpp.html</anchorfile>
      <anchor>ab49a1c28e4503dd220ec740ce6ca1edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>go</name>
      <anchorfile>clientStringInfoExample_8cpp.html</anchorfile>
      <anchor>aee8191c767bcded411aa8c5bd8581ce2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configClient.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>configClient_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>void</type>
      <name>gotConfig</name>
      <anchorfile>configClient_8cpp.html</anchorfile>
      <anchor>ab8946d6e7cc5a808b5e38e0af5c59a1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>configClient_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>ArClientBase *</type>
      <name>client</name>
      <anchorfile>configClient_8cpp.html</anchorfile>
      <anchor>afe594bfb305907ae82f259409cc214cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArClientHandlerConfig *</type>
      <name>configHandler</name>
      <anchorfile>configClient_8cpp.html</anchorfile>
      <anchor>a23fc63bf087f036c9b9aeca16a881e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>done</name>
      <anchorfile>configClient_8cpp.html</anchorfile>
      <anchor>a1d39aac66e12dae50a24cd7a9100ef33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configClientToServer.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>configClientToServer_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>void</type>
      <name>gotConfig</name>
      <anchorfile>configClientToServer_8cpp.html</anchorfile>
      <anchor>ab8946d6e7cc5a808b5e38e0af5c59a1f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>configClientToServer_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveConfigFailed</name>
      <anchorfile>configClientToServer_8cpp.html</anchorfile>
      <anchor>a9d210bf1e279f7d64b30aab8b5b93228</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveConfigSucceeded</name>
      <anchorfile>configClientToServer_8cpp.html</anchorfile>
      <anchor>a9eab2e8e43045aaf5d05538a57e0e8e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>ArClientBase *</type>
      <name>client</name>
      <anchorfile>configClientToServer_8cpp.html</anchorfile>
      <anchor>afe594bfb305907ae82f259409cc214cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArClientHandlerConfig *</type>
      <name>configHandler</name>
      <anchorfile>configClientToServer_8cpp.html</anchorfile>
      <anchor>a23fc63bf087f036c9b9aeca16a881e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>file</name>
      <anchorfile>configClientToServer_8cpp.html</anchorfile>
      <anchor>adf16cd437526a5c5e0e0af87745acbb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configServer.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>configServer_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>configServer_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>configServerRobot.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>configServerRobot_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>configServerRobot_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dataPubExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>dataPubExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArServerDataProvider_8h" name="ArServerDataProvider.h" local="yes" imported="no">ArServerDataProvider.h</includes>
    <class kind="class">TestProvider</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>dataPubExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dataSubExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>dataSubExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArClientDataReceiver_8h" name="ArClientDataReceiver.h" local="yes" imported="no">ArClientDataReceiver.h</includes>
    <class kind="class">TestTarget</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>dataSubExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>drawingsExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>drawingsExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <class kind="class">Circle</class>
    <member kind="function">
      <type>void</type>
      <name>exampleArrowsDrawingNetCallback</name>
      <anchorfile>drawingsExample_8cpp.html</anchorfile>
      <anchor>abab39eb1a7fa3903841c77dabeb465f9</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exampleDotsDrawingNetCallback</name>
      <anchorfile>drawingsExample_8cpp.html</anchorfile>
      <anchor>a829cc347fa8f03be4f7e21f52a56b23d</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exampleHomeDrawingNetCallback</name>
      <anchorfile>drawingsExample_8cpp.html</anchorfile>
      <anchor>a7c8ed01400d514a7b9105b92c325f26a</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exampleXDrawingNetCallback</name>
      <anchorfile>drawingsExample_8cpp.html</anchorfile>
      <anchor>ae35734c611c1c0f5e9bc6287f5eee070</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>drawingsExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>drawingsExampleWithRobot.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>drawingsExampleWithRobot_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>void</type>
      <name>exampleArrowsDrawingNetCallback</name>
      <anchorfile>drawingsExampleWithRobot_8cpp.html</anchorfile>
      <anchor>abab39eb1a7fa3903841c77dabeb465f9</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exampleDotsDrawingNetCallback</name>
      <anchorfile>drawingsExampleWithRobot_8cpp.html</anchorfile>
      <anchor>a829cc347fa8f03be4f7e21f52a56b23d</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exampleHomeDrawingNetCallback</name>
      <anchorfile>drawingsExampleWithRobot_8cpp.html</anchorfile>
      <anchor>a7c8ed01400d514a7b9105b92c325f26a</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exampleXDrawingNetCallback</name>
      <anchorfile>drawingsExampleWithRobot_8cpp.html</anchorfile>
      <anchor>ae35734c611c1c0f5e9bc6287f5eee070</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *requestPkt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>drawingsExampleWithRobot_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>getVideoExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>getVideoExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>void</type>
      <name>jpegHandler</name>
      <anchorfile>getVideoExample_8cpp.html</anchorfile>
      <anchor>ab990e842f67b35df051fd7edddd35888</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>getVideoExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>counter</name>
      <anchorfile>getVideoExample_8cpp.html</anchorfile>
      <anchor>a2c605870a4e5975004e2e04a9a033d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rate</name>
      <anchorfile>getVideoExample_8cpp.html</anchorfile>
      <anchor>a40fc078492fcc08ce7ad3957496b4c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rateAsTime</name>
      <anchorfile>getVideoExample_8cpp.html</anchorfile>
      <anchor>ad9766129714f3e0c883bbb9879c85be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useCounter</name>
      <anchorfile>getVideoExample_8cpp.html</anchorfile>
      <anchor>ab2fdc0f1bbbd46b714580926f62fae6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>md5.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>md5_8cpp</filename>
    <includes id="md5_8h" name="md5.h" local="yes" imported="no">md5.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BYTE_ORDER</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a1771b7fb65ee640524d0052f229768c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a96d73bbd7af15cb1fc38c3f4a3bd82e9</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>G</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ad96b7cf3182ce2ba85e5a7a93b12c441</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ae42219072d798876e6b08e6b78614ff6</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ac0eafdc9ee161b71e7af98af736952fd</anchor>
      <arglist>(x, y, z)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTATE_LEFT</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a7417fd4e875360c0533fa5b412cdab49</anchor>
      <arglist>(x, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a62f837c16bbbf6e255786b01ef417492</anchor>
      <arglist>(a, b, c, d, k, s, Ti)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a62f837c16bbbf6e255786b01ef417492</anchor>
      <arglist>(a, b, c, d, k, s, Ti)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a62f837c16bbbf6e255786b01ef417492</anchor>
      <arglist>(a, b, c, d, k, s, Ti)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a62f837c16bbbf6e255786b01ef417492</anchor>
      <arglist>(a, b, c, d, k, s, Ti)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T1</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ac16509a75e3d3fc46b9df1726be486ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T10</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a3536974783988d0c205029ed0812f30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T11</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>abeeb6ae117dd230314d4a5c1e596c741</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T12</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>afd5bf0370ca515c9464244666f9641c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T13</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>aa06904ece927aa128fc714c348160a06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T14</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a21df9a0739084ddd6287286ce92e7478</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T15</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>adc159a06a3b54412f6ea70ead02438b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T16</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a7e3fcb261c24ae020b9aff7be20b86ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T17</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a19505a0c2fc06e1c4c64be198f78a156</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T18</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a59fe2f345c8bc8c139e3ac50840d79d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T19</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a72ce9c35e7afbefae2af2444e2d4177e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T2</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a259c2993ee45e06a4ea8150451a7a70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T20</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a1fb43dcd147dd89fb67e8f9b2893d334</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T21</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a5b214b9ca03699c9b8d037af1509ff11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T22</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a80329150b8e8b5b50a6d7302349e98a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T23</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>acf792dcc5f0d1bc2b8d1287b17d72ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T24</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a48de7c97bc6828e5cf9c7fc0db5ca81a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T25</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a53aa2f768c6a022a17d3fc015cf3d012</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T26</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a43a89cb83a835ff0a198ac8d0e0354f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T27</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>af88a549baf074feaea357cf86944fe5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T28</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>afb60889361634ec300700e9f86ff0df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T29</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a65314705cc7e1b16abda26f959156a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T3</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a5d800c5f04f8638061876b9e32c6c508</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T30</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>aa8ca9cfde8695b46070bfd0a7bff2c3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T31</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a3dbc83c9d83493c94e4df01ffd30a5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T32</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>afbb65d5d87ebcb862a1e9623a9f9cfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T33</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a758ff3fff3a1d1b2f529a2f3fc70be10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T34</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>aea009020568c856d458f5aaf10205131</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T35</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ac5a7c6ee8dea0ccb09dfc611bd08a0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T36</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a552c6bf2a2dbf1f374fbc920043cf985</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T37</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a257f5770ee4a2539c22a971d078f7d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T38</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a7116c4f5d98bf98dc1ea46089142ee75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T39</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a6efe3781c8bb0baad5ac307308b5c677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T4</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a935a699e9bf1bffc5dad8738d3cd24c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T40</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a95926c75b59a707e570147442957963e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T41</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a8516100c31eaf6e8a0c3ca7e1d68d5a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T42</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ad95c32f5d3a09b6d8cf5a17d2cfbe800</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T43</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a20054c1434c668ca4722e97aa54f2bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T44</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a516aa8734affadd856417056d81eab93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T45</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a178fab52ae52ca723050819c504009a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T46</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a0d052aa79c77ceb944fe113db08fc816</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T47</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a99cebbf76190a6be9d93f89068801925</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T48</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a8e03c936168de4e755c6317af7ba6283</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T49</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a7b9a3f7a4f898ae604220d292eaa65e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T5</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a6931b110a9ed5548e88ca9ed2d86fd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T50</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a0f646ac0e60ce4c1cc2470b57115a2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T51</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a09099e8bdb15255f1bc69db50dfe530c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T52</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>afb730bef77364a50029257176cc73873</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T53</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a6e56e5ee32dc77a70b1f09466dd3c23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T54</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a1c68286a0508fc986f39cced276b2e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T55</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a84b5a55558ea68f8db1cbf414ea32964</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T56</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a1930a7cb3add95822ff429dabd127369</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T57</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a25376a7f6c04259754192cc5ae4d1d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T58</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a61ec0679a9210c8f1733221ded0fd85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T59</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a6761c8bd1fae043d208fe975ff16facc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T6</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a5b569de807982d649a39b92356168b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T60</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a670003ba5026a4844ee5e9281f0810bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T61</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a2f2fde9f87b13b922513e5f8cb838fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T62</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a3e85ed30c56ed0624d6c7d51c5a4c130</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T63</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ac106a00c97fbf324d222e4f1ed07f912</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T64</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a9500449424a2e7b835530ad9a5d8d6b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T7</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a2ecc28a0523643551285b16c189518a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T8</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>ac9b9e45bd8d2239449780742dce8dd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T9</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a21163de9ed7de4dd54e63de71be39ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MASK</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a2d8a5083a030f6b36bc9a5fe6d71b519</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md5_append</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a345851d2511c7174fdbf953588e4f85d</anchor>
      <arglist>(md5_state_t *pms, const md5_byte_t *data, int nbytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md5_finish</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>af926e22dea5f31719375681662188fac</anchor>
      <arglist>(md5_state_t *pms, md5_byte_t digest[16])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md5_init</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>a92b88e6e65a2f3a2db4ab6ae8cc9ad54</anchor>
      <arglist>(md5_state_t *pms)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>md5_process</name>
      <anchorfile>md5_8cpp.html</anchorfile>
      <anchor>acaf6eca47e11c2673e64031359b139f8</anchor>
      <arglist>(md5_state_t *pms, const md5_byte_t *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>md5.h</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>md5_8h</filename>
    <class kind="struct">md5_state_s</class>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>md5_byte_t</name>
      <anchorfile>md5_8h.html</anchorfile>
      <anchor>a7766d96ec42fb9d9608fdf101e3be092</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct md5_state_s</type>
      <name>md5_state_t</name>
      <anchorfile>md5_8h.html</anchorfile>
      <anchor>a8aec9a62260fcc2c413ce2c5afe361c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>md5_word_t</name>
      <anchorfile>md5_8h.html</anchorfile>
      <anchor>a5898e8761a27e6193c4566fe2e41f330</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md5_append</name>
      <anchorfile>md5_8h.html</anchorfile>
      <anchor>a345851d2511c7174fdbf953588e4f85d</anchor>
      <arglist>(md5_state_t *pms, const md5_byte_t *data, int nbytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md5_finish</name>
      <anchorfile>md5_8h.html</anchorfile>
      <anchor>af926e22dea5f31719375681662188fac</anchor>
      <arglist>(md5_state_t *pms, md5_byte_t digest[16])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>md5_init</name>
      <anchorfile>md5_8h.html</anchorfile>
      <anchor>a92b88e6e65a2f3a2db4ab6ae8cc9ad54</anchor>
      <arglist>(md5_state_t *pms)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>overview.dox</name>
    <path>D:/src/MSw/Aria/ArNetworking/docs/</path>
    <filename>overview_8dox</filename>
  </compound>
  <compound kind="file">
    <name>popupExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>popupExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <class kind="class">SensorDetectPopup</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>popupExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ptzCameraClientExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>ptzCameraClientExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <class kind="class">ArClientHandlerCamera</class>
    <class kind="class">ArNetCameraRequest</class>
    <class kind="class">PtzCameraExample</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>ptzCameraClientExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RemoteRequestAPI.dox</name>
    <path>D:/src/MSw/Aria/ArNetworking/docs/</path>
    <filename>RemoteRequestAPI_8dox</filename>
  </compound>
  <compound kind="file">
    <name>robotUpdateExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>robotUpdateExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArClientHandlerRobotUpdate_8h" name="ArClientHandlerRobotUpdate.h" local="yes" imported="no">ArClientHandlerRobotUpdate.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>robotUpdateExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>statusChanged</name>
      <anchorfile>robotUpdateExample_8cpp.html</anchorfile>
      <anchor>ae944d0b1c0b4860fc0a1cdc1b1eae5d4</anchor>
      <arglist>(const char *mode, const char *status)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>serverDemo.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>serverDemo_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArServerModeJogPosition_8h" name="ArServerModeJogPosition.h" local="yes" imported="no">ArServerModeJogPosition.h</includes>
    <includes id="ArServerAdvertiser_8h" name="ArServerAdvertiser.h" local="yes" imported="no">ArServerAdvertiser.h</includes>
    <includes id="ArServerModeTestLoop_8h" name="ArServerModeTestLoop.h" local="yes" imported="no">ArServerModeTestLoop.h</includes>
    <includes id="ArServerInfoTrailDrawing_8h" name="ArServerInfoTrailDrawing.h" local="yes" imported="no">ArServerInfoTrailDrawing.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>serverDemo_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simpleServerExample.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>simpleServerExample_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>simpleServerExample_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>videoServerForwarder.cpp</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>videoServerForwarder_8cpp</filename>
    <includes id="ArNetworking_8h" name="ArNetworking.h" local="yes" imported="no">ArNetworking.h</includes>
    <includes id="ArServerModeJogPosition_8h" name="ArServerModeJogPosition.h" local="yes" imported="no">ArServerModeJogPosition.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>videoServerForwarder_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>RemoteRequestAPI</name>
    <title>ArNetworking Remote Request API List</title>
    <filename>RemoteRequestAPI</filename>
    <docanchor file="RemoteRequestAPI">Receiving</docanchor>
    <docanchor file="RemoteRequestAPI">Manual</docanchor>
    <docanchor file="RemoteRequestAPI">modes</docanchor>
    <docanchor file="RemoteRequestAPI">stopmode</docanchor>
    <docanchor file="RemoteRequestAPI">ratiodrivemode</docanchor>
    <docanchor file="RemoteRequestAPI">jogpositionmode</docanchor>
    <docanchor file="RemoteRequestAPI">wandermode</docanchor>
    <docanchor file="RemoteRequestAPI">dockmode</docanchor>
    <docanchor file="RemoteRequestAPI">gotopointmode</docanchor>
    <docanchor file="RemoteRequestAPI">tourgoalsmode</docanchor>
    <docanchor file="RemoteRequestAPI">status</docanchor>
    <docanchor file="RemoteRequestAPI">strings</docanchor>
    <docanchor file="RemoteRequestAPI">systemstatus</docanchor>
    <docanchor file="RemoteRequestAPI">camera</docanchor>
    <docanchor file="RemoteRequestAPI">camerarequests</docanchor>
    <docanchor file="RemoteRequestAPI">camerareplies</docanchor>
    <docanchor file="RemoteRequestAPI">config</docanchor>
    <docanchor file="RemoteRequestAPI">map</docanchor>
    <docanchor file="RemoteRequestAPI">mapscanning</docanchor>
    <docanchor file="RemoteRequestAPI">files</docanchor>
    <docanchor file="RemoteRequestAPI">commMonitor</docanchor>
    <docanchor file="RemoteRequestAPI">popups</docanchor>
    <docanchor file="RemoteRequestAPI">drawings</docanchor>
    <docanchor file="RemoteRequestAPI">customcommands</docanchor>
    <docanchor file="RemoteRequestAPI">auth</docanchor>
    <docanchor file="RemoteRequestAPI">ARNL</docanchor>
  </compound>
  <compound kind="class">
    <name>ArCentralForwarder</name>
    <filename>classArCentralForwarder.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addHandler</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a308e2767b536cb413ec1ba2c23009a74</anchor>
      <arglist>(const char *name, ArFunctor1&lt; ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArCentralForwarder</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a744e6e3eda6d6b7e52a7544266e11f67</anchor>
      <arglist>(ArServerBase *mainServer, ArSocket *socket, const char *robotName, int startingPort, std::map&lt; int, ArTime * &gt; *usedPorts, ArFunctor2&lt; ArCentralForwarder *, ArServerClient * &gt; *notifyServerClientRemovedCB, const char *enforceProtocolVersion, ArServerCommands::Type enforceType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArCentralForwarder</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a51602d6b815790ffb616cf0536ad53a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>callOnce</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a7908d7fa2b9c1a043bba513fe8f37449</anchor>
      <arglist>(double heartbeatTimeout, double udpHeartbeatTimeout, double robotBackupTimeout, double clientBackupTimeout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>dataExists</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a09b7c8d93a789afef21ec401d292ef78</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArClientBase *</type>
      <name>getClient</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a3020ab108707354561be1608f28a45f6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPort</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6380265164a3eabcb3a6e9c19d9660f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getRobotName</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>aed239c95ac743783c6441096bff04826</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArServerBase *</type>
      <name>getServer</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a2ae5fb7a26533e3f1e6708a81c87a4cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>aed29432af304ce163d94be9de41cd9a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remHandler</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a7656abd7fab35bcc7b21496d790b3115</anchor>
      <arglist>(const char *name, ArFunctor1&lt; ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>request</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a24778104f1c849176c0a078530dd3661</anchor>
      <arglist>(const char *name, long mSec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requestOnce</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a5f9ac1abfd6ddb9dd1a3a860befc65ec</anchor>
      <arglist>(const char *name, ArNetPacket *packet=NULL, bool quiet=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requestOnceUdp</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a810e72e3bae9c870269eaed3abba47a7</anchor>
      <arglist>(const char *name, ArNetPacket *packet=NULL, bool quiet=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requestOnceWithString</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a9dbbcd2cad6aab59d0b9c1ace0c196d6</anchor>
      <arglist>(const char *name, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>willReplace</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a54077abcfd2ec8cf81564d70d9fc5db2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArCentralForwarder</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a485f9ceb0e8496dc89961700552958d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <name>ReturnType</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6844773eaf1c1b39a53c8cc4417f8342</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN_NONE</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6844773eaf1c1b39a53c8cc4417f8342a3496674755d46a601dc2fb00d69133cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN_SINGLE</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6844773eaf1c1b39a53c8cc4417f8342ad34fc048337b251fd1f13da3344ca6b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN_VIDEO</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6844773eaf1c1b39a53c8cc4417f8342a68e36b9520ff2c7fe7dac930d7f962d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN_UNTIL_EMPTY</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6844773eaf1c1b39a53c8cc4417f8342aa751b0656ccd8d0d58239dad19b09f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN_COMPLEX</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6844773eaf1c1b39a53c8cc4417f8342a94947964d4fc67e0b62cc5c7f4abece2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RETURN_VIDEO_OPTIM</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6844773eaf1c1b39a53c8cc4417f8342af87ab227a1afa28adf8787473c3e98f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>State</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a2b8bbbfa0a3271f11f61e54576e0131c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_STARTING</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a2b8bbbfa0a3271f11f61e54576e0131ca0e6f96762eb4c07dea30e200e7f40350</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CONNECTING</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a2b8bbbfa0a3271f11f61e54576e0131ca52c612de7b1a40a4c197a543df6c0099</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_GATHERING</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a2b8bbbfa0a3271f11f61e54576e0131cadc22bf7017a315ad9a497fcbf0b53da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CONNECTED</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a2b8bbbfa0a3271f11f61e54576e0131ca1deabe169e195fb6169450a9ebdff59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkRequestOnces</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>af30683adeacdddd0338b12f9c923a1e0</anchor>
      <arglist>(unsigned int command)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clientServerClientRemoved</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a305b1d87e792e4f8e9b6610073901349</anchor>
      <arglist>(ArServerClient *client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>connectedCallOnce</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>aa458c0d4f84d67c31a35ee36abfe3cea</anchor>
      <arglist>(double heartbeatTimeout, double udpHeartbeatTimeout, double robotBackupTimeout, double clientBackupTimeout)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>connectingCallOnce</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a9bde96b12cad883cdaeac1c7ea7d06f4</anchor>
      <arglist>(double heartbeatTimeout, double udpHeartbeatTimeout, double robotBackupTimeout, double clientBackupTimeout)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>gatheringCallOnce</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a0a196d9a267e16cb7a8a56b0b7269492</anchor>
      <arglist>(double heartbeatTimeout, double udpHeartbeatTimeout, double robotBackupTimeout, double clientBackupTimeout)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ReturnType</type>
      <name>getReturnType</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a6f6aedf0b5f7660d3601da864e18d70f</anchor>
      <arglist>(int command)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalRequestChanged</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a75e7c2edb086f55c8a71a0b2a82232e8</anchor>
      <arglist>(long interval, unsigned int command)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>internalRequestOnce</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ad60d51c142fd51ba3c83982e379876ff</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, bool tcp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netCentralHeartbeat</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a3d1984fce9b613fad56650cdf71977be</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveData</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a50ae9f94a38d94133fdcd2fc33371a56</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>robotServerClientRemoved</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a7f795e740934530f417d17049a1f2a30</anchor>
      <arglist>(ArServerClient *client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLastBroadcast</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ab933c00998db050ad0adf8ea9b3ccd6e</anchor>
      <arglist>(unsigned int command)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLastRequest</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ad17fec14b6f505cccc4bbcc555bc5d49</anchor>
      <arglist>(unsigned int command)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>startingCallOnce</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>adeca336c1d24c92a7d4b9608b40ec064</anchor>
      <arglist>(double heartbeatTimeout, double udpHeartbeatTimeout, double robotBackupTimeout, double clientBackupTimeout)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>client</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a4c8445a05be41f89ba9848c721df72a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myBeingReplaced</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ab75ad426a00fec7c9f7df4afcbe447b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a9c1f411066550249df20b8892aefb559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArCentralForwarder, ArServerClient * &gt;</type>
      <name>myClientServerClientRemovedCB</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a96f9534191ff03a7172c3539c8271d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myEnforceProtocolVersion</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a902cd49067a3d30915d8a78dd6679abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerCommands::Type</type>
      <name>myEnforceType</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a0361979f3aabca1e32cb783ff3fe3571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2&lt; ArCentralForwarder *, ArServerClient * &gt; *</type>
      <name>myForwarderServerClientRemovedCB</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a175dc9664aa5b49706b89cfa39d5bc36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArCentralForwarder, long, unsigned int &gt;</type>
      <name>myInternalRequestChangedFunctor</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ac6442e6676ebf6e4647555fc4f802b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor3C&lt; bool, ArCentralForwarder, ArServerClient *, ArNetPacket *, bool &gt;</type>
      <name>myInternalRequestOnceFunctor</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ac15630ca8b4a625ab1039b2c320fa72a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, ArTime * &gt;</type>
      <name>myLastBroadcast</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>aa2c325c22b2bb4b846a3298720b28055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, ArTime * &gt;</type>
      <name>myLastRequest</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a9f3aac5693f8add6a79a809208b6a007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastSentCentralServerHeartbeat</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ae62194c81b7df30dcee2082df8008d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastTcpHeartbeat</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>aa6daf496dafb9f84edbf456af3967c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastUdpHeartbeat</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a9e214ee5bdd7b615fcee04d99289f91e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myMainServer</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a0b5a6e14b980909d2a66d2e220a02c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArCentralForwarder, ArNetPacket * &gt;</type>
      <name>myNetCentralHeartbeatCB</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a205969bc093846f693d8a469f49230d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myPort</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ae1f50bbf76413c2753d514366e3b5d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPrefix</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a319d6ce403a3caa9259404a517357cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArCentralForwarder, ArNetPacket * &gt;</type>
      <name>myReceiveDataFunctor</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a9c896aa92acd39bcc6abd8de86035924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, std::list&lt; ArServerClient * &gt; * &gt;</type>
      <name>myRequestOnces</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a407dbd463502121d0e86712ceaaf4a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, ReturnType &gt;</type>
      <name>myReturnTypes</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a421bb4911a513f15060a05b487550568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myRobotHasCentralServerHeartbeat</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a8a42b8cbd44a3b5ac50e2871426e8409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myRobotName</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a0ffd590c90698e295cade9114736cb05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArCentralForwarder, ArServerClient * &gt;</type>
      <name>myRobotServerClientRemovedCB</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a69a0d1cc498b66a59c803097d1cdad78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a5b143eae30b132ddceceb550d11c091c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket *</type>
      <name>mySocket</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a617aece1749c31efcb4d6f4c544cbdb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myStartingPort</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a4cbb1e4caf8fd29f577527b4e5a9b5b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>myState</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>ace1ae5d385b8b61d97c46ac3cae2aa66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, ArTime * &gt; *</type>
      <name>myUsedPorts</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a507b4632e8387684b8d2f30e2ef186ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>server</name>
      <anchorfile>classArCentralForwarder.html</anchorfile>
      <anchor>a000aac7a9051abfc32a3fd6bd4ead746</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArCentralManager</name>
    <filename>classArCentralManager.html</filename>
    <base>ArASyncTask</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addCycleCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a035f02a3973e3878292cbb88f34a8dd0</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addForwarderAddedCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a926d049b8c380bd6e8637f721c383892</anchor>
      <arglist>(ArFunctor1&lt; ArCentralForwarder * &gt; *functor, int priority=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addForwarderRemovedCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a160d821c501ec99a4990f8e6d4ec73f9</anchor>
      <arglist>(ArFunctor1&lt; ArCentralForwarder * &gt; *functor, int priority=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArCentralManager</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a94ff98a6843b6bcf9706189f244af0d1</anchor>
      <arglist>(ArServerBase *robotServer, ArServerBase *clientServer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArCentralManager</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>af6e7221af37675aeb9baa13a67ed128c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>enforceProtocolVersion</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a22ab9cf0f5b04595abb7964825c71dd3</anchor>
      <arglist>(const char *protocolVersion)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>enforceType</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a090c30f4c8e7a16929d6e0d93604f29f</anchor>
      <arglist>(ArServerCommands::Type type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forwarderServerClientRemovedCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>aa12fce8de08e80fa59053dfd028942b6</anchor>
      <arglist>(ArCentralForwarder *forwarder, ArServerClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logConnections</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>ae619bd2d28e8f95e782876609b8c65e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mainServerClientRemovedCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a96191b732dc4b5e25ed4591e251e63b5</anchor>
      <arglist>(ArServerClient *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netClientList</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>aa98c3a6a711661870f52695b97307bb3</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netServerSwitch</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>aa7ec20a2ab4b6ee5ed5c3a7c05ce65a4</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remCycleCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>abcaf246ab55e00552dd36addfadd200b</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remForwarderAddedCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>ab27818e2c462bd359118519db237666e</anchor>
      <arglist>(ArFunctor1&lt; ArCentralForwarder * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remForwarderRemovedCallback</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>af074f1e5e7c4abceea6578c82c32d348</anchor>
      <arglist>(ArFunctor1&lt; ArCentralForwarder * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a2365aa28aa0c04d2c4b567ab9baa0054</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArCentralManager</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>ad47d2fa324ebbf16c53d170ff209a4a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>close</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a4d4e8f14a02d6ec89d6570e12520bade</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>forwarderAdded</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a0ca589c0200cf29c27eb27e31f1550d2</anchor>
      <arglist>(ArCentralForwarder *forwarder)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>forwarderRemoved</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>ae44a224f2e80271d5df4e17904960df5</anchor>
      <arglist>(ArCentralForwarder *forwarder)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>processFile</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a5657d97b8b9a4bc8a7e91ccee70b216c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>removePendingDuplicateConnections</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>aa82f2fd35b64afa3730dd85acc11e972</anchor>
      <arglist>(const char *robotName)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArCentralManager &gt;</type>
      <name>myAriaExitCB</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a9f62926766fba714461fa41fe8354036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCallbackMutex</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a90e798df7e4509f07d17b95d703de5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myClientBackupTimeout</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a99ac778db602ffb05f8a566f869b50b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myClientNames</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a89cbc19819b963b04a0522f9e39a7d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myClientServer</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a88cda0c837403e26faa1ab05c50d8688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArSocket * &gt;</type>
      <name>myClientSockets</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a0cc3d44032b20f34bfc838a1e8e000ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::UByte4</type>
      <name>myClosingConnectionID</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a70f8fa9230798944756bfb09b278cb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myCycleCBList</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a9e101cee24b7f15bfadf1d77b6ced754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>af7f381b4d7bf2d25ba1a5e7427df5adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myEnforceProtocolVersion</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a6d5da8716cc06c3fdaf11e52aa79c549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerCommands::Type</type>
      <name>myEnforceType</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>af6c79ae3252ab84e76bdafd115f6abfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::multimap&lt; int, ArFunctor1&lt; ArCentralForwarder * &gt; * &gt;</type>
      <name>myForwarderAddedCBList</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>af1685007b4a39db1ab0772799eb279ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::multimap&lt; int, ArFunctor1&lt; ArCentralForwarder * &gt; * &gt;</type>
      <name>myForwarderRemovedCBList</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>af0a4f0ac4029b1a5180c11791607cd54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArCentralForwarder * &gt;</type>
      <name>myForwarders</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a1b0c2564787a910da83f41d39d87483c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArCentralManager, ArCentralForwarder *, ArServerClient * &gt;</type>
      <name>myForwarderServerClientRemovedCB</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a8fede4569877c5849a74fa240d23a193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myHeartbeatTimeout</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>ae1ac761f61fc61101c4dfa61a524d323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myLoopMSecs</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a7468f46332fe8bf198e2a95bef0c7edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArCentralManager, ArServerClient * &gt;</type>
      <name>myMainServerClientRemovedCB</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>aaa14da16a756a75f978ed0a32eeb9c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myMostClients</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>afc973d8ad75751dc6dc75caebbd92510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myMostForwarders</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a1cc1919adfa935cf856c7916c922ac26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArCentralManager, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetClientListCB</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>adb7a3260e45bc0b169a8f5e3d4ac98f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArCentralManager, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetSwitchCB</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>adad954cd62af41ac78c953f058bdadcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myOnSocket</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a30756c15095438e0796a720bc90d8678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArCentralManager &gt;</type>
      <name>myProcessFileCB</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a8b8a100b5a5d8527b98e9d80b87047be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myRobotBackupTimeout</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a12a91c5e9953c3c50db587b541f4aba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myRobotServer</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a38b7c96d9a47dc459bac02e1eb8df1a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTimeChecker</type>
      <name>myTimeChecker</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>ace09162f598a07678dfe5b1d75a9db31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myUdpHeartbeatTimeout</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>ad8884dd842d6489d8cdd9f175c09cd49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, ArTime * &gt;</type>
      <name>myUsedPorts</name>
      <anchorfile>classArCentralManager.html</anchorfile>
      <anchor>a3882890250b5b2cf48e831174e16e0c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientArg</name>
    <filename>classArClientArg.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addAncestorListToPacket</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a84fe20ed68a035a436cf4a6be26a8a63</anchor>
      <arglist>(const std::list&lt; ArConfigArg * &gt; &amp;ancestorList, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addArgTextToPacket</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a72674d4dc28948757bcdfe9d7b46e10b</anchor>
      <arglist>(const ArConfigArg &amp;arg, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addListBeginToPacket</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a1b015ca347ed60e3e2e3150f6d04db03</anchor>
      <arglist>(ArConfigArg *parentArg, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addListEndToPacket</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>aad052a852fb35bef6050910e74fbedde</anchor>
      <arglist>(ArConfigArg *parentArg, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientArg</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a417a8c49ad7e39575991fec0f5eee217</anchor>
      <arglist>(bool isDisplayHintParsed=false, ArPriority::Priority lastPriority=ArPriority::LAST_PRIORITY, int version=1, bool isSingleParam=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>argTextToBuf</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>af84a421f68b7966c624d542ef05eab56</anchor>
      <arglist>(const ArConfigArg &amp;arg, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>argValueToBuf</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a10c7a699fa002f5ef6dd7ce327fdedb7</anchor>
      <arglist>(const ArConfigArg &amp;arg, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>bufToArgValue</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a53ca4b30d2afa8b18c38df1e7ada74ba</anchor>
      <arglist>(ArNetPacket *packet, ArConfigArg &amp;arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createArg</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a276d85d646e16484835b24f92a49e09c</anchor>
      <arglist>(ArNetPacket *packet, ArConfigArg &amp;argOut, std::string *parentPathNameOut=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createPacket</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>aff59929a234d4468f0e39d5ce03a213f</anchor>
      <arglist>(const ArConfigArg &amp;arg, ArNetPacket *packet, const char *parentPathName=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientArg</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>aeac4833967011f1dc08c4843d0b1eeac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSendableParamType</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a1ce072950f177923a8c014402abdedee</anchor>
      <arglist>(const ArConfigArg &amp;arg, bool isIncludeSeparator=true)</arglist>
    </member>
    <member kind="enumvalue">
      <name>BUFFER_LENGTH</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a7ef127dda08f47d8ea2c7b62d52672caaf9ca3a828ed347da4b93e3122b7dc582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myBuffer</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>afe430d5670fc91c1032e4d5664dd9972</anchor>
      <arglist>[BUFFER_LENGTH]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myDisplayBuffer</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a1b48fbc8bcf634717044dc527ffcea4b</anchor>
      <arglist>[BUFFER_LENGTH]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myExtraBuffer</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a4e337f388ec3a1e01d3b64dc0641f154</anchor>
      <arglist>[BUFFER_LENGTH]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsDisplayHintParsed</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a8eb5ed0d0682e36bc4bb257dcc23d1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsSingleParam</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a8095986253d0c823433f3d7992574a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPriority::Priority</type>
      <name>myLastPriority</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>acc31b39b540224788acbe8fefa455ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myParentPathNameBuffer</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a3d7abaf68abd793a92c5721ffdb969dc</anchor>
      <arglist>[BUFFER_LENGTH]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myVersion</name>
      <anchorfile>classArClientArg.html</anchorfile>
      <anchor>a0eb271d2f26b4e441aa718e3e0f25123</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientBase</name>
    <filename>classArClientBase.html</filename>
    <base>ArASyncTask</base>
    <class kind="class">ArClientBase::Tracker</class>
    <member kind="enumvalue">
      <name>CLIENT_KEY_LENGTH</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a307d45f7ff6432775c9f6a6be2a46b9cafa66f83897cf6fac0c909e409984730a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>ClientState</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_NO_CONNECTION</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0a2dc9a243a788b28855a2120ff03d91c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_FAILED_CONNECTION</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0a68d3d360258b80db85e7b0eb2220e7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_OPENED_SOCKET</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0ae8788d50c4490a33e2d1d1532913001f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_EXCHANGED_INTROS</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0a2d6dea49e2382d59c9ef98685f1e8e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_REJECTED</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0a02f2e7a7258afdcb09500599fce5e34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_WAITING_LIST</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0ae2760604361ba1d0263e9ad255afdc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CONNECTED</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0ae25062edaf7738d1b4bb46824fecb562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_LOST_CONNECTION</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af81d1a763266af658676640386e0bdf0a00a87398679ccc603667d8df5863f528</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>NonBlockingConnectReturn</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5566cb8173dd4c9ab4bcd3927c6af08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_BLOCKING_CONTINUE</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5566cb8173dd4c9ab4bcd3927c6af08fa5247a113a022404af73587ada6251d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_BLOCKING_CONNECTED</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5566cb8173dd4c9ab4bcd3927c6af08fab549562d74947d93718d2e84d26c83e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_BLOCKING_FAILED</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5566cb8173dd4c9ab4bcd3927c6af08fa33c6c425717634c2e0988d8ed09cc5a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCycleCallback</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a927e8816c53d7c3c0244cf1d8ad6f68b</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDisconnectOnErrorCB</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad3e597486ac95414f45f45a5b4bece8b</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addHandler</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af75610dd7e91d98097de1b252d0bacd5</anchor>
      <arglist>(const char *name, ArFunctor1&lt; ArNetPacket * &gt; *functor, bool takeOwnershipOfFunctor=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addServerShutdownCB</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a0d003cf30314ff582e08f4254e8d4656</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientBase</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ab2cf2d19c6da6490fe4c04554a7f31b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blockingConnect</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aafda00e4b6b85c5ddbfd55d54575e441</anchor>
      <arglist>(const char *host, int port, bool log=true, const char *user=NULL, const char *password=NULL, const char *openOnIP=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataExists</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a873a731b968b4e3359c60d592122770b</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad260e1e7127e1f4116c0feca12febe7d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectSoon</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a07a9b5d106fc8ca61754a560ac64a773</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enforceProtocolVersion</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a3f8c332ceee2111b1813b438e413e0c9</anchor>
      <arglist>(const char *protocolVersion, bool log=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enforceType</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a96d69ef43a3d460b07a036a482330a0f</anchor>
      <arglist>(ArServerCommands::Type type, bool log=true)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>findCommandFromName</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac50bd95e8a0649f6347745c10176da74</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finishNonBlockingDisconnect</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a59e95e3eeaec12a3925ed3eb13d13b5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getClientKey</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a6e639770e8392cb106c71e7c68b24cb9</anchor>
      <arglist>(unsigned char key[CLIENT_KEY_LENGTH])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getConnectTimeoutTime</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a04ecf7d39ef1062a26f82f848dc2bcbb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; unsigned int, ArClientData * &gt; *</type>
      <name>getDataMap</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a792f22a79dbcef9122ba69946315df16</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDebugLogging</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a98514abd83464f0bda9af37f30018c41</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getHost</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a1c10f8408523e85a6d891d0331fa6259</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastPacketReceived</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a37a32ea9c66bae5a644ab6625568ecdd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getLogPrefix</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a88796283202dd686aa9955a34614ad9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aa62374104cb01052e5edb5517e7de5a0</anchor>
      <arglist>(ArNetPacket *packet, bool internalCall=false)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad331af6cfcbc37079d4f1bb283cd509e</anchor>
      <arglist>(unsigned int command, bool internalCall=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPort</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a9f5d72f8951f20a3bea6094fcbb9af52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getReceivedArgRetList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>abebd9b3fd56c9401384876ffae90785a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getReceivedDataList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a9146d03d37cf37f85f52c08db84aae15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getReceivedGroupAndFlagsList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad30d595c20eafd7058895b9e41b3998c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRejected</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aee9339f92bffb1d996d79069b50de114</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRejectedString</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a044c843a6a2714e5dfd0548c99db5549</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getRobotName</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a178422ad8149957fe999e1b510fcb61d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ClientState</type>
      <name>getState</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a6db158596a22ebe1c073b2575621c121</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>struct in_addr *</type>
      <name>getTcpAddr</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a33a8c7986a086a7a9ef2b68145a85d1c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSocket *</type>
      <name>getTcpSocket</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aed41a05522e8226f224b8548ea381bfb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSocket *</type>
      <name>getUdpSocket</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a7c413fed28c90c2784d685e44c6cc105</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalBlockingConnect</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a75411858f1058ff503f42bbeab88858a</anchor>
      <arglist>(const char *host, int port, bool log, const char *user, const char *password, ArSocket *tcpSocket, const char *openOnIP=NULL)</arglist>
    </member>
    <member kind="function">
      <type>NonBlockingConnectReturn</type>
      <name>internalNonBlockingConnectContinue</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a39d46ebf1e5e28326fbe60c569f113e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>NonBlockingConnectReturn</type>
      <name>internalNonBlockingConnectStart</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a4c5b2436e7efbce5f7325e3cafd085d8</anchor>
      <arglist>(const char *host, int port, bool log, const char *user, const char *password, ArSocket *tcpSocket, const char *openOnIP=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ae496055761ec07b824ceef7e3c6281f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isStopped</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a59ad77df6c8aad1ff39791a20b122440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTcpOnlyFromServer</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ae92349fdcb65ff332cd46f6a777d007b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTcpOnlyToServer</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a160a0f61ba0dc6b72ef54309fea37cca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logDataList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad77e87d97528439fb884be5c1f831104</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logTracking</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aca6670002abd10af169aab84bd2dd1ad</anchor>
      <arglist>(bool terse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnce</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a156525a1b5ca6a26c8b72c48b3c06848</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processPacket</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a8f2e8920b136953c0deccb6e3fe3ee73</anchor>
      <arglist>(ArNetPacket *packet, bool tcp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processPacketUdp</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aace1f3cde948cc76173978a2a4062834</anchor>
      <arglist>(ArNetPacket *packet, struct sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCycleCallback</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a416ab3c98c526e07e0e4140848409d8b</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDisconnectOnErrorCB</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a7cb696df3e36f4d8258ed0091e553349</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remHandler</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a904bea3bf052b9a13bba5d81e45f68f9</anchor>
      <arglist>(const char *name, ArFunctor1&lt; ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remServerShutdownCB</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a2399734098ee84b0b344644e76fc07d6</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>request</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a0a36a40fe2598eb214368ae8c3a26ca1</anchor>
      <arglist>(const char *name, long mSec, ArNetPacket *packet=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestByCommand</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a6dcbb42038ccfa79e85c45a89aa6df0b</anchor>
      <arglist>(unsigned int command, long mSec, ArNetPacket *packet=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnce</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a2dcd11daf8d2045d460b83733e6932d0</anchor>
      <arglist>(const char *name, ArNetPacket *packet=NULL, bool quiet=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnceByCommand</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a952ba6e629abdb7d01eabc247ca6cd4d</anchor>
      <arglist>(unsigned int command, ArNetPacket *packet=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnceByCommandUdp</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aa45eea17535cde2664a071c0591f534a</anchor>
      <arglist>(unsigned int command, ArNetPacket *packet=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnceUdp</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ab7e431bdf19aa838576c7928302efe67</anchor>
      <arglist>(const char *name, ArNetPacket *packet=NULL, bool quiet=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnceWithDouble</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a972cebefaa57d709158b5b0d2c459d0f</anchor>
      <arglist>(const char *name, double val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnceWithInt16</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad70a1f142b30a08ab54a02146a4c2005</anchor>
      <arglist>(const char *name, ArTypes::Byte2 val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnceWithInt32</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a539a9fd371bade04042cf48191afd674</anchor>
      <arglist>(const char *name, ArTypes::Byte4 val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestOnceWithString</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a3b3783c386707050eb83287cb53dd07b</anchor>
      <arglist>(const char *name, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestStop</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aee1400e28ba15f18c032ea7f3b414cfd</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestStopByCommand</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a993ac794e3e3df2a401a155600596ae8</anchor>
      <arglist>(unsigned int command)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTracking</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a4ed44a6f3835bd41e4aff334b4dbf764</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a012118e5e43ee6e75f9d56ad5fbf2b7b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runAsync</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a778c406a8eda15109afda20521acf502</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aee8cd490ba2ce7dcd483aeb97179b39b</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendPacketTcp</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad0c16dee93dd68923309ccad6ab79128</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendPacketUdp</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>adff0830f1f877067d90261cecf887414</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackupTimeout</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a11ed13bd851b342af904fc7c6695ff6e</anchor>
      <arglist>(double timeoutInMins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectTimeoutTime</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a751949cbde124628fa536b7a63244224</anchor>
      <arglist>(int sec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRobotName</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a9d362e67fded3e8c36f120663c7f66cd</anchor>
      <arglist>(const char *name, bool debugLogging=false, int robotId=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerKey</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>acbf0dcf0eff41a3fed3bc4971a610a1e</anchor>
      <arglist>(const char *serverKey, bool log=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTcpOnlyFromServer</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a3d2b633b8180dec697d87733d891f5ab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTcpOnlyToServer</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a561fed6b6fa30c67318d17173abeeef8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startNonBlockingDisconnect</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a9e5670ac90c62d0c156bfa47a50743f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopRunning</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a2b1aad5de83d6e9f04fd00d9bd943465</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasRejected</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac8c0a3fa78872df34204b9a1aca53ddd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientBase</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aabd8d349c5ab2432da4f70bccbbaa40d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <name>NonBlockingConnectState</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a35dcde5f344eaa074ca8f9d24f8eff98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_BLOCKING_STATE_NONE</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a35dcde5f344eaa074ca8f9d24f8eff98acfa60790190c56dbc6ac2c6d6a28b9e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_BLOCKING_STATE_TCP</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a35dcde5f344eaa074ca8f9d24f8eff98a4d7debec8a6eb594197dd7e8bd923df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_BLOCKING_STATE_UDP</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a35dcde5f344eaa074ca8f9d24f8eff98aad33312bd96237d4ac9921ab1e7f1609</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a0cd5721a220ebddad72fd9fd5f38a276</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>acadc0bdb42259b3d7ad76cd942f2c660</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>internalConnect</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a4ff058a24b4b23152753340e3a99bc77</anchor>
      <arglist>(const char *host, int port, bool obsolete, const char *openOnIP)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalStartUdp</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a30a0d249eb8828a2a0146d1e05914fca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalSwitchState</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a7e9cfee673d111e2eee718651639522d</anchor>
      <arglist>(ClientState state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setupPacket</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac7d01b56aa8db363c7025400e85a0bb9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>trackPacketReceived</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a224e4e8b41c1d4d9da67e2de8a56d49a</anchor>
      <arglist>(ArNetPacket *packet, bool tcp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>trackPacketSent</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aa320dbc731f8743c3467659112f5b74f</anchor>
      <arglist>(ArNetPacket *packet, bool tcp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>myAuthKey</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a82a153519de1ab3beda199a10566a54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myBackupTimeout</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a9540349440d421ac8c66e92eae6bd4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCallbackMutex</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a26aec14fcfa968c58608fa3fb4795e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char</type>
      <name>myClientKey</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a9887e654d54ea17a6894cd7015c8c3e8</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myClientMutex</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ab3bd610ffcb2946b2e012528588d86c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCycleCallbackMutex</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a2924e0901556e5f2d23a79bc65e511ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myCycleCallbacks</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad5109d7fc5c4a6927b6553982b7e9072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad6d34b3b54e4134bc84d573994cb2b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDebugLogging</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a71b57a82dd96c0e3ac7666c758f530b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myDisconnectOnErrorCBList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aa1dc82e053c0d07c8f7e2e72427c0d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDisconnectSoon</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a67c70a563ba8c2b9647c46efedb4cbca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myEnforceProtocolVersion</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a84e12313e6af619d030a56a22e273e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerCommands::Type</type>
      <name>myEnforceType</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac81adf0af148c10fa7319073ed427555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myHost</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ad388500910d17f967ffb9457b1995710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, ArClientData * &gt;</type>
      <name>myIntDataMap</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ae37c5791539ed084a5a8b459c92a7be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>myIntroKey</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aa735c53da737bf2e1ae589a479ca8ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsRunningAsync</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5f8ce7801ef44a2c6c30a3098ce776c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsStartedDisconnect</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a24be0a8138698517e0c4b5610e6011cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsStopped</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac729f4394ce040e212dfe5bdc3a4b5a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastPacketReceived</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a419ab787b6173c92134534a31f3a27f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLogPrefix</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a94b7d7d35ec4ddbea9658b53e76f47e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myMapsMutex</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a3bbfee4c097f63baeb3738c623b780e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, unsigned int &gt;</type>
      <name>myNameIntMap</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a38d4ea57619c2a87f91e4d6f5e33d649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NonBlockingConnectState</type>
      <name>myNonBlockingConnectState</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ae6749c53f5e6e667a9e7012159a2868d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myPacketTrackingMutex</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a4e41f28eb10c31de5febd1f7def2db22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPassword</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>acad6369b983172d3092c65def1a36edc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myPort</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a1486b59cf86991bc2d34c975146d7294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArClientBase, ArNetPacket *, bool &gt;</type>
      <name>myProcessPacketCB</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aa338beb2b2542ab9fe95bb4bc5d4a26e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArClientBase, ArNetPacket *, struct sockaddr_in * &gt;</type>
      <name>myProcessPacketUdpCB</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a04c61af74d790add44bae254b66e6966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myQuiet</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af4a14693fd1eb0990ca77adc1532d3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myReceivedArgRetList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac805cbd85a200f4713bb94e54584b93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myReceivedDataList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5eca54c62e701db104bb3af157b52ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myReceivedGroupAndFlagsList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a128ae2c9e65cd83f1f1fd9d892468593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRejected</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aad304ef6d6ee6d3db028cf7dfa97abde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myRejectedString</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac52be180c68d85b81d82b8c383d8c233</anchor>
      <arglist>[32000]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myRobotName</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a1675297fdb1923c0b6169e5ceed0b7c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myServerKey</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ab5b19584383ece79fa760dae172f3466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myServerReportedUdpPort</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a660354779ada598954acd34d2a1b7ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myServerSentUdpPort</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a05d94f4b686c809825915198da528090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myServerShutdownCBList</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a59b030f44d90b166254cf2380a2c6ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myStartedConnection</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac548a76a6b8c7dd4791b3db9333e30f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myStartedShutdown</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac98cd4dcfb34a75fc15a1af6a40bde5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myStartedUdpConnection</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a8cb9be4e9e2155a66cd2e83529ddba40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ClientState</type>
      <name>myState</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a996c8c096a233ef3ed71583e5bc5dd58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myStateMutex</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ace0f6e26d49138b8007757eb98001a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myStateStarted</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>afc4cde2222c3c322f6f0d1bd29e17db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTcpOnlyFrom</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a8fde37a425ee2ca259ab2da147b6ee64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTcpOnlyTo</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aa9d969c1c88c9059cd0c1787be74389c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacketReceiverTcp</type>
      <name>myTcpReceiver</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>aee35e95e56e2dceea4ea7cbd10ae955d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacketSenderTcp</type>
      <name>myTcpSender</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5a526727ba3eb1e0c1575cca1c30cfcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket</type>
      <name>myTcpSocket</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a24f77b01dff93fc5f6748bad64eb96d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myTimeoutTime</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a8add18e6bd5dc78350c19e63b2e31acb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, Tracker * &gt;</type>
      <name>myTrackingReceivedMap</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>af017397076e2430f561932b59f49a76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, Tracker * &gt;</type>
      <name>myTrackingSentMap</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ae1244558b7f208180a016abe882a58ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myTrackingStarted</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ac09ba48db8d5b575c6d8b5588a102f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUdpConfirmedFrom</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5c2cf4efb62aebe7add51bff09b438f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUdpConfirmedTo</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a5b8dea940f32699d25610fba6c5a8f63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myUdpPort</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a1d239b09ee5bcf5e23ad2b011e343ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacketReceiverUdp</type>
      <name>myUdpReceiver</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ab7b5b068d808f92ddae2d5d6502dfa1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>struct sockaddr_in</type>
      <name>myUdpSin</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a8e3638c3cf9c52be7059922a1f8e950d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUdpSinValid</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a6106915f3057a6e1434a7fbc483b9598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket</type>
      <name>myUdpSocket</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ae89e9630b0e0de6a4b1d5ed7dfd9a78b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myUser</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>a61e3d4646c2785d2582c1b19fdd514f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArClientBase.html</anchorfile>
      <anchor>ae4efc14ab439bbdfb50650242215c4b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientBase::Tracker</name>
    <filename>classArClientBase_1_1Tracker.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArClientBase_1_1Tracker.html</anchorfile>
      <anchor>a1ef7cf1c3e03ce9de72f74d251623117</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tracker</name>
      <anchorfile>classArClientBase_1_1Tracker.html</anchorfile>
      <anchor>af61907fd5b4b257530e45f0d5e25e305</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Tracker</name>
      <anchorfile>classArClientBase_1_1Tracker.html</anchorfile>
      <anchor>a7a23f36b23aeeeb0800a5ffbf11ae76a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myBytesTcp</name>
      <anchorfile>classArClientBase_1_1Tracker.html</anchorfile>
      <anchor>ae77db0fcc4a56b7c1e3b05fcb6b5f13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myBytesUdp</name>
      <anchorfile>classArClientBase_1_1Tracker.html</anchorfile>
      <anchor>aa6a98130c77bddfe81cd311e617b24b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myPacketsTcp</name>
      <anchorfile>classArClientBase_1_1Tracker.html</anchorfile>
      <anchor>a7e4d641248b576a3b36b6614c6fe8eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myPacketsUdp</name>
      <anchorfile>classArClientBase_1_1Tracker.html</anchorfile>
      <anchor>a943ac46100272dcf90af50b2ddb58ad9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientCommands</name>
    <filename>classArClientCommands.html</filename>
    <member kind="enumeration">
      <name>ClientCommands</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHUTDOWN</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0ada998b99926df0606489a735001fcff084</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTRODUCTION</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0ada540fe9469c4660435421e6d76b6122ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDP_INTRODUCTION</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0adad734901cda4673894786109803a3d48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDP_CONFIRMATION</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0ada6012f0c13f7cb9cdd2565472fd32c2e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCP_ONLY</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0ada7bea5a2b6ce1afe50f03230575e6b840</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0ada689ad2b0f8a71ff17e861afc5edf9cae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUEST</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0adab3479a9230678a1654c9da450b378631</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUESTSTOP</name>
      <anchorfile>classArClientCommands.html</anchorfile>
      <anchor>a00074f9d9e04007dc302b68f345da0ada63841de4a0664fd8b95d08a3f5dc5db6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientData</name>
    <filename>classArClientData.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addDataFlags</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>ade2f8d90de8784de8ebd05a3de9c24be</anchor>
      <arglist>(const char *dataFlags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFunctor</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>af23427627634f4c25502c4c59fbd3bc1</anchor>
      <arglist>(ArFunctor1&lt; ArNetPacket * &gt; *functor, bool ownFunctor=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientData</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>ae3f8ef3b1bb1bcd20dd5d503947dcd66</anchor>
      <arglist>(const char *name, const char *description, unsigned int command, ArFunctor1&lt; ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getArgumentDescription</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>af1b38240a301f2eb25fca516e8c3dace</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getCommand</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a7cfaf09661a31d300eb4d752b2baa0d2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCommandGroup</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>aa2625b28e60ae7d2e0cc063b7a44a03c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDataFlagsString</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>aa5980ad70ca4e582d7429b2cf8332f79</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDescription</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a5d1071b945d4c28835520a472472584b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; ArFunctor1&lt; ArNetPacket * &gt; * &gt; *</type>
      <name>getFunctorList</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a05656ff87de75a74b3f7c28a8178900e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>aed5ef31cf39b926754203e96fa5bef48</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getReturnDescription</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>ab801708a22b159b650c0bba95a502c97</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDataFlag</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a3fd0fd7c977e5c61fcf1d6f6e65a471f</anchor>
      <arglist>(const char *dataFlag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lockFunctorList</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>ae0f2c404c891fa0e61154650679254da</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFunctor</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a0d75b470a133e739b3dea57a2b52c5f7</anchor>
      <arglist>(ArFunctor1&lt; ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArgRetDescs</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>ab0f405283130f08c0c44d1d09674e5a9</anchor>
      <arglist>(const char *argDesc, const char *retDesc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommandGroup</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a647cb37f9e64c6e09a9afd73c2781a34</anchor>
      <arglist>(const char *commandGroup)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLockFunctorList</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>aebc017170295a552c7f001f699ce591d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlockFunctorList</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>ac814d4b0ab818fd8dc7404983b195f82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientData</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a5bed435752a95eb3f8b9abbb22f8a42d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myArgumentDescription</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a411b6167765ee81f4d304165878a58b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myCommand</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>abe3e73317f5ce1f566c154cd95c384cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myCommandGroup</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a47291f39d420292f5639853adeb0671b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArArgumentBuilder</type>
      <name>myDataFlagsBuilder</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a5c96932fa5c5629e20a55b2011be8717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a4486b151136d901919822fa05abb27ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDescription</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a5469ac0a6d8c3e42f73b3c50425f4734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor1&lt; ArNetPacket * &gt; * &gt;</type>
      <name>myFunctorList</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a1ea19689bb77980ac37a4c23b3d53df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myMutex</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a4a85f4fea9cdaf09b80777df224fc092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a0de3ee8e11494bbe067bd04122688b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; ArFunctor1&lt; ArNetPacket * &gt; * &gt;</type>
      <name>myOwnFunctors</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a29b6aa68f186e614ef28891f7fa88c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myReturnDescription</name>
      <anchorfile>classArClientData.html</anchorfile>
      <anchor>a31b53c2009143a27e99938160d2e2b21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientDataReceiver</name>
    <filename>classArClientDataReceiver.html</filename>
    <templarg>C</templarg>
    <templarg>T</templarg>
    <member kind="enumeration">
      <name>RequestType</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>afd7b2e5c1676857000c0771009b0c07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Once</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>afd7b2e5c1676857000c0771009b0c07aa28543b3567951f8a163fafffb5a5c140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnceUDP</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>afd7b2e5c1676857000c0771009b0c07aaf1dfd31ceb253a42a4e61b6b7057f802</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Repeat</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>afd7b2e5c1676857000c0771009b0c07aab36715eb48f8403992d2a626ef13f8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>afd7b2e5c1676857000c0771009b0c07aa4cd3857378d64516063b6bbf14020fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientDataReceiver</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>a34540406b6c5ab5d9e5ea300d747df3a</anchor>
      <arglist>(ArClientBase *client, const char *requestName, ArFunctor1&lt; const T &amp; &gt; *functor, long interval)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientDataReceiver</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>a0c13d52e3d41f1c7155730658c3d0172</anchor>
      <arglist>(ArClientBase *client, const char *requestName, C *obj, void(C::*function)(const T &amp;), long interval=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientDataReceiver</name>
      <anchorfile>classArClientDataReceiver.html</anchorfile>
      <anchor>aa8de45029d7e1529118a2aa3c0cb8bb4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientDeleteFileOnServer</name>
    <filename>classArClientDeleteFileOnServer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addFileDeletedCallback</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>ad1efe20169369e46ffd56d512a5952f3</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientDeleteFileOnServer</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>aeb7a2f2995dfad4c6f40a710cdb9a747</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteFileFromDirectory</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>aef1686f5b0fa8260c1606d19dae9e5d8</anchor>
      <arglist>(const char *directory, const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDirectory</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a6572a2c8936ec848a2bdb51cbdaef7ea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a496bb5912002e28a92cd372b001adf12</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastCompletedSend</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a6e697dba601133956234dbb06d9dc9f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastStartedSend</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a26ba154309ef51304df4f5bef0c2eb6d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailable</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a35222414f09180b659597b67ed96d178</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWaitingForReturn</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a7bbfe1934dcc420fbed8313d72e20fdb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFileDeletedCallback</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a98d934f18fef3b55e548824892767f27</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientDeleteFileOnServer</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a377dc7089a074b57623aa8e8fd04ab18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>callFileDeletedCallbacks</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a4b7902b1ce02a9e34a8e19ecea2436d6</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netDeleteFile</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a296412a041436e1c09ff88f8ef4de951</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCallbackMutex</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>aa8f6cc4d78f59feb094b7878522a5d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a88430ab32d362eee4faeab5efc97e662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a047a4348415e3f60871dac6960708a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientDeleteFileOnServer, ArNetPacket * &gt;</type>
      <name>myDeleteFileCB</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>aed34a489354fd26ccbb2b631479e3c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDirectory</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a3efecb8372ab5b029c1ad9c3655bbda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FILE *</type>
      <name>myFile</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a3ed0ff33533809a79cb9f38a0301e26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor1&lt; int &gt; * &gt;</type>
      <name>myFileDeletedCallbacks</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a27d116502f8378fe861b4ea456d6d93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myFileName</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>aa488cffd4d2be529c3a8880204c9268e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsWaitingForReturn</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a3c8179ba4cc8ef723088371e8a72c83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastCompletedSend</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a5672b9acdc93d7d5a9e647284808ff4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastStartedSend</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a9422fa5ab4a5aa339f8296f4d47e86a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myWholeFileName</name>
      <anchorfile>classArClientDeleteFileOnServer.html</anchorfile>
      <anchor>a1fba242377266a84ddfa9349fe23155c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientFileFromClient</name>
    <filename>classArClientFileFromClient.html</filename>
    <member kind="enumeration">
      <name>SendSpeed</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>af616d7009ffc1d4da0ceb4a4f14c50f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_AUTO</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>af616d7009ffc1d4da0ceb4a4f14c50f3a5e5bdd437c73ed0f1bd66a85e067b7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_FAST</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>af616d7009ffc1d4da0ceb4a4f14c50f3a6c5c85759206d70311afe5e5f004687e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_SLOW</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>af616d7009ffc1d4da0ceb4a4f14c50f3a9bbda9b413fa78dbd49ebf09d8dfe59d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFileSentCallback</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a1569e3c3b6d253b37969212a12167e46</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientFileFromClient</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>ad5b55bc26a12f32c22ef4622bf2d5ca0</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelPut</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a99604af7d2a7e175d5cec2fe617eae6f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getClientFileName</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a323f33befa89103d173c8060314a8b5a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDirectory</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a2f4bf2e34208841bf3ca46c47e7ac021</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a09ee9431932088bd8e0e0b19970ab525</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastCompletedSend</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>adbc8b09a5329abe4ef6bf54681e2af31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastStartedSend</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>aaa23dfedabea1fc7b807b3c0a6dd8898</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailable</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>ac7a3a9432fceaa9c851b7e5e2fb5dc9a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailableFast</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a08f40d6f4b531afe220096edef269195</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailableSetTimestamp</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>aa51fc5a9959ba008d9d2c4d1dad89beb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailableSlow</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a603a18feca236e839eef6db57ef6e9a1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWaitingForReturn</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a15815f3c208485234abf085a3bfeda93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>putFileToDirectory</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a8b742a2887c4292df9c773160b58445b</anchor>
      <arglist>(const char *directory, const char *fileName, const char *clientFileName, SendSpeed sendSpeed=SPEED_AUTO, bool isSetTimestamp=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFileSentCallback</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a4f42467d665f6a9c974db783d5e5ce53</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientFileFromClient</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>ad75e2355f2ce01084d3606344d35d2a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>callFileSentCallbacks</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a49b99801cd9d165f80b92fe88e51613e</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netPutFile</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>abfd131d388bf4ea0713f76a075680dd6</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCallbackMutex</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a105441e2b713392d0c1f79d3de8772ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a68a5b19192901846755551b2ea05ab75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myClientFileName</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a70b16241f54ec347d1587dd6e144e85c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myCommandName</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>af3cc5b6d50fd89ac9a28d33d1ae85393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>ac0815438fd6908c4d8c0e27bc6029462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDirectory</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a604416bf6bf0bda2643c1b54eb40f844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FILE *</type>
      <name>myFile</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a336b5d56e25d3f09ebe8aa7ad81910f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myFileName</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>ad946d147cbe70f092bc71d2cec8c0094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor1&lt; int &gt; * &gt;</type>
      <name>myFileSentCallbacks</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a9b01736550428abfed5cca6906eeb680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myInterleaved</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>ae0a1f71a6de3eb4417891b1fa3abdde0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsWaitingForReturn</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a9ff71e6b9ed0ad25dc376224ea473869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastCompletedSend</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a41bac585b76757c3a2991b01576873cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastStartedSend</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>aa5309697992c9ff9183ebf7f64ee7b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientFileFromClient, ArNetPacket * &gt;</type>
      <name>myPutFileCB</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a31eeb0f9c75adfc57f2f8d94af747ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myReadyForNextPacket</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a3cbcb37da35ca3f721c56d68726c6f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTimestamp</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a901658234cf0ff6b0476d34bebdfec75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myWholeFileName</name>
      <anchorfile>classArClientFileFromClient.html</anchorfile>
      <anchor>a9e8061889cab6b8b2b854d9545782bb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientFileLister</name>
    <filename>classArClientFileLister.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addUpdatedCallback</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a7b310d05b814ed81b2d097924fdbbc03</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientFileLister</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a098b9c95dd813e29bdafd83f106944b0</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeToAbsDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ac03b6fb90f2c21df748d65b142053fca</anchor>
      <arglist>(const char *dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeToDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a727b7980274fda2c06ac0fa1f1c3bdbb</anchor>
      <arglist>(const char *dir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeToTopDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>af62efea516bcb51f357e9a2e55d2e0ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCurrentDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a0019fdcfcae1783390a022f0ac633fa2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; ArClientFileListerItem &gt;</type>
      <name>getDirectories</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ad7022386ca02cfb3c679e5222b00b1be</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; ArClientFileListerItem &gt;</type>
      <name>getFiles</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a30fe66bfdc23d699d9a0ad83a34a0cf3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastRequested</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a740acfa00193f0648686712ea53c0627</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastUpdated</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a3e63ac438b6558b61001166a5a5bccd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getWaitingForDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a2a398e7fc98adcd1a2b4203b825ef41c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailable</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>aacc5cb5c69ab2c30275d13e78086924c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>aa592acf1422d3333971d87756ee8f61d</anchor>
      <arglist>(bool withTimes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remUpdatedCallback</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a997fa801dc3fee9cbca2c22bc4b9e941</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>upOneDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a8e999d5796afc0a0579ff72c2648f37b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientFileLister</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ab026cd4d137b1b22eaefc048c463f733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>callUpdatedCallbacks</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ac17f902bec1ef2927e471b16cda48f75</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getDirListing</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>aca63890ceb622bc531c4aef2841e2361</anchor>
      <arglist>(const char *dir)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logList</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>abe71ef208ec5fbb17507c7c6586e66d0</anchor>
      <arglist>(std::list&lt; ArClientFileListerItem &gt; *logThis, bool withTimes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netGetDirListing</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>af93b97c4fcbbd1f089511097ba92d5e5</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netGetDirListingMultiplePackets</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a47449369bf7a706a5c1ed3faaccc3f80</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCallbackMutex</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ac7747f8b48a87c978ecbcb379bc7f803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a70e3f89f5b7c75c8fafc4d2fede6ade5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myCurrentDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a5c5df6b5fa6ced76adefa3d518e13eee</anchor>
      <arglist>[2048]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ad9bd4f985d7d7fc872c7db2fbcae8f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArClientFileListerItem &gt;</type>
      <name>myDirectories</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ada57af955febe1412b6f22d45f6034d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArClientFileListerItem &gt;</type>
      <name>myFiles</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>aa8cc7c3fd925f5ebfb98b4330105fb87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientFileLister, ArNetPacket * &gt;</type>
      <name>myGetDirListingCB</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a5adec6fdf2ed44977ce45735dbbaedfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientFileLister, ArNetPacket * &gt;</type>
      <name>myGetDirListingMultiplePacketsCB</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a521508da095048cde32d6e25ff232e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLastDirMatched</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a13775d108b9a90e1e641d850f7b7615a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastRequested</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a3f5114e367bb23d8032c3a4c2cc69d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastUpdated</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>ac569d0d691c0014907abe249c0b6bc6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myNewDirListing</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a8616a80ed2cd6ada261c47bbd5228adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor1&lt; int &gt; * &gt;</type>
      <name>myUpdatedCallbacks</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>a7ad4249c4279e84c0503709fffb12748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myWaitingForDir</name>
      <anchorfile>classArClientFileLister.html</anchorfile>
      <anchor>abddc81162c6cdee4a741a1f8e9628b01</anchor>
      <arglist>[2048]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientFileListerItem</name>
    <filename>classArClientFileListerItem.html</filename>
    <member kind="function">
      <type></type>
      <name>ArClientFileListerItem</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a3913a6669680b4cbacb5595d6f64a53a</anchor>
      <arglist>(const char *name, time_t atime, time_t mtime, ArTypes::UByte4 size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientFileListerItem</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>af1a8cf7f6f3c072b0a62582b961babe7</anchor>
      <arglist>(const ArClientFileListerItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>getLastAccessedTime</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a1199a18423b88a1b551af6e55dada093</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>getLastModifiedTime</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a337bb7c8c91a957657b9f750fe5c0e6c</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a189bd83f7ebf600bae60af0ae0a54ac9</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArTypes::UByte4</type>
      <name>getSize</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a72c521c4bfedb4fddb003fe762f10882</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>ArClientFileListerItem &amp;</type>
      <name>operator=</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a78342853409599ab52a2510cfa25fca9</anchor>
      <arglist>(const ArClientFileListerItem &amp;item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientFileListerItem</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a85fb913491645e984a9b2981f6d23d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>time_t</type>
      <name>myATime</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>aba3a081dac5d02e1bd36f022d41a421a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>time_t</type>
      <name>myMTime</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a8b3c846664a1a2c73e5813bfa04f0c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>a363cee1f20cafe427aefa06750374e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::UByte4</type>
      <name>mySize</name>
      <anchorfile>classArClientFileListerItem.html</anchorfile>
      <anchor>ad66358f8b83d6ea074b72561f3b373a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientFileToClient</name>
    <filename>classArClientFileToClient.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addFileReceivedCallback</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a8ae2a27a21fff00620aa5932abb5a023</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientFileToClient</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a2920d44577a99d421d33622773b746ff</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelGet</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a3c34fb8effac321142196ab17fa868e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getClientFileName</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a4929609a8f3d46a405a8613b40ddffcc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDirectory</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>aa22974b9c503a48b6b12354fe2b101d7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFileFromDirectory</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a6c67cc9461922e8186ab5df15017fbfb</anchor>
      <arglist>(const char *directory, const char *fileName, const char *clientFileName, bool isSetTimestamp=false)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a2a4d93d53ed383192b75143d60094d31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastReceived</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a05c011e29731b8b0933b15b261e42f4f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastRequested</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a4c9e0fbf12a4136cbdfdd3d6412854ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailable</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a1eb35af8547449158603974cf6cf63cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailableSetTimestamp</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>af3cca08315edf9b8ec2d61b2d0a3feec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWaitingForFile</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a271f4b6fb58fe94976812c59945884c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFileReceivedCallback</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a1964908870ddc9c90be98de53b453d2d</anchor>
      <arglist>(ArFunctor1&lt; int &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientFileToClient</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a3c774217ee64fb84cd3047c020fb85af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>callFileReceivedCallbacks</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a0bb7813d9cd97218b3165592f380ba64</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGetFile</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>aa0427338c17535bfe15a8cc1e83852cb</anchor>
      <arglist>(ArNetPacket *packet, bool isSetTimestamp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netGetFile</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a1000c8f2945568072fefa3d3c90b1107</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netGetFileWithTimestamp</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a294d1eb8064f2b762ad7dc7b84ecf186</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCallbackMutex</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a02de3a1b43117ba0e4990299638785ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a81119cd522bd9692559555923ea6d4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myClientFileName</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>aa1aff7c76f49aedc937795ae8a9ad361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a427fc2021fa520b0435461a6d9034f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDirectory</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>ac8391ae824478fda7261ac4c84caa102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FILE *</type>
      <name>myFile</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a4f9d9c4634ef364795234005cfddbe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myFileName</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a4e27b84d45f468764a898b7aba39275d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor1&lt; int &gt; * &gt;</type>
      <name>myFileReceivedCallbacks</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>afd1d9df2586c700eec51795b807dd9d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientFileToClient, ArNetPacket * &gt;</type>
      <name>myGetFileCB</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a362f2949441f95ba895a84e6d32aea2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientFileToClient, ArNetPacket * &gt;</type>
      <name>myGetFileWithTimestampCB</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a84cf5823e0852172215bcf3c617cc581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsWaitingForFile</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a9c7c07d6cef3bd66bd79cf0f01f4714a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastReceived</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>aef93ffa4da17748ad5ac71440e99753c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastRequested</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>aa6e9b6c04f34cbc5786c46054f50e2d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myWholeFileName</name>
      <anchorfile>classArClientFileToClient.html</anchorfile>
      <anchor>a887d961d27b86cb933b487a22fe0fff1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientHandlerCamera</name>
    <filename>classArClientHandlerCamera.html</filename>
    <member kind="function">
      <type></type>
      <name>ArClientHandlerCamera</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a4f059ab4ad74db5e767dacf80797aedc</anchor>
      <arglist>(ArClientBase *client, const char *cameraName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleCameraDataReply</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>af2274757258bbbf6ad4ea773acd73751</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleCameraInfoReply</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a2715cf702f761f43cab82581104431be</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a7d0696f88f3b3c50555d57bc9f296ddc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestUpdates</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>aad4510c0bbae4ba3b0503cc471b9ef3c</anchor>
      <arglist>(int dataRequestFreq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>afa4948c9dc1a426204642777e900f7ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>displayName</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a0c4460b401abbdb215cfec3b6bceefc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>displayType</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>af192caf1b01de26f1183143a499fded5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>haveZoom</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a13bc2bd63dc2ef8ac5e2dc2265c79a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maxPan</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a7b31614a8768ab920299a14944e27d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maxTilt</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a3d456a633efbb2976e7496b1851285e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maxZoom</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a4c911ed8b2bb41a14386cb3d7910f3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minPan</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>ad44c8e74a3641f1d8f4945cd8279f9aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minTilt</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a87011dda9ef2399ce4d248df3695d207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minZoom</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a8453bff8423db53460ee1d5606d50c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArFunctor1C&lt; ArClientHandlerCamera, ArNetPacket * &gt;</type>
      <name>myCameraDataReplyFunc</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>aa78f220ea68e0359f70e783d84e4567e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArFunctor1C&lt; ArClientHandlerCamera, ArNetPacket * &gt;</type>
      <name>myCameraInfoReplyFunc</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a06aaf984f08cc22d49eae1c37170afbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a2bf67904bb3b178cee43eaf3117ec71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArMutex</type>
      <name>myMutex</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>aa186941bf1ce624452185c128e336233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>afb32688fc8ff1b089be2d77fdc4106cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>pan</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>af5e223eeb21b07654d38e29ef90a0a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArNetCameraRequest</type>
      <name>request</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>acb6d92ea51779c095ad4e26efae4b544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tilt</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a683b418ab612b6988d83a3e91c25d0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>a45f9de93dfe8e514cbdc16a6d174306b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>zoom</name>
      <anchorfile>classArClientHandlerCamera.html</anchorfile>
      <anchor>aba591f146625678d6b5a3a077e3f5b22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientHandlerConfig</name>
    <filename>classArClientHandlerConfig.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addGotConfigCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a30b6fa1f7d2b203c976e35827d40a1cb</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGotConfigDefaultsCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>af3df98e7b8927d98e30c237b877246b5</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGotLastEditablePriorityCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>afd2a51ca76d739044856d02e049a1753</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSaveConfigFailedCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>abeb8ee1db5da483d4353d058051174ff</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSaveConfigSucceededCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>af2386a21d5e613ee84cb4bbca3f468bf</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientHandlerConfig</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>affb24a5286b5dff39af120f92965fdbc</anchor>
      <arglist>(ArClientBase *client, bool ignoreBounds=false, const char *robotName=NULL, const char *logPrefix=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canRequestDefaults</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>ac239f6fd947b46d4e11b7841ba947b17</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArConfig *</type>
      <name>getConfig</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a4d8c8014df4dea5a87075ab60d387f8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArConfig</type>
      <name>getConfigCopy</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a7d8bd2ae502727450320a96aa2474a0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArConfig *</type>
      <name>getDefaultConfig</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>aa61638c40c88d74b479a4855a43bfb4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArPriority::Priority</type>
      <name>getLastEditablePriority</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a31da2b86de6d53e0e16990b0ece91f9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveGottenConfig</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>ac5a6434db706e6eaae3f86ec835f529f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveGottenDefaults</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>ae2a20a19daa84a800416189f3a0958cc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveGottenLastEditablePriority</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a2cd484de2c04b021ff958dee47da03b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveRequestedDefaults</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a8dd3db96e48d2154294184916f722631</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLastEditablePriorityAvailable</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>af895c5e4adced74e24191453f05fb686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lock</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>adc541e43fc58b946aa068fa7a259ca3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reloadConfigOnServer</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a0d6f204106918c9ade5aabf67a473545</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remGotConfigCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a79df949957b68bf0d9b238dca767fc37</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remGotConfigDefaultsCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a95cda38cc717814dcec962341ecd8ec8</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remGotLastEditablePriorityCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a4c2f16b688a56bfec694ac65eadae93c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSaveConfigFailedCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a80dfc30ab2d0cebdb4253471608c5a6d</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSaveConfigSucceededCB</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a91dee7ba3b6677aa95d122575f6a3f11</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestConfigDefaults</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a1b67d4c949f334fe6e02fc4f0fa0aa8e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestConfigFromServer</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a345d02133a94ab585a96322cbead70c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestDefaultConfigFromServer</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a7614987f355608abded57727d64d5163</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestLastEditablePriorityFromServer</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>adc6992caf725403e025c8a9029d3b82a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestSectionDefaults</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>ab266be479251e49f081aaa8f80c9b4fb</anchor>
      <arglist>(const char *section)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveConfigToServer</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a8d879287934fb24fbef08957404c7d46</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveConfigToServer</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>afe53ae4846a04ceea9652293d45f5d0c</anchor>
      <arglist>(ArConfig *config, const std::set&lt; std::string, ArStrCaseCmpOp &gt; *ignoreTheseSections=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuiet</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a399450e2ad3ff79c0ad74085f3ab340d</anchor>
      <arglist>(bool isQuiet)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLock</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>a6516bcbf9e0fcff02af37a2067c8f685</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlock</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>ab3b1566958870ae86544a88499a34d73</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientHandlerConfig</name>
      <anchorfile>classArClientHandlerConfig.html</anchorfile>
      <anchor>aee7bfb5dee20a46069a52741109ea668</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientHandlerRobotUpdate</name>
    <filename>classArClientHandlerRobotUpdate.html</filename>
    <class kind="struct">ArClientHandlerRobotUpdate::RobotData</class>
    <member kind="function">
      <type>void</type>
      <name>addModeChangedCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a5bf1111698c6b3888a94ea903163bef0</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStatusChangedCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a3f058fc89de776228734b773d4f04bd4</anchor>
      <arglist>(ArFunctor2&lt; const char *, const char * &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUpdateCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a71c1138b62468ada65ab9b966a6cdba9</anchor>
      <arglist>(ArFunctor1&lt; RobotData &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientHandlerRobotUpdate</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a30eeb57403200c9f077a72f266947c88</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ab5a2424b2d503498d15181ec894a6837</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a7c2641bf77077aceb4e60988b41b4653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a7a7cf7df29cbfe92c0e5e590705f4e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remModeChangedCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>afaeffce973daa342519c3e1ba24a3497</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remStatusChangedCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>abaeefbbc9c5d045d071a987a39481e0a</anchor>
      <arglist>(ArFunctor2&lt; const char *, const char * &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remUpdateCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>aa87ed6e789dd012f5aeb8f042c48baf3</anchor>
      <arglist>(ArFunctor1&lt; RobotData &gt; *cb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestUpdates</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a308497682f0b294307f76b3738509c48</anchor>
      <arglist>(int freq=100)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopUpdates</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ad7d541b0fcc9ac7fe3bed90f240a0d5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a2b2e2dbf3cd1fdc44cc93b4a37a1e339</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>waitForMode</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ae861fa0542620624287b4c2323607a5e</anchor>
      <arglist>(const char *mode, long timeout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>waitForStatus</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a144ae2b9f9b25c861fc4f3d86d9a4934</anchor>
      <arglist>(const char *status, long timeout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArClientHandlerRobotUpdate</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a457ce90ec73a812f114f207719e50c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RobotData</type>
      <name>getData</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a20403933a7cde91876995b7737feeaf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getX</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>aa8bddfe447a9e409085a6f679d7e961a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getY</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a45972dbed0a0a76d41c65ec3ed8174ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTh</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>af4a9df940976c360a684f48b613b7d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArPose</type>
      <name>getPose</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>abffb67d38870da2cb80643d33da5454e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVel</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a5e1e34e06e0daad656186d24081ac05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRotVel</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a13a63841f9e9188e2ab1bf6fe0ed5a3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatVel</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>abcdee791aeed3e74ff88bbca5a1cb495</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveStateOfCharge</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a47609e30e0438eaf17f07e5ffac9d732</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStateOfCharge</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a6316887244cfa172f21c499bdc96f2a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveVoltage</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ae8be85a05eccb0749500b437179bf28d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVoltage</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a42a17bf8772a89f2a2c3f64ec823e927</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTemperature</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ad725f0742412edf8bfd8878ac97693bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleUpdateNumbers</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ab65a806c7b795a757b4a52023ea6a073</anchor>
      <arglist>(ArNetPacket *pkt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleUpdateOld</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ad7982c185979be0859838967214c580a</anchor>
      <arglist>(ArNetPacket *pkt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleUpdateStrings</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a3c0c5b156184224b7fb061d2d0a87750</anchor>
      <arglist>(ArNetPacket *pkt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>parseData</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ae531c4a228baa213ca99eb7532d96102</anchor>
      <arglist>(ArNetPacket *pkt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>afeea412ae5be9e597dcb58138ca13069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RobotData</type>
      <name>myData</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a26449de81d04d0771d987e34dc368221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientHandlerRobotUpdate, ArNetPacket * &gt;</type>
      <name>myHandleUpdateNumbersCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ac0c5acb83c730ce966f89f08d166bf57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientHandlerRobotUpdate, ArNetPacket * &gt;</type>
      <name>myHandleUpdateOldCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a61f3cfbfaf22a0b856a99b36e1c2da5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientHandlerRobotUpdate, ArNetPacket * &gt;</type>
      <name>myHandleUpdateStringsCB</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a33363c3932e8b933735e6bdc6f7df51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a5bb5c4a7ca45b377f03801bde5e3e4a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList1&lt; const char * &gt;</type>
      <name>myModeChangedCBList</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a3994c4bf074204addd24f34cf59d52ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myMutex</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ae96a7b3105e1750123fe53f0df8f1a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRequestFreq</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>ad72c512a9e4a8e0536f1bde845bd4c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>aa9996de92f3853006b4d0657299bdb78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList2&lt; const char *, const char * &gt;</type>
      <name>myStatusChangedCBList</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a8b552d71e180635db11f9968ec89ae31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList1&lt; RobotData &gt;</type>
      <name>myUpdateCBList</name>
      <anchorfile>classArClientHandlerRobotUpdate.html</anchorfile>
      <anchor>a2af775ecf21b6395953948933e93fc85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArClientHandlerRobotUpdate::RobotData</name>
    <filename>structArClientHandlerRobotUpdate_1_1RobotData.html</filename>
    <member kind="function">
      <type></type>
      <name>RobotData</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a52c31a22fdc9bb410934a9dcb327d866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>haveStateOfCharge</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>aacf16af23d9c6ce24c7821675bf0e144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>haveTemperature</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>aecf54125671599e6279c47fc674943f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>haveVoltage</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a5f4dce429d08ec51d47d25271ecd8ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>latVel</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a29f099e4efb19dc5b1dd860743fac7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArPose</type>
      <name>pose</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a75022fca1e4a823f5262504996a9212f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rotVel</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a453a3a9492b288d81b4379e578f0b27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>stateOfCharge</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a76330c5621dd101d79f0480e7d3702b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>temperature</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>af29419008c30f9c0357791ef670771ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>vel</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a343e254c53003bdf3dd3f07a79711ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>voltage</name>
      <anchorfile>structArClientHandlerRobotUpdate_1_1RobotData.html</anchorfile>
      <anchor>a6c7fbd6c5b50f10aa96e02666af3f02c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientRatioDrive</name>
    <filename>classArClientRatioDrive.html</filename>
    <member kind="function">
      <type></type>
      <name>ArClientRatioDrive</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a19e32862948ddd6aa6222f735f7dd4df</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>safeDrive</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a1c3c070f66917838db46b6d15b51a38a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugPrint</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>acda1b11000c9ac18ec81a7e863ccabbc</anchor>
      <arglist>(bool p=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatVelRatio</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>acb7d006d7207ba49db67d68948b06811</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRotVelRatio</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a8339880d5a71531e6965092f2ed75882</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThrottle</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>aabf47208f3919dd6d33d5233b7eda109</anchor>
      <arglist>(double t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransVelRatio</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>aa276867ce61847ada15f522b505063cc</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>ad23591cb8795f2c9b79b977f9ad5d9fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsafeDrive</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a189500484f44d98f2d0a07ac69fbd974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientRatioDrive</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>ae86a81dedee892fa43335570d3c2982a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendInput</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>aeadb515ed24cfb0c4483e528e2fb4bd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>task</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a2a9c26bdbd3bb73053c7b55efea12426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>ae5d251e47c30c24b3d16a34b7682b9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArClientRatioDrive &gt;</type>
      <name>myCycleCB</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a31969ffef3df1ea10ad9aa0c1c3ebd5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArKeyHandler *</type>
      <name>myKeyHandler</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a7e69eb630e14baa6367a781d77a09ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myLatRatio</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>ad38b311f384b95ea3693c66e3245e8e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPrinting</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>ab7890a80c33e53791c29697a5e2bdb9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myRotRatio</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a2cdc6e153e7671658464ed13889877fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStop</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a97b6e11006da4a46bd3bbb12b2eb7d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myThrottle</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a7adc41eb4e7d4eefa222fe3216bee488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myTransRatio</name>
      <anchorfile>classArClientRatioDrive.html</anchorfile>
      <anchor>a7f2fc7415810285da1fa98098d4ace37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientSimpleConnector</name>
    <filename>classArClientSimpleConnector.html</filename>
    <member kind="function">
      <type></type>
      <name>ArClientSimpleConnector</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>adf8d2de77fe1c9d41e6244f144f38355</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientSimpleConnector</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a4769d7f484d4014a9410ec0f22e4c7cd</anchor>
      <arglist>(int *argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientSimpleConnector</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>aaa0ff8b3f3478ac7754fdf4e1fc59234</anchor>
      <arglist>(ArArgumentBuilder *arguments)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectClient</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>af4c6ca707c6c0f039eeb3a2a092a8160</anchor>
      <arglist>(ArClientBase *client, bool log=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>afb10744bcb50ba8a036e0d1f5efeef47</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a6516b566c2a0dc24001577562ef05b5e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a4e6b7f15dd4f1b27201874a5f7608d7d</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArClientSimpleConnector</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a816e610c7e439befb4cd13b9f964e4b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>ae18ecb666ce47e35839594b930972f6b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>myHost</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a26207faee8f1ea25cbf9931587827b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLogDataList</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a18d734fdaabd2cdd7b78b01bae63d58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArConstFunctorC&lt; ArClientSimpleConnector &gt;</type>
      <name>myLogOptionsCB</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a3bd63cc091cfecde5a7f250f4fe7284b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myNoPassword</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>aec47c8bbfbcfca9eaf7ab87ba66ffdd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myOwnParser</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a9a1387e09776c578303ce1584d31c5f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArClientSimpleConnector &gt;</type>
      <name>myParseArgsCB</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>ad9af976317f746927ad3779d447d491c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArArgumentParser *</type>
      <name>myParser</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>adaa38029d6ee8aac0baa26772954d9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>myPassword</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>ad09faaa0561cc96cb9edc5b0e975b8f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myPort</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a92e499adf8d819f5a4d58e4a08e355a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>myServerKey</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a6405e7ac0362fd5cbc6724f152735870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>myUser</name>
      <anchorfile>classArClientSimpleConnector.html</anchorfile>
      <anchor>a4ff3709de1000e356340af6c6aaa461f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArClientSwitchManager</name>
    <filename>classArClientSwitchManager.html</filename>
    <base>ArASyncTask</base>
    <member kind="function">
      <type>void</type>
      <name>addConnectedCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a76f4867ff4409a4a931ac4846a02be4b</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFailedConnectCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a7a6c7d3d4eaec3bd35b21eff089c94cb</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a94aece9a56baa4507a507203f2ba34e3</anchor>
      <arglist>(const char *configSection, const char *connectName, const char *connectDesc, const char *addressName, const char *addressDesc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArClientSwitchManager</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a98e33ba3d1698b01b2152d4ca0af0993</anchor>
      <arglist>(ArServerBase *serverBase, ArArgumentParser *parser, const char *serverDescription=&quot;Central Server&quot;, const char *clientSoftwareDescription=&quot;Software&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clientSwitch</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aeaabc93d0e6c64f701c004e57f7612b9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enforceProtocolVersion</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>af675e55fe633a5d82a92e58925a6295b</anchor>
      <arglist>(const char *protocolVersion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enforceType</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aa33d6f0131e36adf7034ecdd077f1821</anchor>
      <arglist>(ArServerCommands::Type type)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCentralServerHostName</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a3927f338644f06ae92abebef1638a81c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getConfigDisplayHint</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a908606770acc188082f2ed189fdd85e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDebugLogging</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a1d4426e90bfe20fa29bcf8d892992723</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIdentifier</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a2bb172ef1a5ddd3e5966f119d3f5b59f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArServerClient *</type>
      <name>getServerClient</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a135a3af181f88a9e941400fba6b93219</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>acbca761c0ad93058cd0da545de905ab4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ac8f8a3d78fa1abc3353033859a64c72a</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netCentralHeartbeat</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a68fad92c6d2be3e91ef46a74af74b1cd</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netCentralServerHeartbeat</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ab8cb36c397f714c784ac10a7e74a2de2</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aa36df69a1f12f619393b256b0953393b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseFile</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a6f386f6b39d3641cd4789d3d4938c01c</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remConnectedCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a9d1672737eaf5a0e78ce82973aa1228f</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remFailedConnectCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a2a340f1fbabe71239bb65d8de66e23c5</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ab4191278fb27c623970544a6076e1633</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugLogging</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>adbf62a4805278be11cea08ee3fc82c96</anchor>
      <arglist>(bool debugLogging=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIdentifier</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a63e86f288b43f5d417c0d4f515418e4c</anchor>
      <arglist>(const char *identifier)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArClientSwitchManager</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>af16b82736c4ac19ab0b2a0aca2d414e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <name>State</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a47d2af2da63155fee05665a1172f2ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDLE</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a47d2af2da63155fee05665a1172f2ca7aa7306774388491dd141b3a4692934d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRYING_CONNECTION</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a47d2af2da63155fee05665a1172f2ca7a1069b62b4ade904243c160454a3abe6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONNECTING</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a47d2af2da63155fee05665a1172f2ca7a149242cfb43d615b05a45e25f0bfeb10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONNECTED</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a47d2af2da63155fee05665a1172f2ca7a70869eb22f373a95b08a5edb3282abcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOST_CONNECTION</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a47d2af2da63155fee05665a1172f2ca7abf6fc6dea0c54c87a9d93158ab8dfe2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>filePasswordCallback</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a351eb45c1a229046d48a93cb5b4c2ce1</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>fileServerKeyCallback</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a55b5d847e769ae8b240b6906f9c7f138</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>fileUserCallback</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aa16127300f439e93584fb2939a00c4c0</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>processFile</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a28f5ce0e22ce57a17a842a06fb05722f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>socketClosed</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a0b474f7e66eb93d9423d49a0c01afdbb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>switchState</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a27d6e25d5cf71f3a53e7fc030d265691</anchor>
      <arglist>(State state)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myCentralServer</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ab6910c98d1bb7b33011f7e15cf46384f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myCentralServerPort</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a55b524e17fa51223f30ef18704a3aae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a316a55a3d5a5332b549ae2cac6b0cd63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myClientSoftwareDesc</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a42b14bf98b08e5c385ffd36ba7e1044e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myConfigCentralServer</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>adbfdf4e0da7a2d8c01a1c062410710f1</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myConfigConnectToCentralServer</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a82fb3f9b5f2a44f09fb96cc6867f8765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myConfigDisplayHint</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aedc41025425e88bf147b69f9d2827c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myConfigFirstProcess</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a75f93432ea4213db8bf6cdc0a76b8725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myConfigIdentifier</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aad8470d456885238704c100f126be1d7</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList1&lt; const char * &gt;</type>
      <name>myConnectedCBList</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a66ae8a26b97b144772166bc4d6f13f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ac4cef5195c76dbf5a9fb447f4aafa54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDebugLogging</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a60bb92066d2c83cee6ae4ba8adb3a0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myEnforceProtocolVersion</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a665b67d178759b47ce1ba78845745ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerCommands::Type</type>
      <name>myEnforceType</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ad9c5683bd1e1453349abea4b6ef0e874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList1&lt; const char * &gt;</type>
      <name>myFailedConnectCBList</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ac4be5e7c19e738d72fe96fcfb7162b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFileParser</type>
      <name>myFileParser</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a89feab35494e1737f9725e1933ba84a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArClientSwitchManager, ArArgumentBuilder * &gt;</type>
      <name>myFilePasswordCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>afb3fc8c84c13b10c448ad682245ad9ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArClientSwitchManager, ArArgumentBuilder * &gt;</type>
      <name>myFileServerKeyCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a944913acfb47f155ffa12aa7e9d27d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArClientSwitchManager, ArArgumentBuilder * &gt;</type>
      <name>myFileUserCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ae187dced7b2362943f9d4d735b858332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myIdentifier</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a029e2d2ccd44cc87aa02a3c1ede28af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastConnectionAttempt</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a981cd5da70a120f2fff9434966855d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastTcpHeartbeat</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a075f4b818550cbce832f205546dc37df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastUdpHeartbeat</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a6b0370d0c5affcc065b3089e2e49e4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArConstFunctorC&lt; ArClientSwitchManager &gt;</type>
      <name>myLogOptionsCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>affb1efad208683dad9b99ea102ef2603</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArClientSwitchManager, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetCentralHeartbeatCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aa4839cd64f4252cf51cc846f93d24d7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArClientSwitchManager, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetCentralServerHeartbeatCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a85e104c12af817d51e3965ebd471897f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArClientSwitchManager &gt;</type>
      <name>myParseArgsCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aa88aeb391f892af1f0e8610940c0eeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArArgumentParser *</type>
      <name>myParser</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a66e579fd07ba590df54e1fea59e32367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPassword</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ad154aac9067bb476fdf71882583112ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArClientSwitchManager &gt;</type>
      <name>myProcessFileCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a3f949f02f294886d4292c21d7e8a0b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a0f396130e6c6cd9e198b7450ed6f3eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myServerBackupTimeout</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a8b7a77d2cc9555285f21e3dee6c61736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerClient *</type>
      <name>myServerClient</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a9db3fb8d322034e2db8cc84cfb76cfa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myServerDesc</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a6d65c171e6791f5d6f525538cc524099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myServerHasHeartbeat</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a6fc973bbb80df87a7ee0735b7944d649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myServerHeartbeatTimeout</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>aca1f01efe5ad1bf22821b9cc3ba31a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myServerKey</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>afe2bd2d71d283b541fde557373fad50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myServerUdpHeartbeatTimeout</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>af7fa170e857a73548e58b4f8ccfae2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArClientSwitchManager &gt;</type>
      <name>mySocketClosedCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>ab8982013149da7ffd9d228fbad70f64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myStartedState</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>abfa5cc284eafa04dcf5fd2b6249ff4b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>myState</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a8def11eb93a215369f4a645b5e37dd05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArClientSwitchManager, ArNetPacket * &gt;</type>
      <name>mySwitchCB</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a941477d9039fed5957748098ed7ae280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTryConnection</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a6afc63aeafd19afae257c5549a595269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myUser</name>
      <anchorfile>classArClientSwitchManager.html</anchorfile>
      <anchor>a95329e75dd63e86c9dfc413b955b9810</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArHybridForwarderVideo</name>
    <filename>classArHybridForwarderVideo.html</filename>
    <base>ArCameraCollectionItem</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToCameraCollection</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a085996653431e1995159ded98636fd97</anchor>
      <arglist>(ArCameraCollection &amp;collection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArHybridForwarderVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>aa72cf4015485ffd8c1c7219ab8e8d8c7</anchor>
      <arglist>(ArServerBase *server, ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArHybridForwarderVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>adc89d1c8445d3345b94960d2cb21b1e3</anchor>
      <arglist>(ArServerBase *server, const char *hostname=&quot;localhost&quot;, int port=7070)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clientCycleCallback</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a461792c445b041b8ebfb9d9a9de6ab0d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>getCameraName</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>ae878e63a158e49acf2cc073621691d4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForwardingVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>af576fd70231e335e66a6a3b0e9f1fbea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receiveVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>ac1899d6cebf6d38a8018186390c0109c</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>receiveVideoSize</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>ac3cb3870ad8fbe14dfdcf99ae16d88c9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>ac3251ed024d00e6e609da8cde5686438</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendVideoSize</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>ad401aa20a975fc0504f55b785ac49e1e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCameraName</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a68a59cd43d2d97f63a39d784b0d6965b</anchor>
      <arglist>(const char *cameraName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoRequestTime</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a16a901d52b728d39a97701278ab965fa</anchor>
      <arglist>(int ms)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVideoRequestTime</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a4ad3057c070cf8600296d682facd2303</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArHybridForwarderVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>aa090510f9fb1e954e77ea28070821d24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>finishConstructor</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>ac4c93743ac228ef81562d2d163b6e2f8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myCameraName</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>adda23b09c632085af65a343ac1980e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>acfb547d27a4fa4b8b55ddc8db6bca0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArHybridForwarderVideo &gt; *</type>
      <name>myClientCycleCB</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a1ad9b094483094bf6410c7d16b0ae1e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myForwardingVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a090c5ba82799e702ab1cebe7e168cfb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsSendVideoAvailable</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a59fa9d2e2e619b7142a59347972b25c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastReceivedVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a03cec5790a8b7d4c099bfe6449142bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastReqSent</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>adf99fd9112f6069987473aee25ee7412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myMutex</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>acaef8f4b4745e29f9aaffb17602cce81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myReceivedVideo</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a34267aeff9a9b4cb168d31984e3aa60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myReceivedVideoSize</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a4d7afcbf914f51221380cafe5b0461e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArHybridForwarderVideo, ArNetPacket * &gt; *</type>
      <name>myReceiveVideoCB</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a32ea54146296322791b707ab0de8f6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArHybridForwarderVideo, ArNetPacket * &gt; *</type>
      <name>myReceiveVideoSizeCB</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a5eecf0a9fdc1dfc83140d3fd0c450846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myReqSent</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a69f29967bed09b0e6d909d0c7f69f481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>mySendVideoArgument</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a46d90edd870943eb4d1ba9a9e97c58e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArHybridForwarderVideo, ArServerClient *, ArNetPacket * &gt; *</type>
      <name>mySendVideoCB</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>af453ff2b1a3537c9fe783a52da18188e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArHybridForwarderVideo, ArServerClient *, ArNetPacket * &gt; *</type>
      <name>mySendVideoSizeCB</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a0d42b9bfbb4263d75e4d6169f59797f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a57f30b271a9a17b5486a3c665c8afa9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myVideoRequestTime</name>
      <anchorfile>classArHybridForwarderVideo.html</anchorfile>
      <anchor>a97fc4b61ac0fa183c8a2154ab6cef410</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArMapChanger</name>
    <filename>classArMapChanger.html</filename>
    <class kind="struct">ArMapChanger::ClientChangeInfo</class>
    <member kind="enumeration">
      <name>MapChangeReplyType</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a852654bd4cf1c91a28ca21a538c42faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANGE_FAILED</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a852654bd4cf1c91a28ca21a538c42fafabef9c86892f69ab8092734f5aba909ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANGE_SUCCESS</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a852654bd4cf1c91a28ca21a538c42fafa9cea6a58aa34cba65bcdd300aee2f37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addChangeCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ae94a0812800303aa9e0bac2d4c455c43</anchor>
      <arglist>(ArFunctor2&lt; ArServerClient *, std::list&lt; ArNetPacket * &gt; * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPostWriteFileCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a42cfd2bf214b1674ae25be4d0a6ee9ff</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addPreWriteFileCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>abfb73ff889d58a5fc4675881211c5220</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addRobotChangeReplyCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aaa74574962d3b9d881769a717f267bda</anchor>
      <arglist>(ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyMapChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a143a8d888984d5691536e809f2c08840</anchor>
      <arglist>(ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapChanger</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a3c4275b2fe1eb11f0937a805b21e8eb1</anchor>
      <arglist>(ArServerBase *server, ArMapInterface *map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapChanger</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a9f5aa19aee09e5745e786c6d76ba5836</anchor>
      <arglist>(ArClientSwitchManager *clientSwitch, ArServerBase *server, ArMapInterface *map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapChanger</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aff206ab7c8c77f5c3da8abaf77f515ed</anchor>
      <arglist>(ArClientBase *client, const std::list&lt; std::string &gt; &amp;infoNames)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArMapChanger</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a1fb05411204d0fbff65b031094fef3ae</anchor>
      <arglist>(ArMapInterface *map)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remChangeCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>abe1f97e020306006e66e5ded63ab960f</anchor>
      <arglist>(ArFunctor2&lt; ArServerClient *, std::list&lt; ArNetPacket * &gt; * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remPostWriteFileCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a5e328dbf0e447dad115b4acaa9a920cb</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>remPreWriteFileCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a2003fdf3b981d8005ae409e7f6e9dfec</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>remRobotChangeReplyCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aef0e45ea59fe1fd153109a025dc42a9d</anchor>
      <arglist>(ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendMapChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aad377655ee135174213579f5b88941b4</anchor>
      <arglist>(ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendPacketList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a54e7293beac64133068f0b44cadc6b15</anchor>
      <arglist>(const std::list&lt; ArNetPacket * &gt; &amp;packetList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendRobotMapChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a12e8eba81780f3726fd2246b876d60e1</anchor>
      <arglist>(ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendRobotPacketList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a7d9bb030031d7df3f2e72d3106d60653</anchor>
      <arglist>(const std::list&lt; ArNetPacket * &gt; &amp;packetList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArMapChanger</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>af0efc22bd3a1e7a6efc39743eccb6f64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>CHANGES_IN_PROGRESS_PACKET_NAME</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a409e5a475b6fca4b5a88c0ac8a0719c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>PROCESS_CHANGES_PACKET_NAME</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad5f4ec636f5e83c3839e29ba33c72ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>PROCESS_ROBOT_CHANGES_PACKET_NAME</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a9850b0ed88ce378295870c012f0eb6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>ROBOT_CHANGES_COMPLETE_PACKET_NAME</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>af224c506b1308943284d7e7da5efc86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANGE_DATA_TYPE_COUNT</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ac56296aec0c3ed853fd3eb59962bfdf1a9888e3d405aaf2b49425378cbb97552c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CHANGE_COMMAND_COUNT</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ac56296aec0c3ed853fd3eb59962bfdf1abbadb91de7aa82fbca854bd6091ba5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_POINTS_IN_PACKET</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ac56296aec0c3ed853fd3eb59962bfdf1afc12e915661b82fdf0641adb10d1d66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_LINES_IN_PACKET</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ac56296aec0c3ed853fd3eb59962bfdf1a0e319207548f675f31bee1dc7255c5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MapChangeCommand</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ab1549ef7090ace709ceed5f4ca68e376</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>START_CHANGES</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ab1549ef7090ace709ceed5f4ca68e376a4960b8a8b46e1fab434a2077f3049d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONTINUE_CHANGES</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ab1549ef7090ace709ceed5f4ca68e376a4508920597914ab8400fbffa627825a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FINISH_CHANGES</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ab1549ef7090ace709ceed5f4ca68e376a3107cef001e3a43aeb660535782a5498</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CANCEL_CHANGES</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ab1549ef7090ace709ceed5f4ca68e376a2edc48967c8486823d9a29301d981fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_CHANGE_COMMAND</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ab1549ef7090ace709ceed5f4ca68e376ad12cedf203986d18aa8a480afad867a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>MapChangeDataType</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_CHANGE</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaa456e025f2b60c4dfe936f2ae19a58588</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUMMARY_DATA</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaaef383b85b35c07dbec6355b066dee955</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFO_DATA</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaa893e8a782e6fadd7e4c58699de319d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUPPLEMENT_DATA</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaa042468b4c8964c702a38e27e58e74ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OBJECTS_DATA</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaa56c4d61c5a32300a4a912288b684c920</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTS_DATA</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaa08d04cdc16d4991988ea51ba86de5cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINES_DATA</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaa52a65e1244a57df9dd2626da27c693e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAST_CHANGE_DATA_TYPE</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad3195fa44ecad890c3db1c4886996abaaab87abd5e0e5e2c13f85e841f652a438</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>addFileLineSetPackets</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a6775e154dbd08e9d3ad09b36bfdf9fa2</anchor>
      <arglist>(MapChangeDataType dataType, ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, const char *extra, ArMapFileLineSet *fileLineSet, std::list&lt; ArNetPacket * &gt; *packetListOut)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>addFileLineToPacketList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>af277fd6b736ef840df1e2158ff83c642</anchor>
      <arglist>(MapChangeDataType dataType, ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, const ArMapFileLine &amp;fileLine, std::list&lt; ArNetPacket * &gt; *packetListOut)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>addGroupToPacketList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a8f36a634b135aeca676b3ace46e62fd6</anchor>
      <arglist>(MapChangeDataType dataType, ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, ArMapFileLineGroup &amp;group, std::list&lt; ArNetPacket * &gt; *packetListOut)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addHeaderToPacket</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a7a49911efe804ecaa23e35e4cf171d9d</anchor>
      <arglist>(MapChangeCommand command, MapChangeDataType dataType, ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>addLinesPackets</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a41316c185f5f35e09d50159885df68b2</anchor>
      <arglist>(ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, std::vector&lt; ArLineSegment &gt; *lineSegmentList, std::list&lt; ArNetPacket * &gt; *packetListOut)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>addPointsPackets</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a217eef4ae35a210e15bafeecc84b1851</anchor>
      <arglist>(ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, std::vector&lt; ArPose &gt; *pointList, std::list&lt; ArNetPacket * &gt; *packetListOut)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addToCallbackList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>adb19740b81a0c27a0a8c5b8ead3d8f0e</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position, std::list&lt; ArFunctor * &gt; *cbList)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>applyInfoChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad1674eb6377d518e60e239c830d62936</anchor>
      <arglist>(ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>applyObjectChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a9ac4dc25c85ec5959766451cfd76802e</anchor>
      <arglist>(ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>applyScanChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a714618eeef1d845f0d2a27ae29a1a9ee</anchor>
      <arglist>(ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>applyScanChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a31ada1546aeb41883d8851f28e42f680</anchor>
      <arglist>(ArMapChangeDetails *changeDetails, const char *scanType, ArFileParser &amp;parser)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>applySupplementChanges</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a62bd1ee27634796829a3b287f11ec504</anchor>
      <arglist>(ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>convertChangeDetailsToPacketList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a30fa322777e2c916275cf93249196dc8</anchor>
      <arglist>(ArMapChangeDetails *changeDetails, std::list&lt; ArNetPacket * &gt; *packetListOut, bool isRelay=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>convertPacketListToChangeDetails</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a3df6edf63396448d6e269e2a0c2a52b4</anchor>
      <arglist>(std::list&lt; ArNetPacket * &gt; &amp;packetList, ArMapChangeDetails *changeDetailsOut)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleChangePacket</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a638fba4b6bbe39292c5134f376e912ce</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleChangeReplyPacket</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a3df8e38ec607d3ed344965133ff7cd35</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleChangesInProgressPacket</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a36326d95ab1076cf32b50fdcbde37739</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleClientShutdown</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a87178bad2e79779cd29dc544f03676a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleIdleProcessingPacket</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a84b8b1b160752bfed246e08a9b4680ac</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleRobotChangeReplyPacket</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>abbe010f1f4742ba3e45ac5449163a9e0</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isIdleProcessingPending</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a3afdd5ed6a87efaa81f2e7992c5fe6d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isMatchingObjects</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a83b329b111b330714e1d73142853d46c</anchor>
      <arglist>(ArMapObject *obj1, ArMapObject *obj2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>remFromCallbackList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a0662075ee107a7e1cc3da65357fc366e</anchor>
      <arglist>(ArFunctor *functor, std::list&lt; ArFunctor * &gt; *cbList)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetPacketList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aa2fc540cc5050447bd640aa4b2034ba9</anchor>
      <arglist>(std::list&lt; ArNetPacket * &gt; *packetList)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>unpackFileLineSet</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a9d9dabaa125125f55f25b20b6e1cad06</anchor>
      <arglist>(ArNetPacket *packet, MapChangeDataType dataType, ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, int *numGroups, int *numChildren, ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>unpackHeader</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a020bc0e2af2ce73e10c4fed8901a027a</anchor>
      <arglist>(ArNetPacket *packet, MapChangeCommand *commandOut, ArMapId *origMapIdOut, ArMapId *newMapIdOut=NULL, MapChangeDataType *dataTypeOut=NULL, ArMapChangeDetails::MapLineChangeType *changeTypeOut=NULL, std::string *scanTypeOut=NULL)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>unpackLines</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>afe3dbf5e11f9a121d8f17e218cc8aac8</anchor>
      <arglist>(ArNetPacket *packet, ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, int *numLines, ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>unpackPoints</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a6a9891d76099198ac2e49d4867985529</anchor>
      <arglist>(ArNetPacket *packet, ArMapChangeDetails::MapLineChangeType changeType, const char *scanType, int *numPoints, ArMapChangeDetails *changeDetails)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>waitForCentralServerReply</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aaacff19ee2b01c2d32bc60a8e26df6c6</anchor>
      <arglist>(ArTime &amp;started)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>waitForReply</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a7e21533dabbf367f94c2ac6c73b7289e</anchor>
      <arglist>(ArTime &amp;started)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor2&lt; ArServerClient *, std::list&lt; ArNetPacket * &gt; * &gt; * &gt;</type>
      <name>myChangeCBList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ae7a8ab5f4f6b981d862e18cb472b20a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapChangeDetails *</type>
      <name>myChangeDetails</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a630033dac696c94671b4155a7ba649b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aff3ea22ecd353f08d45a7c02f1d8f561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ClientChangeInfo *</type>
      <name>myClientInfo</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>ad2eeb3f98563ebf24307d2361b789884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myClientInfoMutex</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a2f7141498552450b70438d25d7904c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myClientMutex</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a0190ce451a050fbda153345808bb4e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArMapChanger &gt;</type>
      <name>myClientShutdownCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a6d4196edba45d1930c3f50e465d13356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientSwitchManager *</type>
      <name>myClientSwitch</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a3f57c7f186936273ee6af5fac36c8ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArMapChanger, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myHandleChangePacketCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aa6119abb76531a9b4716bbc4725ae8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArMapChanger, ArNetPacket * &gt;</type>
      <name>myHandleChangesInProgressPacketCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a12d8861d927f8507e6872b004b40b6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArMapChanger, ArNetPacket * &gt;</type>
      <name>myHandleIdleProcessingPacketCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a4d016fc5664d8994c966d3ed7ee76721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArMapChanger, ArNetPacket * &gt;</type>
      <name>myHandleReplyPacketCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a38e1625b116a1baa4ae4ccd240b44de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArMapChanger, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myHandleRobotReplyPacketCB</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a509cad7e645463e2a7e6fb332812f770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myIdleProcessingMutex</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a946fc5ad4814f295b6e28e720d75ab7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myInfoNames</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aac68b8ebcd9edd81d5f412ae1ff3305d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myInterleaveMutex</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a76e5cef58ddf23b17a4a8e9e4b45c837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsIdleProcessingPending</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a5c7e7aad748cf4c06e0bfeb3844739da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsServerClientInit</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a25e9f849bb6647cc287e2081e4f886a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsWaitingForReturn</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aba1d157146488c4cd8b71f19f3252503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapInterface *</type>
      <name>myMap</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a829644089e79fe7c34c722506e5d6e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPostWriteCBList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a61daf7e22d46ab1ef050fb1758eefa32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPreWriteCBList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a9298c174615a941c245acd39e2c05c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myReadyForNextPacket</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aaea33e6e54a2efac854ccd37d637cab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; * &gt;</type>
      <name>myRobotChangeReplyCBList</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a87c88ce3a949cc2b97007b603d8bc6bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>a4fb3dd5fbcc1dbc18d7d8e3244687f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapInterface *</type>
      <name>myWorkingMap</name>
      <anchorfile>classArMapChanger.html</anchorfile>
      <anchor>aba09f10fe736f9cb2b9c86b9e8193848</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArMapChanger::ClientChangeInfo</name>
    <filename>structArMapChanger_1_1ClientChangeInfo.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addPacket</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>a33385e43a211f2d5632603e0861d206e</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClientChangeInfo</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>a99e542b23c62fc532cc3287bb7912cf6</anchor>
      <arglist>(ArServerClient *client)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClientChangeInfo</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>a0bf8ff496b8521b438854f35e8679c33</anchor>
      <arglist>(ArCentralForwarder *forwarder)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClientChangeInfo</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>a8b6cc12262b85f5fa4cc35a6182bd01d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ArServerClient *</type>
      <name>myClient</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>afe06e716e74b880957d6254883977801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArCentralForwarder *</type>
      <name>myForwarder</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>a95be9ed68f5389a29119d81ad8eab5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTime</type>
      <name>myLastActivityTime</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>a56af8410e1a09d5ef844ff892d52c1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; ArNetPacket * &gt;</type>
      <name>myPacketList</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>a5f6e6eb4f38231bc2823d7a445c31720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTime</type>
      <name>myStartTime</name>
      <anchorfile>structArMapChanger_1_1ClientChangeInfo.html</anchorfile>
      <anchor>ab03148ce83fe28142eec3ac6c51b8e3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNetCameraRequest</name>
    <filename>classArNetCameraRequest.html</filename>
    <base>ArNetPacket</base>
    <member kind="function">
      <type></type>
      <name>ArNetCameraRequest</name>
      <anchorfile>classArNetCameraRequest.html</anchorfile>
      <anchor>af0188ae835b902a585d990b63608bb87</anchor>
      <arglist>(ArClientBase *client, const char *cameraName=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestPanTiltAbs</name>
      <anchorfile>classArNetCameraRequest.html</anchorfile>
      <anchor>a0ce74f31bac004f0414a66a36a4e776b</anchor>
      <arglist>(double pan, double tilt)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requestPanTiltZoomAbs</name>
      <anchorfile>classArNetCameraRequest.html</anchorfile>
      <anchor>a440ce2d91e43102dab8a340be99e87ab</anchor>
      <arglist>(double pan, double tilt, double zoom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraName</name>
      <anchorfile>classArNetCameraRequest.html</anchorfile>
      <anchor>aa030aeb5201cddf4819b3fe31a98efd7</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArNetPacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a9c9843ff5d3a400cac0d6d00c83f78b5</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=ArNetPacket::MAX_LENGTH+5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArNetPacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>ae2be3f2502d8f7dc6de1829382adb13f</anchor>
      <arglist>(const ArNetPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>bufToDouble</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a1e147af5960e3057e9b6aa7e00c6761c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte2</type>
      <name>calcCheckSum</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a3f64d593a9d1ad07173cff66ee8954bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doubleToBuf</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a7b9f461cb78f9bcc0ffa30d31784fa8e</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>duplicatePacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a0cf6a699500c885066dbf6fcaf145756</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>empty</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a967d1901ff4e9cc53e31383eaa3bb609</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalizePacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a5076d7a8d058ed0f6f5795891e1fca6e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAddedFooter</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>aac5fd0759f7dcfed8e2975ff604a59ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getArbitraryString</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a79546a0d31550048b82920743dd5eeec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::UByte2</type>
      <name>getCommand</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>af058f6edff90eef3961f9b21bc88e2ab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>PacketSource</type>
      <name>getPacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a1e8445410a7b4dd8aa36a6f8cd7acf64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArNetPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>afe67c21266da1070f346103d68435028</anchor>
      <arglist>(const ArNetPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetRead</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>acae24ddf871f42502daf8405d56d36c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddedFooter</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a04038b06114dfb5326cd2b297d86c135</anchor>
      <arglist>(bool addedFooter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryString</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a2771ce232aab3313f52f4d5365d45780</anchor>
      <arglist>(const char *string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>abdd7e7d8f5de66e2b9131c0d3c548a3e</anchor>
      <arglist>(ArTypes::UByte2 command)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a952af70689710ce5ca92f8bfc23ce09b</anchor>
      <arglist>(PacketSource source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyCheckSum</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a617b372f24ae6a21b70c9119878baac6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArNetPacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a3501d8ef29c8cc2604a631bb4e1d34c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue">
      <name>SIZE_OF_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a7e723695f5dc573ce73549d9db39465b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a233ff463989369cb076795dd20c44d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEADER_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a4e7fdf73911e38ef8031b03e27cc157e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOOTER_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a143233cf777bfe992c946039dd006548</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_DATA_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a340ff1cfb7242c223236b0a6568afddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a699c1b74aac44c20113ba6412655de1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCP</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a699c1b74aac44c20113ba6412655de1dada3588583303835c7ded0f5767d8df6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDP</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a699c1b74aac44c20113ba6412655de1daff33666d202e647f4c668e8397578cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAddedFooter</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>ad555f54097bb3993f1dd6722fc342d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myArbitraryString</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a3d700012f7617631d68557dc7e91bb15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::UByte2</type>
      <name>myCommand</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>aae1f97b66d272e769b94a8839106ea2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PacketSource</type>
      <name>myPacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a5a79737be3207675b992509cf23f3800</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNetPacket</name>
    <filename>classArNetPacket.html</filename>
    <base>ArBasePacket</base>
    <member kind="enumvalue">
      <name>SIZE_OF_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a7e723695f5dc573ce73549d9db39465b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a233ff463989369cb076795dd20c44d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HEADER_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a4e7fdf73911e38ef8031b03e27cc157e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FOOTER_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a143233cf777bfe992c946039dd006548</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAX_DATA_LENGTH</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a11c6eb7a86ddc6ea04a49cc0ea307a64a340ff1cfb7242c223236b0a6568afddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>PacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a699c1b74aac44c20113ba6412655de1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCP</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a699c1b74aac44c20113ba6412655de1dada3588583303835c7ded0f5767d8df6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDP</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a699c1b74aac44c20113ba6412655de1daff33666d202e647f4c668e8397578cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArNetPacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a9c9843ff5d3a400cac0d6d00c83f78b5</anchor>
      <arglist>(ArTypes::UByte2 bufferSize=ArNetPacket::MAX_LENGTH+5)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArNetPacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>ae2be3f2502d8f7dc6de1829382adb13f</anchor>
      <arglist>(const ArNetPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>bufToDouble</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a1e147af5960e3057e9b6aa7e00c6761c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte2</type>
      <name>calcCheckSum</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a3f64d593a9d1ad07173cff66ee8954bb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doubleToBuf</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a7b9f461cb78f9bcc0ffa30d31784fa8e</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>duplicatePacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a0cf6a699500c885066dbf6fcaf145756</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>empty</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a967d1901ff4e9cc53e31383eaa3bb609</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalizePacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a5076d7a8d058ed0f6f5795891e1fca6e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAddedFooter</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>aac5fd0759f7dcfed8e2975ff604a59ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getArbitraryString</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a79546a0d31550048b82920743dd5eeec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::UByte2</type>
      <name>getCommand</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>af058f6edff90eef3961f9b21bc88e2ab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>PacketSource</type>
      <name>getPacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a1e8445410a7b4dd8aa36a6f8cd7acf64</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArNetPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>afe67c21266da1070f346103d68435028</anchor>
      <arglist>(const ArNetPacket &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetRead</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>acae24ddf871f42502daf8405d56d36c3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddedFooter</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a04038b06114dfb5326cd2b297d86c135</anchor>
      <arglist>(bool addedFooter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArbitraryString</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a2771ce232aab3313f52f4d5365d45780</anchor>
      <arglist>(const char *string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommand</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>abdd7e7d8f5de66e2b9131c0d3c548a3e</anchor>
      <arglist>(ArTypes::UByte2 command)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a952af70689710ce5ca92f8bfc23ce09b</anchor>
      <arglist>(PacketSource source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyCheckSum</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a617b372f24ae6a21b70c9119878baac6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArNetPacket</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a3501d8ef29c8cc2604a631bb4e1d34c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAddedFooter</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>ad555f54097bb3993f1dd6722fc342d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myArbitraryString</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a3d700012f7617631d68557dc7e91bb15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::UByte2</type>
      <name>myCommand</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>aae1f97b66d272e769b94a8839106ea2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PacketSource</type>
      <name>myPacketSource</name>
      <anchorfile>classArNetPacket.html</anchorfile>
      <anchor>a5a79737be3207675b992509cf23f3800</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNetPacketReceiverTcp</name>
    <filename>classArNetPacketReceiverTcp.html</filename>
    <member kind="function">
      <type></type>
      <name>ArNetPacketReceiverTcp</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a296495f396011382eca31a9b6d2d573d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor1&lt; ArNetPacket * &gt; *</type>
      <name>getProcessPacketCB</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a6f361a2714580f35c50f7a0253df1040</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getQuiet</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a6b4cc6fabc56576af75f7bfd727d1ae6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSocket *</type>
      <name>getSocket</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>adf7127a13986063e7a4c130f3bf55421</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readData</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a890d4bdcd0e68e98b78c142bb752b74d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoggingPrefix</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a6856fa666eee1a726f24cc29f1c4dd24</anchor>
      <arglist>(const char *loggingPrefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessPacketCB</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>aabb2ee9ad00fed3d6d2057634f2813a1</anchor>
      <arglist>(ArFunctor1&lt; ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuiet</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>aa91c0cb40e86f21dd3af22567f1c7a07</anchor>
      <arglist>(bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSocket</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a886818db9c10cdc4e43e946f7239b325</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArNetPacketReceiverTcp</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>adb12f0d5d88ee25ae60c724d14f14baf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue">
      <name>TOTAL_PACKET_LENGTH</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>aa01aaec8940d7485a0ee84c7d11bc52fa146ac460febcaa693e081e42f0608fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Ret</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a76116a42ec47264c061e8cfe3565e97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RET_CONN_CLOSED</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a76116a42ec47264c061e8cfe3565e97ea381e44166e13fdac40b28aa969a541a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RET_CONN_ERROR</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a76116a42ec47264c061e8cfe3565e97ea10030506b4e96909b898a8d689c928b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RET_GOT_PACKET</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a76116a42ec47264c061e8cfe3565e97ea5e75e477ac45985b70b4b10cf8a9ad0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RET_BAD_PACKET</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a76116a42ec47264c061e8cfe3565e97eadcad0df1074a8869eb2284ce912b31c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RET_FAILED_READ</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a76116a42ec47264c061e8cfe3565e97ea9e54270eeecfb3325d45e3b452aef2a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RET_TIMED_OUT</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a76116a42ec47264c061e8cfe3565e97ea475e41d0d8e5b063f9da0bf16e1981ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>State</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a010c068eb5b149fac6ebc2d62605e877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SYNC1</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a010c068eb5b149fac6ebc2d62605e877a4e57959ccd21fb855a979515c4492f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SYNC2</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a010c068eb5b149fac6ebc2d62605e877aa7a3c6c802f9dd464fcc25fa6e4ba9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_LENGTH1</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a010c068eb5b149fac6ebc2d62605e877ad9a41316161b3e85f52f6974fd8a1d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_LENGTH2</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a010c068eb5b149fac6ebc2d62605e877a03926065d783b5bc47b2992a03b38254</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_ACQUIRE_DATA</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a010c068eb5b149fac6ebc2d62605e877af750144bc35173846e7c61d49c970cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Ret</type>
      <name>readPacket</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a3b5299ac1052b95199fa2bb03416ad17</anchor>
      <arglist>(int msWait)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastPacket</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>ab7a4e9e8a31b0657345b3c1fe36be897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLoggingPrefix</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>aeb5d25bdd33bf56e13e03eff265f4e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myPacket</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a1d94a72f83579b5ecd54b80230acbb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1&lt; ArNetPacket * &gt; *</type>
      <name>myProcessPacketCB</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a0ff3e8c79ea85602d8a02ef0c68f2179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myQuiet</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a32ae68ab3204e80c95b8cf8efb2d0152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myReadBuff</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a8c685fc3e8c8ea6feaa1dec662d8cc5f</anchor>
      <arglist>[TOTAL_PACKET_LENGTH]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myReadCommand</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a48597805fbc8af5c6be36e68c7b28f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myReadCount</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>aecf6c45f2a6a58a049509933ef4bf812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myReadLength</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>aa86f728499a275ea2239297eea54fe27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket *</type>
      <name>mySocket</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>af226fbbac54e12e07399b16fa36e756c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>myState</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a12e004623b489822264a70fd8d388d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char</type>
      <name>mySync1</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a2131fea3a0a13cfbfc6ead24968109de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned char</type>
      <name>mySync2</name>
      <anchorfile>classArNetPacketReceiverTcp.html</anchorfile>
      <anchor>a5f6c8bb129aa8931257edd76b1c9cbdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNetPacketReceiverUdp</name>
    <filename>classArNetPacketReceiverUdp.html</filename>
    <member kind="function">
      <type></type>
      <name>ArNetPacketReceiverUdp</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>ad2164c5d31a8992cbfeb2213b8392e7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor2&lt; ArNetPacket *, struct sockaddr_in * &gt; *</type>
      <name>getProcessPacketCB</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a4a5ea9eb169b2eaacd6cadad88419b14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSocket *</type>
      <name>getSocket</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a58b044eae165fad907bb98815c247abe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readData</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a33633a145d32b490f01c6fedf7a976b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessPacketCB</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a7d5fdeacc3d99e7a946902ed63cd8058</anchor>
      <arglist>(ArFunctor2&lt; ArNetPacket *, struct sockaddr_in * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSocket</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a202be8f46bb9a7e04465a417aeefd941</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArNetPacketReceiverUdp</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a5845a7b396fb49621bc1e6fc1eeac1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myBuff</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a32462105d7d95308279967d1650e95b1</anchor>
      <arglist>[ArNetPacket::MAX_LENGTH+20]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastPacket</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>ad2726176408438bc1331647af7a14b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myPacket</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a74c9cf32bfd646caabba7a4b7b8d3876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2&lt; ArNetPacket *, struct sockaddr_in * &gt; *</type>
      <name>myProcessPacketCB</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a8490db05e4b73a7f6946daba739d1634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket *</type>
      <name>mySocket</name>
      <anchorfile>classArNetPacketReceiverUdp.html</anchorfile>
      <anchor>a61d3ce49d3e5a6c057e80d78555b6dc1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArNetPacketSenderTcp</name>
    <filename>classArNetPacketSenderTcp.html</filename>
    <member kind="function">
      <type></type>
      <name>ArNetPacketSenderTcp</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a67e1fe8517cbed89259c1cb785dfe214</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArSocket *</type>
      <name>getSocket</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>aa47d831d6de1eb96496a65262414522c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendData</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a0dde27e4368adff647295a7bce68e5ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendPacket</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>acaf0baf768a46d743530ca071ce96bd8</anchor>
      <arglist>(ArNetPacket *packet, const char *loggingString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackupTimeout</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>aaae4827c98ee78b511d589799c1bb4ee</anchor>
      <arglist>(double connectionTimeoutInMins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugLogging</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>ae51c539c7bedb05ab96a34ba510a0c81</anchor>
      <arglist>(bool debugLogging)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoggingPrefix</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a1fcf6884fd55109ef3bc26aaaf46de51</anchor>
      <arglist>(const char *prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSocket</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>aeb1e44978ebb575bd84afd59f8e954be</anchor>
      <arglist>(ArSocket *socket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArNetPacketSenderTcp</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a598bff929b796c4d974ef2d994f337a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myAlreadySent</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>ae0327c491a1fc56449f5ac9511dce00b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myBackupTimeout</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>ace4dd30f3f9b62dda7346d1b6a266f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>myBuf</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a1fd773e6097e81451b3b655e71548a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>aaa9dac69efe4a6c057cf8e0474a531f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDebugLogging</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a1e80d90c7905736a65e4d1086879cf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastGoodSend</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a6e028b8db662735eaa524c4a7fc03855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myLength</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a62ab95d0bff15b681563e0f1ac152e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLoggingPrefix</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a01db8d3800b547c0abadd26bd4a45ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket *</type>
      <name>myPacket</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a3f1477ad7fe3bf67b16b9b66c555778a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArNetPacket * &gt;</type>
      <name>myPacketList</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a05c825cad81068731355dbe4cc624307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket *</type>
      <name>mySocket</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a1d4e34fe16705a748fd1ebd954a627a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArNetPacketSenderTcp.html</anchorfile>
      <anchor>a2c21c7e080176fbab1f42bb18c2e147a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerAdvertiser</name>
    <filename>classArServerAdvertiser.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerAdvertiser</name>
      <anchorfile>classArServerAdvertiser.html</anchorfile>
      <anchor>aa7b95d336dea9f5252e331334887dc1d</anchor>
      <arglist>(ArServerBase *server, const char *name, const char *description, const char *servertype=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classArServerAdvertiser.html</anchorfile>
      <anchor>a12afaf656627ebe47f56f93bb2621db6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerAdvertiser</name>
      <anchorfile>classArServerAdvertiser.html</anchorfile>
      <anchor>a22b815056f0a17f000b1e0219c444d4f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerBase</name>
    <filename>classArServerBase.html</filename>
    <base>ArASyncTask</base>
    <class kind="class">ArServerBase::SlowIdleThread</class>
    <member kind="function">
      <type>void</type>
      <name>addClientRemovedCallback</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5c10bb9e88f0152bcdfd4a69073c43a6</anchor>
      <arglist>(ArFunctor1&lt; ArServerClient * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCycleCallback</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a1dd6a24a2047f58b072e81c0738422d5</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addData</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a2df604c980c35140f69d35362a3403f2</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addDataAdvanced</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a6ab8869702eccf72ad8502b3017b9840</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL, unsigned int commandNumber=0, ArFunctor2&lt; long, unsigned int &gt; *requestChangedFunctor=NULL, ArRetFunctor2&lt; bool, ArServerClient *, ArNetPacket * &gt; *requestOnceFunctor=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addIdleSingleShotCallback</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>afa3b9a97e42df6d21c84facbf5885673</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTooManyClientsCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ae83d192ad0c7765050e4b4986ce36377</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowingIdlePackets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>acc31eee87d89bb9fe77bd3540433b26c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerBase</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a3b5424c9529d3abf77f94e22473a923d</anchor>
      <arglist>(bool addAriaExitCB=true, const char *serverName=&quot;&quot;, bool addBackupTimeoutToConfig=true, const char *backupTimeoutName=&quot;RobotToClientTimeoutInMins&quot;, const char *backupTimeoutDesc=&quot;The amount of time the central server can go without sending a packet to the robot successfully (when there are packets to send).  A number less than 0 means this won&apos;t happen.  The time is in minutes but takes doubles (ie .5) (5 seconds is used if the value is positive, but less than that amount)&quot;, bool masterServer=false, bool slaveServer=false, bool logPasswordFailureVerbosely=false, bool allowSlowPackets=true, bool allowIdlePackets=true, int maxClientsAllowed=-1, int warningTimeMSec=250)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketTcp</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aaf43c74fa075d30ec57eb1ac4221084c</anchor>
      <arglist>(ArNetPacket *packet, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketTcpByCommand</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aee133514be0a90cddb8fb8937928e935</anchor>
      <arglist>(ArNetPacket *packet, unsigned int command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketTcpByCommandWithExclusion</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a709cfe0356ecde312a8454f582fb26f6</anchor>
      <arglist>(ArNetPacket *packet, unsigned int command, ArServerClient *excludeClient, bool match=false, ArServerClientIdentifier identifier=ArServerClientIdentifier(), bool matchConnectionID=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketTcpToMatching</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5cee7b7a375e96e0e641697bbe17189f</anchor>
      <arglist>(ArNetPacket *packet, const char *name, ArServerClientIdentifier identifier, bool matchConnectionID=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketTcpWithExclusion</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ae2370b5131dd1fa05f47fbe526954277</anchor>
      <arglist>(ArNetPacket *packet, const char *name, ArServerClient *excludeClient, bool match=false, ArServerClientIdentifier identifier=ArServerClientIdentifier(), bool matchConnectionID=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketUdp</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ad1bb0c25a5dc4f2b99907a4f98e749da</anchor>
      <arglist>(ArNetPacket *packet, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketUdpByCommand</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ae1f90e6da9757192c8e349f903c29639</anchor>
      <arglist>(ArNetPacket *packet, unsigned int command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketUdpByCommandWithExclusion</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a1951a33ebf82fd31a0c79d50d622215d</anchor>
      <arglist>(ArNetPacket *packet, unsigned int command, ArServerClient *excludeClient, bool match=false, ArServerClientIdentifier identifier=ArServerClientIdentifier(), bool matchConnectionID=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketUdpToMatching</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a645dbba718d2278f8cd601fdf96fdcff</anchor>
      <arglist>(ArNetPacket *packet, const char *name, ArServerClientIdentifier identifier, bool matchConnectionID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastPacketUdpWithExclusion</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aaea911b004d1b352ee4657d756c69243</anchor>
      <arglist>(ArNetPacket *packet, const char *name, ArServerClient *excludeClient, bool match=false, ArServerClientIdentifier identifier=ArServerClientIdentifier(), bool matchConnectionID=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a72a4cff6dcdd01018f7c8c1f8361382c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeConnectionID</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5c960c6286e517f0e94936555f35a90d</anchor>
      <arglist>(ArTypes::UByte4 idNum)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataHasFlag</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a487469dc2b7f5d13d16ca262387cd882</anchor>
      <arglist>(const char *name, const char *dataFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataHasFlagByCommand</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a3d2745c62afa1f8018081899ab038e25</anchor>
      <arglist>(unsigned int command, const char *dataFlag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enforceProtocolVersion</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a0bfde76563e86f09236bc31809efd3e5</anchor>
      <arglist>(const char *protocolVersion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enforceType</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>af9b9e4b5dd3929151373665efd7ff167</anchor>
      <arglist>(ArServerCommands::Type type)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>findCommandFromName</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a13cb8349b522b278647f94573767021c</anchor>
      <arglist>(const char *command)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDebugLogging</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a52220fd0886d836402577107809ad51f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getFrequency</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a6d20aeb6f381406d73cf839201440be8</anchor>
      <arglist>(unsigned int command, bool internalCall=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMostClients</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a206a8be118bc3ca5fe51ddfd138a37c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumClients</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a555102cca19c7d085affbdf86221422c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getOpenOnIP</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a901ba41d3054ff06210bb65fc6453cc9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getTcpPort</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ad2baa7f9e5d3d62361084f458c9e1c0b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getUdpPort</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a554da8cc36f349f4b452d1c551de5d78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const ArServerUserInfo *</type>
      <name>getUserInfo</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab3729141deeb6dfd667eff708c32aee6</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasIdleCallbacks</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a6d797eebecb133853e22579a5b1544f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasIdlePackets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a71e682291c58a4b4533a66af40c040cb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSlowPackets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>abc101ab867ef90bf859625b338d9978e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>idleProcessingPending</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a7d9a02741090f79facba801f4aed8856</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalLockup</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aa43bb720cd005e69475c67a7572eecf3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>internalSetDefaultFrequency</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a278852754477a42e8edcca5075c42ae4</anchor>
      <arglist>(const char *command, int frequency)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetNumClients</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ac001c03c92e62cd94949dbfd12a6cbc4</anchor>
      <arglist>(int numClients)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadUserInfo</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aef5119d875e72544bb13957f0b0b5bfc</anchor>
      <arglist>(const char *fileName, const char *baseDirectory=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logCommandGroups</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a0e2f0ad76f564c13ec128cf0e540a89a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logCommandGroupsToFile</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a62db28d742d2f2dceaa10d0fdb9da299</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logConnections</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab41c873e1c445abbffd3eac467ec5410</anchor>
      <arglist>(const char *prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logGroupDescriptions</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>affd8469b34607f164b6c55c697adc012</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logGroupDescriptionsToFile</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>adefd07cf5208b66fb8fab1d1b53ec7a9</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logTracking</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>afb2d9c6a8bad91e92862561f134c258b</anchor>
      <arglist>(bool terse=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logUserInfo</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab9b40f639c195d97ed2948a1a0407988</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnce</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a16ec2fa72a62caa7fd9a0da9fef6e45d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArServerClient *</type>
      <name>makeNewServerClientFromSocket</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aa396c2b48cf70071c88a52771b8adda9</anchor>
      <arglist>(ArSocket *socket, bool overrideGeneralReject)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a462af995dd55756db23209e03ed9c3a8</anchor>
      <arglist>(unsigned int port, const char *openOnIP=NULL, bool tcpOnly=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processPacket</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a015990d3bc3b8a0135385b27bbaab02e</anchor>
      <arglist>(ArNetPacket *packet, struct sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rejectSinceUsingCentralServer</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a93979037994f6023ae80bc6048bd5c59</anchor>
      <arglist>(const char *centralServerIPString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remClientRemovedCallback</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a4214ab04ef0995e3edaba811d04b7e1a</anchor>
      <arglist>(ArFunctor1&lt; ArServerClient * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCycleCallback</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a9a8f1105bdde4529d0bc19f3a18da7e1</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remData</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a4f80293250011fbcd0817457c5f59bc8</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remTooManyClientsCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a3403e9c34e6d6fe82e2397471caf95b8</anchor>
      <arglist>(ArFunctor1&lt; const char * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTracking</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a368dd898ec3b6a40135b64798131a899</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>run</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a8f09a4e5207191ee21e9be174fc1c452</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runAsync</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a93c742ddc58a8f035a0d1b9c1fae4599</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a030cd022bba5ec1785cf40e50f3b7430</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendUdp</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ad5b3e00acc395d2f778d3c48494b6044</anchor>
      <arglist>(ArNetPacket *packet, struct sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAdditionalDataFlags</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab2df17b8de70944c7b363ec6e42656a2</anchor>
      <arglist>(const char *additionalDataFlags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackupTimeout</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a0ccae95d99efbd843a2797c36cb3a2b1</anchor>
      <arglist>(double timeoutInMins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugLogging</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a8dc38ba7bb66c20415ee4598005a2b46</anchor>
      <arglist>(bool debugLogging=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupDescription</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a2ec8b52fe5c22e307719a474d904b01c</anchor>
      <arglist>(const char *GrpName, const char *GrpDesc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerKey</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5588c63fcc5261c970459c3d4027e1a2</anchor>
      <arglist>(const char *serverKey)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserInfo</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a30dfa01a6faee922e1d4863aa6c16f98</anchor>
      <arglist>(const ArServerUserInfo *userInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleepAfterSend</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a18394abe320270495f109e7c0f87df87</anchor>
      <arglist>(int msecDelay)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerBase</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a9654db575351b18c10a08729d9fda1ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>acceptTcpSockets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>af1d003d3aca3e9697d913a450cc8a35c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerClient *</type>
      <name>finishAcceptingSocket</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a467ff57fd9a36aaf019ec900d5a90eb2</anchor>
      <arglist>(ArSocket *socket, bool skipPassword=false, bool overrideGeneralReject=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getRequestTransactionCount</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a45a217e7e142d13a1c4f5a8ac85400ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleEndRequestTransaction</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab940c32af3c5c1231f3eca164544d818</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleStartRequestTransaction</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a9a7f71297a106efc86cc0ead79e98e9d</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>identGetConnectionID</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aa5914c55172f1b18bb60e8e8d3b513bd</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>identSetConnectionID</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a06f98f897980dec7e4d3aa059ba262a4</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>identSetHereGoal</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5e8bce0e87b8dca196500c2380a57fdc</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>identSetSelfIdentifier</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a514fba523004e8019714da166add2e6f</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netIdleProcessingPending</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5f8ff1bed56680f3108b02c26a76d96e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>processFile</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a29ae4ea53e89fa21bd3f1c92845872aa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>slowIdleCallback</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a439548c2e4aafea8e86d39af86a21b45</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket</type>
      <name>myAcceptingSocket</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a76569dd9b2df010871ee1cf8951710f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myAdditionalDataFlags</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a4ecd956503a00976c1a189c4d7aea858</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArServerClient * &gt;</type>
      <name>myAddList</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a036b4f4ad19d4d0856b3e65e620a831c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myAddListMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a28ef22ab3231d448b1a05175bc6f16b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAllowIdlePackets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aeebe1324aa773f9c03ef5a102086d92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAllowSlowPackets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a23b4e214a05d368635e5f28e5adc5d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerBase &gt;</type>
      <name>myAriaExitCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a9d8773676449666ece818e7c2cf42a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myBackupTimeout</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ad13e61cb8469c43056d2110877872495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myBackupTimeoutMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ad57d1d57e63b3d84c287a604cb45138f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor1&lt; ArServerClient * &gt; * &gt;</type>
      <name>myClientRemovedCallbacks</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aced44d6a2ba979c00a3970c1ef26c1f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArServerClient * &gt;</type>
      <name>myClients</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab9632551d8be729e00471415032c7994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myClientsMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a83b6a5e1e8195fc20ffcd7827a975df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::UByte4</type>
      <name>myConnectionNumber</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>acaabe1912b811a4e9fcf3109a99d58a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myCycleCallbacks</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a9de4ddb61dfcede3cfd4f7c3e7b53fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCycleCallbacksMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ad11655dc98f2e5b6c342459c9222c273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, ArServerData * &gt;</type>
      <name>myDataMap</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a67d80e1a21fb9d92368d11cc49d6afae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ac2247e67f623910f5d43181bbf7090b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDebugLogging</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a041efc205d20443b1aebebba41d82c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, int &gt;</type>
      <name>myDefaultFrequency</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a0b7ecaa33750688fe5e2d854b78f7d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myEndRequestTransactionCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab07ced59df818eb7f60cb3c6a692bb7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myEnforceProtocolVersion</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a3fb547448e07db516b6233f70ac24c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerCommands::Type</type>
      <name>myEnforceType</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ae1c8c47760e6a336d3dad8f248be30ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor2C&lt; long, ArServerBase, unsigned int, bool &gt;</type>
      <name>myGetFrequencyCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a469c0add66d171732e993af7128dbfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>myGroupDescription</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>abd2f38396d763cd486a1dd6727b15608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHaveIdleCallbacks</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>adc7e004366ae82a0d981e05ba115a8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHaveIdlePackets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a41e39d292529dabdf535f59dc4f3e674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHaveSlowPackets</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ad4d2dccce7ae0ee98e07925cae0dd323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myIdentGetConnectionIDCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a22ab34ea2ff069987105d693bd6d3b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myIdentSetConnectionIDCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a11ff6397e2bf60d3dbd535fd61efd37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myIdentSetHereGoalCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>abc15e369d60f9331de61b4508da6844c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myIdentSetSelfIdentifierCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a1c42b3804122d4dc86a3a16078a7cabb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myIdleCallbacks</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a500ccd4790811377f24342cd842f6aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myIdleCallbacksMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a420f29e1bde3af767d50b446d54dc774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myIdleProcessingPendingCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>adba944cf11a36da206c015516eeebbe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLastIdleProcessingPending</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a7d8846d8c7d966588301f8083bfe229a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLogPasswordFailureVerbosely</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab6d7ad593cea13fa555b899e21f791cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLogPrefix</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a4ad3f93a32ffd325722cbb9e5ec3ca74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myLoopMSecs</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab38dd65802dbe9b96b62be5333d13e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myMaxClientsAllowed</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a3274c6dce2fe57bdf248a285aad7ae20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myMostClients</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5e7e4d64f097d21d5901f91fdc3de5b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myNewBackupTimeout</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a704317ff8caeb7bdf892b7e13d1ca2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myNextDataNumber</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a996eb22298bc2d19ecfb3ec3929cc7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myNumClients</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a18170d67add932519ea770539f348447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myOpened</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5f9e411bead858e98ec083cc1623ca87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myOpenOnIP</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a9cb608ba1bd7a7da14bef63a2ab27106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArServerBase &gt;</type>
      <name>myProcessFileCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab6d15e588da01c6b2184b285f9e8c168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myProcessingSlowIdleMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a8d023b1f58396af8c0a28c00c234e7d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArNetPacket *, struct sockaddr_in * &gt;</type>
      <name>myProcessPacketCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a02a993b40acbdc05d1ac4bba209b2d14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRejecting</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a0dfc54197bac69f72eb624011a43db57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myRejectingString</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aada417ac984bdbc5c85cf8cab437c3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; ArServerClient * &gt;</type>
      <name>myRemoveSet</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a0806db59a69a2432c51131b9ca917222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myRemoveSetMutex</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a132a7eee004a6a29db7b8add4151d69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor2C&lt; bool, ArServerBase, ArNetPacket *, struct sockaddr_in * &gt;</type>
      <name>mySendUdpCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a52518b0de02d87df66a85f1656293ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myServerKey</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a4431d2cc2bb30a7bad7917b69e2655f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myServerName</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a5ae5da090806634815d6fae6d1cf3f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SlowIdleThread *</type>
      <name>mySlowIdleThread</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a2228b9f45f9af3ffbc1ce4d2df7cd08d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerBase, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myStartRequestTransactionCB</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>af69d0afca33e797304b58248c553a3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTcpOnly</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a81026f3d5481b6e6cf74e3d7632ecb51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myTcpPort</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a80134d6000d350b981848f360bdac786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket</type>
      <name>myTcpSocket</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a02816b3969fe21b6e90b14f1da0fc69e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTimeChecker</type>
      <name>myTimeChecker</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a908a450a8044c52a7da7441fd35a7dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList1&lt; const char * &gt;</type>
      <name>myTooManyClientsCBList</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a0d52a28c6ba5c6a87b46a84de0fec050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myUdpPort</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a4db94b5e00ee733fbcae8f1d065d79fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacketReceiverUdp</type>
      <name>myUdpReceiver</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab18c9fda663fc7c9114ce240068a0ee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket</type>
      <name>myUdpSocket</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a8c90e25a8e7148058d0598f3a6b1c0aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const ArServerUserInfo *</type>
      <name>myUserInfo</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a28dda2d862dfe56a22591d1602c89c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUsingOwnNumClients</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>ab377c9e75be9412af479f386121e8f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>a534bb41c6853fd50aaaf3bbd7aff539b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ArServerBase::SlowIdleThread</name>
      <anchorfile>classArServerBase.html</anchorfile>
      <anchor>aec1fd7d08349aee61f02a2bdaa7ebbaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerBase::SlowIdleThread</name>
    <filename>classArServerBase_1_1SlowIdleThread.html</filename>
    <base>ArASyncTask</base>
    <member kind="function">
      <type>void</type>
      <name>addCycleCallback</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>aaa54387077f70c5e30682d62a2c465dd</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remCycleCallback</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>acdb2130da4e071f93a5fff4466cc44c8</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void *</type>
      <name>runThread</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>aeda78edd767f917477a1f762237cd408</anchor>
      <arglist>(void *arg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SlowIdleThread</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>ae9e164dfdf752e6dc258c1d7c8eddfc9</anchor>
      <arglist>(ArServerBase *serverBase)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SlowIdleThread</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>a64452651fe85afcdbe7af121d2a6e5e2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myCycleCallbacks</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>a8424c9d8188210381455304b8c3bacc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myCycleCallbacksMutex</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>a24144f12a024f219f18048a4e9e1e9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServerBase</name>
      <anchorfile>classArServerBase_1_1SlowIdleThread.html</anchorfile>
      <anchor>a23257ec80c6ab58689cc272bd8c6cee7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerClient</name>
    <filename>classArServerClient.html</filename>
    <class kind="class">ArServerClient::Tracker</class>
    <member kind="enumeration">
      <name>ServerState</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a43cb5a7523682cd393fd67c81eaff459</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_SENT_INTRO</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a43cb5a7523682cd393fd67c81eaff459ae3c16ad5623af30630dc389afdca5e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_REJECTED</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a43cb5a7523682cd393fd67c81eaff459a29ec9812aa65c462b4bf2620a2139ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_CONNECTED</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a43cb5a7523682cd393fd67c81eaff459ab9b261bf5131df42b84685b7e4ecaff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STATE_DISCONNECTED</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a43cb5a7523682cd393fd67c81eaff459a0c32b15d037637d34fec49a59ed26c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerClient</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aeb58f2cfcc533a91bb89e4e6cff36975</anchor>
      <arglist>(ArSocket *tcpSocket, unsigned int udpPort, long authKey, long introKey, ArRetFunctor2&lt; bool, ArNetPacket *, struct sockaddr_in * &gt; *sendUdpCallback, std::map&lt; unsigned int, ArServerData * &gt; *dataMap, const char *passwordKey, const char *serverKey, const ArServerUserInfo *userInfo=NULL, int rejecting=0, const char *rejectingString=&quot;&quot;, bool debugLogging=false, const char *serverClientName=&quot;ArServerBase_unknown&quot;, bool logPasswordFailureVerbosely=false, bool allowSlowPackets=true, bool allowIdlePackets=true, const char *enforceProtocolVersion=&quot;&quot;, ArServerCommands::Type enforceType=ArServerCommands::TYPE_UNSPECIFIED)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastPacketTcp</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a12cdbaae7a6a207a8d027a1d41c89ff9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastPacketUdp</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ad4e6c3c33365cc9c3d4f4791364cc477</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endRequestTransaction</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a7c6b991a2c2f896c5d4eb8d227ee448e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>findCommandFromName</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a259537dd4ed91e645b585530eb959a75</anchor>
      <arglist>(const char *commandName) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>findCommandName</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>adc5233e80c5ac768ddf8a298c5ff04b8</anchor>
      <arglist>(unsigned int command) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceDisconnect</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab620f09c97793038989776b7314288c9</anchor>
      <arglist>(bool quiet)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getAuthKey</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a5e842aec6153b3ce6236c0a3becccc61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getCreationTime</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a4b6254803aaa6a30ff979457a1526cff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getFrequency</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a2edcd0ef46313e33a2abee4b844af0e2</anchor>
      <arglist>(ArTypes::UByte2 command)</arglist>
    </member>
    <member kind="function">
      <type>ArServerClientIdentifier</type>
      <name>getIdentifier</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a24d2b2edb9c95aaf6a6e2a888f7143d0</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIPString</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a8da91f3122966f4b1ce824fffb3e4ace</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRequestTransactionCount</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a7a7ed65d0d598c4fb07b00a09ec6061c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ServerState</type>
      <name>getState</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>afc4e86b0f65a6431cf08a3dd59201c29</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArSocket *</type>
      <name>getTcpSocket</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a749cddc87accce262483d5b57c78d067</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>struct sockaddr_in *</type>
      <name>getUdpAddress</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aecf21943c6e944aeebed8f5e6ce0ee36</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleRequests</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a46513d8d5d7bc8e2031af88a056b22de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroupAccess</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>acdcf4871ff0b4f01b451ad3c06d9135e</anchor>
      <arglist>(const char *group)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasIdlePackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a08e55879003201391f6f65776babd31c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSlowPackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a4d03e4c0cfe7d8696a037fc6311704cd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>idlePacketCallback</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ad8f53397ba47d8fae63a092f50e77150</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTcpOnly</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a9993f75befafb68eaa634d141b65f5ea</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logTracking</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a905bb2016b04e35c57f8b277d4095cfc</anchor>
      <arglist>(bool terse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processAuthPacket</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a7dbd22bfb827fe452922423c80f597aa</anchor>
      <arglist>(ArNetPacket *packet, struct sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processPacket</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aa0936247fefc5b0705d637dad37a8c54</anchor>
      <arglist>(ArNetPacket *packet, bool tcp=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTracking</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a6b3e419c8fc2124b8dedc7878c7b69e6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendPacketTcp</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a3f898b500f25869bdc5098c7d9a94f93</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendPacketUdp</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a9276b1f38501725852c779058bad1d33</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackupTimeout</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab440b833ee547250a4c3a9eb254428e0</anchor>
      <arglist>(double timeoutInMins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIdentifier</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a2db983b7a0d4f3bf1ed7f3152a753c1d</anchor>
      <arglist>(ArServerClientIdentifier identifier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUdpAddress</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aa1e084950d5ad250a685a4b32266b64c</anchor>
      <arglist>(struct sockaddr_in *sin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab9d0d22f9b160b1411a709c4502a1cee</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>slowPacketCallback</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a54b88b922cb831d40bdb6c7a8b3b465d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startRequestTransaction</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a48225ae118abf839ed54146e02b76b2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tcpCallback</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a8f87f3b1826c19e71af860c992405937</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useTcpOnly</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a81c05efe6728a961ad693d1232ac8c67</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerClient</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a347ea0462ddb58e5b93cd01268cbfe44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>unsigned int</type>
      <name>getCommand</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a1551198d0ddd5615c637f7e279f1e16c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>getForceTcpFlag</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a960657844a953e3eacabb5ec21a2891f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalSwitchState</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a4b8e31c7ba02e41840a7bf0f6d110f5e</anchor>
      <arglist>(ServerState state)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>popCommand</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a0a356626319d5e780d4fb33f2cb4c54a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>popForceTcpFlag</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a4ee23c3b973f36fa20bd0bd46aee13ec</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>popSlowIdleCommand</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a080d7d44550f6a8b0d00822f8ebad45c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>popSlowIdleForceTcpFlag</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a24092993c865f4fa1b1bdb2b4ae985b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>pushCommand</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a8ae94bc7965a0265824a284077745255</anchor>
      <arglist>(unsigned int num)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>pushForceTcpFlag</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a4491d7ce6309ee2d83f572ecf509c15c</anchor>
      <arglist>(bool forceTcp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>pushSlowIdleCommand</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a416b03587445b622d95a59c002e6bbcf</anchor>
      <arglist>(unsigned int num)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>pushSlowIdleForceTcpFlag</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a3599124281c2c4daf80354cec2143403</anchor>
      <arglist>(bool forceTcp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendListPacket</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a2b79e707674b147dc3c76671e29c8915</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setupPacket</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a5bd0e04a87aa569a53f72d0a096bf51f</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>trackPacketReceived</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>af684f0692848ff6eb346d6cc859c0300</anchor>
      <arglist>(ArNetPacket *packet, ArTypes::UByte2)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>trackPacketSent</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>acfa5ffab7802f51d0ee081922860ba62</anchor>
      <arglist>(ArNetPacket *packet, bool tcp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAllowIdlePackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aa0cd435885177ec88dc97f47bd794fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAllowSlowPackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a1dafde6d1b835173b8bc5bf31684fc20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>myAuthKey</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a5c6e11f605ec273b458f0c44a6d261e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myBackupTimeout</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>af55802a930b2860097b33e6a4d86a2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; unsigned int &gt;</type>
      <name>myCommandStack</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aef446178c42b4dec9c42d20b48493fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myCreationTime</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ae6aed61c1fa3227be7513751f4c233da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; unsigned int, ArServerData * &gt; *</type>
      <name>myDataMap</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a21b1f00dc1cf63109d07adc278e44736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDebugLogging</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a409b4541bee57358d1d0c3c7ed6c6c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myEnforceProtocolVersion</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a05c589522b9d22c9fba96e29e660ca8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerCommands::Type</type>
      <name>myEnforceType</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a65a4032408542408c05e8645d8c45b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; bool &gt;</type>
      <name>myForceTcpStack</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a52acf2c80732b4c20e9372c6e77f1259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string, ArStrCaseCmpOp &gt;</type>
      <name>myGroups</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a10905478198eba73d4bddf14533aedb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHaveIdlePackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ad401572a99088506e159cb0aa35d76e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHaveSlowPackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab9d2d9132778345f4fce1ab200f27bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerClientIdentifier</type>
      <name>myIdentifier</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a3b0d42be86e28e346d901c2f20dd5ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArNetPacket * &gt;</type>
      <name>myIdlePackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a8602b0a1426f563e9204c0dc6cf58342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myIdlePacketsMutex</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ad7834e40da4a5fd52a4dd67807f612d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>myIntroKey</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a1b1021e8491108a3870c3c2c4e588d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myIPString</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ac194f6b8250408f0e88079253101f125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLogPasswordFailureVerbosely</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a7772f1c5e587b5a57094c3f0ab7da683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLogPrefix</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a15209ca0df8165469c1dfcad14f1b842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPasswordKey</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab5014cc2cfbb49266b628583982c39b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerClient, ArNetPacket *, bool &gt;</type>
      <name>myProcessPacketCB</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a7d57b68e9768fa58d0859d2d52dd4e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRejecting</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aec2df4b7dc541ffe787ce9d1d98188d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myRejectingString</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ae235f232c846cc6350a314c187642cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArServerClientData * &gt;</type>
      <name>myRequested</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a642fe441cf84e86582c47a18d35d077e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRequestTransactionCount</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ac6498d91cd2d72810ce892b402f9dc99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myRequestTransactionMutex</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>aad3d9fe6004f340285f03250f070b147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor2&lt; bool, ArNetPacket *, struct sockaddr_in * &gt; *</type>
      <name>mySendUdpCB</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a1459716f44dcc8c445dc69b2c8033fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySentTcpOnly</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a88e41332fbdabc4243a840f51f6d7df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myServerKey</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab3e18e1e7f450bacf9b186baa763cebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>struct sockaddr_in</type>
      <name>mySin</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ae2b50aecbff9c61cacbaaad9e0b69c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; unsigned int &gt;</type>
      <name>mySlowIdleCommandStack</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a634d421995628bf5038d13ff93bb57aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; bool &gt;</type>
      <name>mySlowIdleForceTcpStack</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>af5e25af718acb83ea446ee01290fb205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArThread *</type>
      <name>mySlowIdleThread</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a55100884eb0fea4c78116122523b6e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArNetPacket * &gt;</type>
      <name>mySlowPackets</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab712c3d82cd27ae22265564330e4a4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>mySlowPacketsMutex</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>acd80d98175fb8adfdbc38651d34d7ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ServerState</type>
      <name>myState</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a48ac17579e1c1eb81ff4f62bcdc26a25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myStateStart</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a19bf40e4fd34f07791e3c4b45225a358</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTcpOnly</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a739b8ad4cf356c85b2a1bef41de8fe8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacketReceiverTcp</type>
      <name>myTcpReceiver</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a58023bbb42ab6ef0b2db417ab492fc4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacketSenderTcp</type>
      <name>myTcpSender</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a47cf6564f21f9ae44774234f2deb0ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArSocket</type>
      <name>myTcpSocket</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>abfb9dae18baed84e415bf689beff3101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; ArTypes::UByte2, Tracker * &gt;</type>
      <name>myTrackingReceivedMap</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a4938a1b71b905b4b843b8731b8b5f40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; ArTypes::UByte2, Tracker * &gt;</type>
      <name>myTrackingSentMap</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ab85818c484f7063e81ae59d2f5ea285d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myTrackingStarted</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>afb55ed9a09ca9dde9b8b817a1bfb98ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUdpConfirmedFrom</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a80d02417145db862c432561bc96c8de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUdpConfirmedTo</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>ad1d448ee469a41c179a2d5bbeb5b3f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const ArServerUserInfo *</type>
      <name>myUserInfo</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a6297cb9f380b11e4ac6b234d41466a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerClient.html</anchorfile>
      <anchor>a07a405f3a012e3dc4f0de9468529a2cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerClient::Tracker</name>
    <filename>classArServerClient_1_1Tracker.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArServerClient_1_1Tracker.html</anchorfile>
      <anchor>a08f51042e4b59b031d2a8588c5f0862d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tracker</name>
      <anchorfile>classArServerClient_1_1Tracker.html</anchorfile>
      <anchor>a38c92ae808bb1c1e70bc2478e8372794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Tracker</name>
      <anchorfile>classArServerClient_1_1Tracker.html</anchorfile>
      <anchor>a67325888f78f78b150f95cb140fd9e53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myBytesTcp</name>
      <anchorfile>classArServerClient_1_1Tracker.html</anchorfile>
      <anchor>a652e240f97ceff91d00a8f38423b5a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myBytesUdp</name>
      <anchorfile>classArServerClient_1_1Tracker.html</anchorfile>
      <anchor>a786627dc857fa0705906f06fdaaa21b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myPacketsTcp</name>
      <anchorfile>classArServerClient_1_1Tracker.html</anchorfile>
      <anchor>a5a63f8ae70b93d45727861748daa7ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>myPacketsUdp</name>
      <anchorfile>classArServerClient_1_1Tracker.html</anchorfile>
      <anchor>a042e19619e1d9abf5adb8427eba40dc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerClientData</name>
    <filename>classArServerClientData.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerClientData</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a0dadbada5fa1cc0d8d3b0b9d8e31c37c</anchor>
      <arglist>(ArServerData *serverData, long mSecInterval, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getLastSent</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a3327a7dac7f6bc8ebc43b76e3e6b9331</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getMSec</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a36086e3cb18655b178aa1d46d158a8f9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArNetPacket *</type>
      <name>getPacket</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a4f15b2c7ef32087bb1956ce91d724dab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArServerData *</type>
      <name>getServerData</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a55915b53e5ca0b79c4eb53d4aace3426</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastSentToNow</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a41a9324acec7e484b3282368e00251e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMSec</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a77d6e5734caad7707a42ebb6304c5818</anchor>
      <arglist>(long mSec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPacket</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a7ff73c5e58fa960b900838230f0d5f16</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerClientData</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>ad7d214ecdc3aafc38e5105e3703b4157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastSent</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>afb558e8494fb2a7e6c4c60d213492813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>myMSecInterval</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>adcb566b629e7184a3eeca14326cf7e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myPacket</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>ae535ef21b0e001bb6fc27d5a95913392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myReadLength</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>adc724533a70aab2c0676682fbbd81f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerData *</type>
      <name>myServerData</name>
      <anchorfile>classArServerClientData.html</anchorfile>
      <anchor>a37b44db9cd0b5d2311a77c95e7a1189a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerClientIdentifier</name>
    <filename>classArServerClientIdentifier.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerClientIdentifier</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>aea6fbe3f62686f834dbef12f1968c61d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::UByte4</type>
      <name>getConnectionID</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a547cee529202fe508768f04f49559500</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getHereGoal</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a3a2c604fe2545220575e61696bfedc7a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIDString</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>ae0899fdbba705e8f25fdb0578c0b8c13</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getSelfIdentifier</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a41569d0fbb0c97b3dec239cab7a52070</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matches</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>ac18520127ed3fc33885b1e94da5b05d2</anchor>
      <arglist>(ArServerClientIdentifier identifier, bool matchConnectionID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildIDString</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a67ec0f1beb51d66fdd55d3484008c2f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionID</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a4a6950f2c40d5583e56ac729100aec95</anchor>
      <arglist>(ArTypes::UByte4 idNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHereGoal</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a3c89948e9a7039ff6520c0ea31338c77</anchor>
      <arglist>(const char *selfIdentifier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelfIdentifier</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a6ebf449e7d4fb839c812f749fc923f45</anchor>
      <arglist>(const char *selfIdentifier)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerClientIdentifier</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>a9e085ac397671caa94557a8ca640a3a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::UByte4</type>
      <name>myConnectionID</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>aa8e81b9380c5bc1e10e89dbd85c3af3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myHereGoal</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>af7441c42d8850cc224f498b50955b2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myIDString</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>afd379718ef2d464d3a7f0d914aefe061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mySelfIdentifier</name>
      <anchorfile>classArServerClientIdentifier.html</anchorfile>
      <anchor>aaaebd5e4e054f911b65992bbfe5f860a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerCommands</name>
    <filename>classArServerCommands.html</filename>
    <member kind="enumeration">
      <name>ServerCommands</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHUTDOWN</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4ac8bd4e692eabfb24d487705728b0fb6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INTRODUCTION</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4af0d0401b61666b52feac6d5851263733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDP_INTRODUCTION</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4a6d63f5cecb9f92808a62954496bfe279</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UDP_CONFIRMATION</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4a346278536dfe0300374f5fbaba1d6ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONNECTED</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4acab3bf86441a65c24cc045e8b0192ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REJECTED</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4adee1cad7b02f1ea54bb37b17213f1a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TCP_ONLY</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4afbeb928f4be2b6d4b1d4d34311e12ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LIST</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4a141500872f293f3a2e7763562b728301</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LISTSINGLE</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4aa22a779d0c5e4aba20a6273dc24c3fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LISTARGRET</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4af789d41c3ea7728e740a6a10a46b882d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LISTARGRETSINGLE</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4a00142b7d8bbdb4d4264d6e4c85135b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LISTGROUPANDFLAGS</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4a46ba97bce7f0fd78036ea0395fd75b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LISTGROUPANDFLAGSSINGLE</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a4b1d453536c145108110dd2e1eee89c4acff7f30183e09b5722f66f20390c6fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a17e8a1248f23b0f1dde4606af34b0efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_UNSPECIFIED</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a17e8a1248f23b0f1dde4606af34b0efdaebd1dc6f46009b607589b0ea2cea27c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_REAL</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a17e8a1248f23b0f1dde4606af34b0efda04341eabfc9c8b186c83fe279bd30fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_SIMULATED</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a17e8a1248f23b0f1dde4606af34b0efda04379d0d398a69a22056e190fbb6be2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TYPE_NONE</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>a17e8a1248f23b0f1dde4606af34b0efdaaaecfa9e450c08cc965e23798c977deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>toString</name>
      <anchorfile>classArServerCommands.html</anchorfile>
      <anchor>af5713e054859cdb761f75e1113ea3ee2</anchor>
      <arglist>(Type type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerData</name>
    <filename>classArServerData.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addDataFlags</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a385355c30007e0a04072b3a476c87766</anchor>
      <arglist>(const char *dataFlags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerData</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a0f2d39077ab6174b74892d5e7c625bb2</anchor>
      <arglist>(const char *name, const char *description, unsigned int command, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL, ArRetFunctor1&lt; long, unsigned int &gt; *getFrequencyFunctor=NULL, ArFunctor2&lt; long, unsigned int &gt; *requestChangedFunctor=NULL, ArRetFunctor2&lt; bool, ArServerClient *, ArNetPacket * &gt; *requestOnceFunctor=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRequestChangedFunctor</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>aa6eafdc68804c31d0118f024267b9c15</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getArgumentDescription</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a9e990baaba9ed75d1eff275693ca99e3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getCommand</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a40c6497b9c848194de53c87704a51aba</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCommandGroup</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a82a34d9a251bc9715176c3aa051247c9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDataFlagsString</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a9921c0977e47dafa9722c99cdb5c8f31</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDescription</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>aa09fcfbcf93c2d5d28ba4a6e8d080ee2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *</type>
      <name>getFunctor</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>ac8736bfca1898623991b4659875ee4a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a9a5e24a0c82ba41ed3fb94b90731e488</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArRetFunctor2&lt; bool, ArServerClient *, ArNetPacket * &gt; *</type>
      <name>getRequestOnceFunctor</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>aab7fd16b60901ee776c373dc49009e8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getReturnDescription</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a970aea581c01a3032872738b2d1fb5b3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDataFlag</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a6c6516e01b853ad5a86d54fc384f245d</anchor>
      <arglist>(const char *dataFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdlePacket</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a074b3440965d148f0232c97fdf7bd00e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSlowPacket</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>ac5691ac98e8e77c4d84e701f7ea11c6f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remDataFlag</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>af8440308963383da75c4b6800ca6b0f9</anchor>
      <arglist>(const char *dataFlag)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerData</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a829747d4803e51a2998d3480f65c1a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myArgumentDescription</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a9ec798d427556a2d9c3bd10c5f1c4cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myCommand</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>aca369f3c677fc99cd407b35479b210bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myCommandGroup</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>afe4c910475870d1c51bd58334adcb140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArArgumentBuilder</type>
      <name>myDataFlagsBuilder</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>ad80377e4a1e08e59f361743aaa17a400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>add99c1475841d8b8b1ccf4bd4ee804ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDescription</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>aaa96e76977f3cedf3ccf4cb16bdad249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *</type>
      <name>myFunctor</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>ab054a91217571531ea579662093a225f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1&lt; long, unsigned int &gt; *</type>
      <name>myGetFrequencyFunctor</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a14017ae7b4125f497caa902c2225a1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIdlePacket</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>ae0fcda90f44b7a9750a0dcd977a6985b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a9c95250d772958835a0cbf636ad8da93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myRawDataFlags</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>aaa63875221406d52dd050b8b319b6ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2&lt; long, unsigned int &gt; *</type>
      <name>myRequestChangedFunctor</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>ae1afd441be83c7ef17fbf332cdee0929</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor2&lt; bool, ArServerClient *, ArNetPacket * &gt; *</type>
      <name>myRequestOnceFunctor</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a84f2168eea3a0ee4d4e21657ffba2b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myReturnDescription</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>abba1a49b0b2ddb9e1ca0a3a993d2130d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySlowPacket</name>
      <anchorfile>classArServerData.html</anchorfile>
      <anchor>a43914a976709f535976bb5d6d415578d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerDataProvider</name>
    <filename>classArServerDataProvider.html</filename>
    <templarg>C</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>ArServerDataProvider</name>
      <anchorfile>classArServerDataProvider.html</anchorfile>
      <anchor>a7cc4c35fcde11f1dec19bfcf8adebf65</anchor>
      <arglist>(ArServerBase *server, const char *name, const char *description, ArRetFunctor&lt; T &gt; *accessFunctor, ArFunctor *lockFunctor=NULL, ArFunctor *unlockFunctor=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerDataProvider</name>
      <anchorfile>classArServerDataProvider.html</anchorfile>
      <anchor>a23c11938227b6c7b1db7d901fc502b70</anchor>
      <arglist>(ArServerBase *server, const char *name, const char *description, C *obj, T(C::*method)(void), void(C::*lockMethod)(void)=NULL, void(C::*unlockMethod)(void)=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerDataProvider</name>
      <anchorfile>classArServerDataProvider.html</anchorfile>
      <anchor>a3662c11d11587a5de7f2f76215b04c73</anchor>
      <arglist>(ArServerBase *server, const char *name, const char *description, C *obj, T(C::*method)(void) const, void(C::*lockMethod)(void)=NULL, void(C::*unlockMethod)(void)=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerDataProvider</name>
      <anchorfile>classArServerDataProvider.html</anchorfile>
      <anchor>a09032b9acb2ac1af005c21361e29abb8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerDeleteFileOnServer</name>
    <filename>classArServerDeleteFileOnServer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addPostDeleteCallback</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a06eb81621a23e2d61afb95787c34c110</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPreDeleteCallback</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>ad18e589e07bd0f362efdd46d2eeda871</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerDeleteFileOnServer</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>af58277347e3f04e44227ae5fcd6a8618</anchor>
      <arglist>(ArServerBase *server, const char *topDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteFile</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>ab9dda5d50f400be73dcae3caae7d516f</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDeletingFileName</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>ad1850b7e490b3bda9b798ed488e56eeb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPostDeleteCallback</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a23bd9007c4ac835123f27cf1ac09541b</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPreDeleteCallback</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a9052d78b40306370aa80b9d71958c6ee</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerDeleteFileOnServer</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a8ddc6674d1dd0b4023c3e7bdc9a85815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myBaseDir</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a28c0d7b7f443312a7aa34050047f64e0</anchor>
      <arglist>[2048]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerDeleteFileOnServer, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myDeleteFileCB</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>abbf6a9343a7ba7db0f4e35e9488d6185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDeletingFileName</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a49c671deebc02811ee452b0d92c12d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPostDeleteCallbacks</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>ad9550b6815c3e3ea54a5ba44f3816446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPreDeleteCallbacks</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a270893b6ded99ac2d418b42ac7cca393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerDeleteFileOnServer.html</anchorfile>
      <anchor>a60f0b3599275580b0d691bce562a97ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerFileFromClient</name>
    <filename>classArServerFileFromClient.html</filename>
    <class kind="class">ArServerFileFromClient::FileInfo</class>
    <member kind="function">
      <type>void</type>
      <name>addPostMoveCallback</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a2bb52db9f02cdac0ddf3557fcf79960d</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPreMoveCallback</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>afc1831f3606a4667a193f1f09d07bdc5</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerFileFromClient</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a2a2ed40cbe8f1e24ecf3d0872a2da2bb</anchor>
      <arglist>(ArServerBase *server, const char *topDir, const char *tempDir)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMovingFileName</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a9615efb4c5b6cbf3ee7af1b671fa693d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putFile</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>ab12ed36b5e9b6163bd55e922d6515390</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putFileInterleaved</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a258fb739d84630b749219b482a0537eb</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putFileWithTimestamp</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a91cc01a11fa831dae5d32c180b3ee6f6</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putFileWithTimestampInterleaved</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a89a671510670d7ff06d3fd80ade0398e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPostMoveCallback</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>ae3e5774c8183c31899b5e654e6c2b9df</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPreMoveCallback</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>ac26a0af9e47ac8c196786df5a4593df9</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerFileFromClient</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a3dea68c6549d52d556bf64fbadddd3cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalPutFile</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>ab48be559df234d54b8172d5c44ddfd4f</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, bool interleaved, bool isSetTimestamp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myBaseDir</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a363538d638ef1ac28238d022abda0c46</anchor>
      <arglist>[2048]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myFileNumber</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a52ed6ebc15af4a0e140f14396c0a163f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, FileInfo * &gt;</type>
      <name>myMap</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a135fb44cfbdc62b8d06729a926ea8b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMovingFileName</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>ad8db8a0cdeea674fd92503d35dfe1003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPostMoveCallbacks</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a82a507ca382ccf0e7d34548a68b92988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPreMoveCallbacks</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a62732c56ac7db1de0faf1dd9744e9b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileFromClient, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myPutFileCB</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>adc0bd5fd6dc1ace730008c41310a189f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileFromClient, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myPutFileInterleavedCB</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a2eabf34bc656fd3cc53fa1557bd272e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileFromClient, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myPutFileWithTimestampCB</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>acd3516ce96983253b0e05d157a58ff0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileFromClient, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myPutFileWithTimestampInterleavedCB</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a5219cbdca05735c75030b361377e5d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>afd5d16553e0527ffd524b57abbaad850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myTempDir</name>
      <anchorfile>classArServerFileFromClient.html</anchorfile>
      <anchor>a62b8a83887f412de0a0e97d8efc7d911</anchor>
      <arglist>[2048]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerFileFromClient::FileInfo</name>
    <filename>classArServerFileFromClient_1_1FileInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>FileInfo</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>ab672d9d984b6ca335f6daa24eb3c5da7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInfo</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>ac438717d9c7fbddd0cccef3dc3836031</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ArServerClient *</type>
      <name>myClient</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>a1936b5bdd4fb22e80ff981d2679473e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTime</type>
      <name>myClientCreationTime</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>ae6f082bf104e8dee1f06801934819bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>myFile</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>a3cdd6669254a1e77d4e2871b8e24ae2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>myFileTimestamp</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>ab3bf44d80537a959194801e01cf8d54d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTime</type>
      <name>myLastActivity</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>affbd0e74152faff0ab5346b9bc785708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myRealFileName</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>acd687ac54128e26bb5bfd69d6809971b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTime</type>
      <name>myStartedTransfer</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>af6c83590aabc5343ab684ac27b489871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>myTempFileName</name>
      <anchorfile>classArServerFileFromClient_1_1FileInfo.html</anchorfile>
      <anchor>affae5b7e5fe9303bd4c40868c52d0126</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerFileLister</name>
    <filename>classArServerFileLister.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerFileLister</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>a3019d836cd20f21e160cf6864f1f39a2</anchor>
      <arglist>(ArServerBase *server, const char *topDir, const char *defaultUploadDownloadDir=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDefaultUploadDownloadDir</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>ab0fecf7626b044fdaa753fc23fd33d7a</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDirListing</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>a3289372b265e7b74cad61b0df3889a0c</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDirListingMultiplePackets</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>a2e18a37b704e264f43799546a4e35c59</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerFileLister</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>a29a5943acfed5fccfa761112915f2aff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myBaseDir</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>aadbe5bbead418bd2a4dc3066af95dcb4</anchor>
      <arglist>[2048]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDefaultUploadDownloadDir</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>abb229985ea974e7f0483d835a2b8e3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileLister, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetDefaultUploadDownloadDirCB</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>ac6f229d87efe46730a367a119ea9de1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileLister, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetDirListingCB</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>a4f1cfd855326196a80fb3c20764b3242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileLister, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetDirListingMultiplePacketsCB</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>ac72ef2e2f3c5acb7ffe8c6d0596a6fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerFileLister.html</anchorfile>
      <anchor>a002cbc2e7031ed84e56ad8893039c4ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerFileToClient</name>
    <filename>classArServerFileToClient.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerFileToClient</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a8b60745ac5c00f736546398b1ad470ff</anchor>
      <arglist>(ArServerBase *server, const char *topDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFile</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>aa46dda943a13cb4dde0c26f1f3b35289</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFileWithTimestamp</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a59e080d40f33d9dc09900ba52701a70b</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerFileToClient</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a02b514b8fd286eb6bd2a31fe5634bd88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGetFile</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a3506fdbca49808e423463be37fc2e6c9</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, bool isSetTimestamp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myBaseDir</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a6c8ad5df76fa9921ffaaa4385caabfa6</anchor>
      <arglist>[2048]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileToClient, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetFileCB</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a13b9c96e31cb44d4b82d5e4a5f618262</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerFileToClient, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetFileWithTimestampCB</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a827483a7d28155d0792d59b7351ca12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerFileToClient.html</anchorfile>
      <anchor>a39604496813ef0be6f3e99fe74cd50d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerCamera</name>
    <filename>classArServerHandlerCamera.html</filename>
    <base>ArCameraCollectionItem</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addToCameraCollection</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ad2a1481fd494f477c0f4908cbc773ab4</anchor>
      <arglist>(ArCameraCollection &amp;collection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerCamera</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a62d84d39d59422be307cfa9ee8ae3114</anchor>
      <arglist>(const char *cameraName, ArServerBase *server, ArRobot *robot, ArPTZ *camera, ArCameraCollection *collection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerCamera</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a28008a201b19aa0a1d7e56055a578636</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot, ArPTZ *camera)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>camera</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>aff2e0fe4c857ae52b5187e71b514f901</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraAbs</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>afd3502a29449d42a9f8253384bce34ec</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraInfo</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>affb38298001cf250cce7557bc24b3abe</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraModeLookAtGoal</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ae0a698b7a408b8f7c2c1634d916250c8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraModeLookAtGoalClearGoal</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a99f4b712f775ff08b00debdc4def6953</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraModeLookAtGoalSetGoal</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a8202ba0aea95f81f2db27813ad653cd0</anchor>
      <arglist>(ArPose pose)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraModeLookAtPoint</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ac6a197d3bd1b525c21b90d794d47ac63</anchor>
      <arglist>(ArPose pose, bool controlZoom=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraModePosition</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>af4a7e9ac44a02ae36508b585c9db577a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraPct</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ae7d4144eda7e5e080eed3475848081bb</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cameraUpdate</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a76c689a525a92522ad317958b6753a41</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCameraName</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a1694aac881bf50fc64a601f3861ce246</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleCameraModeUpdated</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ad79081e0f60ee5d865bbdb11df7a4dc4</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleGetCameraData</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ab6e668b1fb0899ba69174c8e7c27ca12</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleGetCameraInfo</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a19ff9e98bdc1130052c85ed17cf7a76d</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleGetCameraModeList</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a7cda8840ec574257f175f9a9794f0761</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleResetCamera</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a4d3c0c081cfc21cbdd5c5a597d005b42</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleSetCameraAbs</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>aa460d19dd3c35eb20bed7d65c504a3a5</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleSetCameraMode</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a2e11bc901cb4fdd7db15d99446cbb700</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleSetCameraPct</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a38a51ee5c1413fdaf7d729581aeb6bf6</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleSetCameraRel</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ae4faa7dbbfbf21624e5d5d9f2b262c2b</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCamera</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a521583d50d34e3f88a9b39450e21ed43</anchor>
      <arglist>(bool lockRobot=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraAbs</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a5c8b1aa0a0ef81e83c8e7e5718f6ed0f</anchor>
      <arglist>(double pan, double tilt, double zoom, bool lockRobot=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraPct</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a58277c7b38f68acae25f4daecbccbe85</anchor>
      <arglist>(double panPct, double tiltPct, bool lockRobot=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraRel</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a2cb8a9178c1e83f572e7a8d86b575fe7</anchor>
      <arglist>(double pan, double tilt, double zoom, bool lockRobot=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerCamera</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a27c7b5fcd78d65a799509fea63bd11a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE_FACTOR</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a25665b69b5fe8533d1e985499843e0c9a39eb99d13930f3a85c1607ed4e2b53c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>CameraMode</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a8214b7d46f1a140f848a4f6f68b09d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAMERA_MODE_POSITION</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a8214b7d46f1a140f848a4f6f68b09d9ea39dc1af6698ef397131353473655e159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAMERA_MODE_LOOK_AT_GOAL</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a8214b7d46f1a140f848a4f6f68b09d9ea300a160b478ea07ed5a585f471cf1390</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CAMERA_MODE_LOOK_AT_POINT</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a8214b7d46f1a140f848a4f6f68b09d9ea869e7b00121f0964a49f759f6fab7a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDoubleToPacket</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ae6d164c90130b247887a29312a3801ed</anchor>
      <arglist>(double val, ArNetPacket &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildModePacket</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a105859903b51faac9f1e4ba6138c9927</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getCurrentZoomRatio</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>abbf1c6953314dae11ebf4f881debb130</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getDoubleFromPacket</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a98ffe3c4cc867274c3a34a421eadff49</anchor>
      <arglist>(ArNetPacket &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getZoomRange</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a305ff8851e08c2cf9ac780d744792a83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getZoomRatio</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ac96686bb54d0bfbb436e5d54cedf87d3</anchor>
      <arglist>(double absZoom)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>userTask</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ac7d32545dbeadb9e197556e36d24e650</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPTZ *</type>
      <name>myCamera</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a4d3437ed86afe3b4f3ac9dfe7b0b1e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCamera, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myCameraAbsCB</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a9d4e44849258a621d4ee84603b192426</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCamera, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myCameraCB</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>adfd5d7b9e40a2498234823a5a16b3fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCameraCollection *</type>
      <name>myCameraCollection</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>ae3577be27a8f314024f64feb9d09184f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCamera, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myCameraInfoCB</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a18eabe69114262f1a2af84a98959c19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CameraMode</type>
      <name>myCameraMode</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a8491a736574e349f6368b34390a9dc7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; CameraMode, std::string &gt;</type>
      <name>myCameraModeNameMap</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a6467912e3786858a92ab770326e01c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myCameraModePacket</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a32e4207d87172fcc516d1905c76e3905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myCameraName</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a5c688d301dafd414d4fff4bc82213a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCamera, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myCameraUpdateCB</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>abbfe58d09e2ce5f2569ae5d56208aa5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; * &gt;</type>
      <name>myCommandToCBMap</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a6db19b76d9149ab66679ff001b5fe420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>myCommandToIntervalMap</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a30059e11580a9d9c1cf3e58006cf25df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>myCommandToPacketNameMap</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>adfe8c76c208b95adfcc48fc4460d03e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myGoal</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a9c1bc3d35e2c99247c98150b9945afad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myGoalAchieved</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a3131304e928beccb691c67f017031740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myGoalAchievedLast</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a5390321fe3d5f125eb1ba5069eee9da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myGoalResetZoom</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a8f7115a557195543d55e6444db566728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myLookAtPoint</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a43a08c015067daa104f1314e55968fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myModeMutex</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a98609fa3d4a6e6e9cf62bade9e71d6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPointResetZoom</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>aaf06079dd40b626f2eb508234c6a8261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>a9fe2016491575f7fa43c39f439273f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>aa4dd0512e3b5571ae39379ec62554fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerHandlerCamera &gt;</type>
      <name>myUserTaskCB</name>
      <anchorfile>classArServerHandlerCamera.html</anchorfile>
      <anchor>aed6813943f2c17da4fc718e02a2752f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerCameraCollection</name>
    <filename>classArServerHandlerCameraCollection.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerCameraCollection</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>aac6e887ce09de6c4eea1592536609f4d</anchor>
      <arglist>(ArServerBase *server, ArCameraCollection *cameraCollection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCameraList</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>ab32f7bcceb9eeb82adffe5c76cbb3be6</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleCameraCollectionModified</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a2348fea5915e5f3622acfe7116572ad2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParams</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a2c050b613cb97e138288da605e0ad91e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerCameraCollection</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>afb6d88d2d3503ae2399b907bb50cf670</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCameraCollection *</type>
      <name>myCameraCollection</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>af923f39c9cef15dc5760dd3c9136afae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor *</type>
      <name>myCollectionModifiedCB</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a1201eba0d0eb9d5b4eab0e92ec11eacb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *</type>
      <name>myGetCameraListCB</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a554c60b955755fe2ceabf7eb6d0c2d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>aa6c42cbe715e7cbc5334b9e9cc391fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *</type>
      <name>mySetParamCB</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a4496301af52734d0864ab2f9b96c772a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>COLLECTION_UPDATED_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a2f456b3fdb1c7335abd1b87485a5e01c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>COMMAND_GROUP</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>ae9d9da015a9759465a4e81362c6e3ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>GET_COLLECTION_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a00f832194ca694b160dc278b698df09c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>PARAMS_UPDATED_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a5030390aa22972bac43949979d02b172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>SET_PARAMS_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCameraCollection.html</anchorfile>
      <anchor>a074d150c419a35ce86a9184931f30d5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerCommands</name>
    <filename>classArServerHandlerCommands.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addCommand</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a860062d3fbb628d4bd8fe47bf690fbd1</anchor>
      <arglist>(const char *name, const char *description, ArFunctor *functor, const char *commandGroup=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addStringCommand</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a68fd880bff6fcd33b39e33f5e47cc935</anchor>
      <arglist>(const char *name, const char *description, ArFunctor1&lt; ArArgumentBuilder * &gt; *functor, const char *commandGroup=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerCommands</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a3ca642c2210ab2c2efcc8bb2164a98f7</anchor>
      <arglist>(ArServerBase *server)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getPrefix</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a50fe54569900d797ad10d2380931605a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netListCommands</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a5dea14a84956e31ebe008d180032dd8f</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netListStringCommands</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a20ac29147682ec20e6615da77f2c3d7c</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrefix</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a9697c5161bde2698beb4fde775eb058b</anchor>
      <arglist>(const char *prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextServer</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a01598fc823728c5f5e49704e00127f09</anchor>
      <arglist>(ArNetServer *textServer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerCommands</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a82a55d7f4f3e3cc18f4fccacb1119511</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netParseCommand</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a6581438c8d2f06660ae9046d5c048fd0</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, ArFunctor *functor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>netParseStringCommand</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a3a89eb50c5d07112470d2ed469d1470b</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, ArFunctor1&lt; ArArgumentBuilder * &gt; *functor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>textParseCommand</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a264b0e039716a97ae760797db619c942</anchor>
      <arglist>(char **argv, int argc, ArSocket *socket, ArFunctor *functor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>textParseStringCommand</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>acb41fc44efe926e5fc509053da7b9f13</anchor>
      <arglist>(char **argv, int argc, ArSocket *socket, ArFunctor1&lt; ArArgumentBuilder * &gt; *functor)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myCommandDescriptions</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a00994c56fb02d71061a8dba402180632</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myCommands</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>ab63975df62ce984e7dfa3335afe3fa21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor3&lt; ArServerClient *, ArNetPacket *, ArFunctor * &gt; * &gt;</type>
      <name>myFunctors</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>abdd8d94ee7fe9a1ebaace816e418bfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCommands, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetListCommandsCB</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>ae8eaa943e82f2736f6c6704147c43996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCommands, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetListStringCommandsCB</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a0cce079674610622b040ce2af60542bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPrefix</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a08c053f1eed6b392861c2cd0c441e72c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a38b70770146b059f48f0dd3c7431a1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myStringCommandDescriptions</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>ac06fd91cbd94b7113bf99b2cfd2229b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myStringCommands</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a9327932a4c4f6e37f49bad118498c973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor3&lt; ArServerClient *, ArNetPacket *, ArFunctor1&lt; ArArgumentBuilder * &gt; * &gt; * &gt;</type>
      <name>myStringFunctors</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>aeff4ef4342ebdfbc86f668c771e36f48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetServer *</type>
      <name>myTextServer</name>
      <anchorfile>classArServerHandlerCommands.html</anchorfile>
      <anchor>a2f05cec60881d2cfeca712e9fc4808d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerCommMonitor</name>
    <filename>classArServerHandlerCommMonitor.html</filename>
    <member kind="enumvalue">
      <name>MIN_HEARTBEAT_INTERVAL</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>af665f126df849ea488e741fa3e21a02caaac450a7bfaf45350cfd519b5cbb316b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DEFAULT_HEARTBEAT_INTERVAL</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>af665f126df849ea488e741fa3e21a02ca8786dd9a908afcdfc6dfc75e97076244</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerCommMonitor</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a4552a255904740d8b3fd9cb04ef075b1</anchor>
      <arglist>(ArServerBase *server, int heartbeatInterval=DEFAULT_HEARTBEAT_INTERVAL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cycleCallback</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a43e31a53641f6f94f99cf52e6abbe709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAckCommTcp</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>aa88c1f9398c7f4c0a2cb812e7bc85669</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAckCommUdp</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a4ab611ab97a9b28aab3dc2dddcb94b65</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleGetHeartbeatInterval</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a599f291d5f0dd0dc601fbbff48068d4a</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerCommMonitor</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a3b86b8c47e7c643c61473fbb77ba8195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCommMonitor, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myAckCommTcpCB</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a6beff4bcf7780db743bd5020b2c1b013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCommMonitor, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myAckCommUdpCB</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a46b8ce13306d01eed1dc2653f5dd8017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerHandlerCommMonitor &gt;</type>
      <name>myCycleCB</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a4029b7f7a9026e3f5b319aa7869e86a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerCommMonitor, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetHeartbeatIntervalCB</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>afb3801b68504caec991fc981970844c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myHeartbeatInterval</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a240bd298bab57805609167225b25174c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastHeartbeatTime</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>adee9f703049b6d1c871baadedb28889e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a0478c31de1b026b3d6ee35a241b208f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>ACK_COMM_TCP_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a71cbafdc26f4f2aa6a60932e6f84c70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>ACK_COMM_UDP_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a90e5e7e81cb15c1865e45a18be63bd04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>COMMAND_GROUP</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a01a22834319c6a835c0153e6d029a98d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>GET_HEARTBEAT_INTERVAL_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>aa72731c9cdcf23d92976e16ecdb0e750</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>HEARTBEAT_TCP_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>aeaef0a920c0ef6cac30f3b3cb12ee031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>HEARTBEAT_UDP_PACKET_NAME</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a6948e2803dcdc4041018fc5569694003</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const char *</type>
      <name>NO_ARGS</name>
      <anchorfile>classArServerHandlerCommMonitor.html</anchorfile>
      <anchor>a901056b011a577e34656d75cf5bfdd3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerConfig</name>
    <filename>classArServerHandlerConfig.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addConfigUpdatedCallback</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>adaa700d48c6b060aaac65812dfc36266</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPostWriteCallback</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ac27f9d203ac9fee21c4740b40259b006</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPreWriteCallback</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>aeafb9e0d34cc6074996f283df8fb97d5</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRestartIOCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a49b5e67c3fc2840798457ff2176e55fc</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a91b50d4901ff85f329c7a75a084d564d</anchor>
      <arglist>(ArServerBase *server, ArConfig *config, const char *defaultFile=NULL, const char *defaultFileBaseDirectory=NULL, bool allowFactory=true, const char *robotName=NULL, bool preventChanges=false, const char *preventChangesString=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>configUpdated</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a1b884dc66c4aad129fa2ddd8af7665ea</anchor>
      <arglist>(ArServerClient *client=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createEmptyConfigDefaults</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a4db077c50a1e1ec80233068b5cb55972</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAllowFactory</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a65ceb33aa08e1bc0212ea327ac78bfa7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a5cd40c567fcbb201e3ea7a8730e6fedb</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConfigBySections</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a63718277e77d88d1d2fe4e1e5587c8f9</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConfigBySectionsV2</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>aa70abbbb2ad43076f83132fa68b37ab5</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConfigBySectionsV3</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ae8cfb859f4f5156c5342990d5c4e53e0</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConfigBySectionsV4</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a405ef4056db3e8b4df8473f5c7fcbdc6</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConfigDefaults</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>aabdcfc8f6dfbb361866d5436e4700e57</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConfigSectionFlags</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a0210d6365879d22f73b97b939335ed22</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLastEditablePriority</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a7167ca98654ac2178af24ff1e2615189</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getRestartHardwareCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a20d3afc615977af428f59b8189f981e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getRestartSoftwareCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ae0064e77bebe005fa41d3bee7851ab22</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadDefaultsFromFile</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>af07ca3f5d0ebef03661e552725503c7c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadDefaultsFromPacket</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a9f47e2470c31a46d107bb40022095622</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lockConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a46c4ba0c279550adfa84d180eabc037b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reloadConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a818a4779c697131353705e958258bf90</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remConfigUpdatedCallback</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a326bd455379aac1a827e4122a4f001b1</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPostWriteCallback</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a6205b0b889e254ff7b000b33e96bfb62</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPreWriteCallback</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>af5a90a8144afb3f38f979fcdee0fe127</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remRestartIOCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>abb5960bce1ecb05e8c86dfc387338f39</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restartHardware</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a78e9aa1b54822f07e20ce416806af50b</anchor>
      <arglist>(const char *reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restartIO</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a8c6bc24feb8e1b37d8851ad63316a837</anchor>
      <arglist>(const char *reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restartSoftware</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ad9544c562453cafd2378cc250d657159</anchor>
      <arglist>(const char *reason)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowFactory</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a83b7119b2dea552b9089cef455acdfdb</anchor>
      <arglist>(bool allowFactory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a29d0673df3fd77a2baea7babc16d6e84</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfigBySections</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a478346fdde3052b88c5518a87cf0ae41</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfigBySectionsV2</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ab901d539711e32a5c854255e87cb2dde</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfigParam</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a9be3c815ea8ca12b73e3c9f7e99198a7</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreventChanges</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a5df5d00b20c625ffd23b3badc0588a82</anchor>
      <arglist>(bool preventChanges=false, const char *preventChangesString=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestartHardwareCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a24932569bbd6396289ef4fd0b1459df7</anchor>
      <arglist>(ArFunctor *restartRobotCB)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestartSoftwareCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a2771573e524dc13b8b6560fe069af163</anchor>
      <arglist>(ArFunctor *restartServerCB)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tryLockConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ad1f3eaef03b623ab9c9891e083df837a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unlockConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a43a62f673f38b5377979d4ebae32a33f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>aa07a63fe8fd81542401fe410c087fb19</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>abcf3fdfbb677f92ab0890f95b37fc350</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDefaultServerCommands</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a10d9480683ced108c86afae1893c8466</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArPriority::Priority</type>
      <name>convertToPriority</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>af2818d141d3bdaefbb0a44f07422a26d</anchor>
      <arglist>(int priorityVal, ArPriority::Priority defaultPriority)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createDefaultConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a3f430b48a76d52a13c6686cc68118df0</anchor>
      <arglist>(const char *defaultFileBaseDir)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doGetConfigBySections</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a38ae048f2f4b43fce5d4ee5dae9ed3f6</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, int version)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArPriority::Priority</type>
      <name>findLastEditablePriority</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a67d7b5f3ab440363bef21b0389581e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleGetConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a1617c968a0f04acbc23bedd053335a65</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, bool isMultiplePackets, ArPriority::Priority lastPriority, bool isSendIneditablePriorities, int version)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>handleGetConfigSection</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a5e8f96113b0f4711367f21f0fb84d3d4</anchor>
      <arglist>(ArNetPacket &amp;sending, ArServerClient *client, ArNetPacket *packet, bool isMultiplePackets, ArPriority::Priority lastPriority, bool isSendIneditablePriorities, int version, ArConfigSection *section, int startIndex, int paramCount, int sectionIndex, std::set&lt; std::string &gt; &amp;sentParams)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>internalSetConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a9af737f5682fa22e1dd7723281467375</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, int version, bool isMultiplePackets=false, bool isSingleParam=false)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAddedDefaultServerCommands</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a496d57de8fa3977c55e5cfe17fd1037b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArConfig *</type>
      <name>myConfig</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a5c27cd765ea09fac030c5d5a38623b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myConfigMutex</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ae72760bdb157b96ef3914d9c543ea167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myConfigUpdatedCallbacks</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ab4c3decef609bf33d0dfe5ec6b550592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArConfig *</type>
      <name>myDefault</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a154ca4c56488a134db3a70b845df13ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDefaultConfigMutex</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a256e55cac451af2e2c7ebdfd4580abd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDefaultFile</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a9b907aaff423f2902e409985cc6cfcb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myDefaultFileBaseDir</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ada3743c64fbcf66737732d97ce102e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetConfigBySectionsCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a05f1e7d0787d499845cb57cd31ecae1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetConfigBySectionsV2CB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a6cbac493fa90d9dc9dde971e9f625123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetConfigBySectionsV3CB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a413d712de48a0af32cfc7904223ac82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetConfigBySectionsV4CB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a42ca3c1128bb87098a2307111d082399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetConfigCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>abfe9edf739d83700dc4b0b3e89b03458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetConfigDefaultsCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a18e2589502a08ec207fc35f1e8b4cd49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetConfigSectionFlagsCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a82531a350ffd934ad085cb0073ca18e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetLastEditablePriorityCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a1bfc3e19291385ec69b540916a3193c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLogPrefix</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a4e0f70d1485ad76364130a50af97e808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPermissionAllowFactory</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a90d788380532fee7b50bd06553b7dff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPostWriteCallbacks</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ab04d36f6cee8a021c9a6ef7ccf2273f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPreventChanges</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>aa34dc861a6fb0029fffc8f853d89000b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPreventChangesString</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a7232905cf9c4246ff30415e847e59c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPreWriteCallbacks</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a6ffcdc1aebf43f61ad128514f95b984a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myReloadConfigCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ae87aa67b6e86abb0bd20f1c57c1dba7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor *</type>
      <name>myRestartHardwareCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a87a2f0d606781a03641b126964fe2b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myRestartHardwareCBSet</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a88e447202cf776cf98eaea56c25e5614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myRestartIOCBList</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a86af436633f29cf10acdaf086ef411be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor *</type>
      <name>myRestartSoftwareCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>aaeb36d850c246b227a6b97b72d437b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myRestartSoftwareCBSet</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ad4735d1df841a4272396b961df54b84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myRobotName</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a6c60219033b98b132add35d95a652b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>ad7afca21d88cc9c92a9b8802175b59ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>mySetConfigBySectionsCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a544ad3a00e4718d79d133e93bad01427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>mySetConfigBySectionsV2CB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a56b81af728a7cde598c6f0bbfdfea8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>mySetConfigCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a7779f4577824c91bb9dc6e6882b67e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerConfig, ArServerClient *, ArNetPacket * &gt;</type>
      <name>mySetConfigParamCB</name>
      <anchorfile>classArServerHandlerConfig.html</anchorfile>
      <anchor>a0ee12d61aff7887367d0a5a6eb99311a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerMap</name>
    <filename>classArServerHandlerMap.html</filename>
    <member kind="enumeration">
      <name>DataToSend</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a4502e33d8544d0fa70a8de3a1f74f4c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LINES</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a4502e33d8544d0fa70a8de3a1f74f4c6a644280b9178f0aed24aa9f31069e2b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POINTS</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a4502e33d8544d0fa70a8de3a1f74f4c6acc7ba38e370d8bf62645b705876f1d30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTH</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a4502e33d8544d0fa70a8de3a1f74f4c6abb44d30e3d44b0286f4587d179dc0733</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a95166d757b0915e5dca239f44d739e99</anchor>
      <arglist>(ArServerBase *server, ArMapInterface *arMap=NULL, DataToSend dataToSend=BOTH)</arglist>
    </member>
    <member kind="function">
      <type>DataToSend</type>
      <name>getDataToSend</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a451a22172e968ec6c7416a9ada3e1673</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArMapInterface *</type>
      <name>getMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>ab87e1a7483555107f82b5771e69a604d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a3c0137cf1b3cd7ad0e4991bfc6089d93</anchor>
      <arglist>(const char *mapFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverGetGoals</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a89d83704706b39b4c0687d85df7fd4a5</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverGetMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a7c74d8236e31f3c26df096eb75a83775</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverGetMapBinary</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>acc3da98775bcbadd237260f8c5685087</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverGetMapId</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a0fc3c08c6b2b35af0a0342c961af5f4d</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverGetMapMultiScans</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a4e7d54602c7f5743d08149032b2a76b8</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverGetMapName</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a9b981c4fe18f14d95cd4405fbc56f6b3</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverGetMapWithMaxCategory</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aee9608dd320e325503c8daa68de76f5a</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataToSend</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aee355acd21e098b0a0c70015850b4876</anchor>
      <arglist>(DataToSend dataToSend)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a006079b813bfca435f4ea686e915adae</anchor>
      <arglist>(ArMapInterface *mapObj, bool takeOwnershipOfMap=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>adfdece6ac41876d3febb32189216d088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleCheckMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aa9d766f19d4a868d43f2e8dbef65af07</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mapChanged</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a100049631f49fbb153c9d725e565aaf4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>processFile</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aa26fe466c63b101c0d6d8b2f3d5a317f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendMapWithMaxCategory</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a7e446ab28acebee48f0f8a9175479dbc</anchor>
      <arglist>(ArServerClient *client, const char *maxCategory)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeLinesToClient</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a51726a72111dac24a9042fd5e68358d3</anchor>
      <arglist>(int lineCount, std::vector&lt; ArLineSegment &gt; *points, ArServerClient *client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeMapToClient</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aed91e2c9c51cc32ecce6a87513746def</anchor>
      <arglist>(const char *line, ArServerClient *client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writePointsToClient</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a02e2f7be84c31530ccc5ed43ab0a61c1</anchor>
      <arglist>(int pointCount, std::vector&lt; ArPose &gt; *points, ArServerClient *client)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myAlreadyLoaded</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a20ccb84d758544fcabb18ccd1e460075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myCheckMapCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a51dc15c9b2800e3acb981f4021549bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DataToSend</type>
      <name>myDataToSend</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a256567d0cd24a0f0f749b620487f9050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetGoalsCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>ad201150de4326f235aeceda23fb4fa4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetMapBinaryCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a1cc3c29ac516ff3859de5ee9b4c4e050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetMapCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>abe8d73c07c185a4e65cc636d922f9d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetMapIdCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a87760b92df077816fd83c3a373d97445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetMapMaxCategoryCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a1eb074701cf8c5da2d2dca3c2ef0f3ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetMapMultiScansCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a87aa844ffd3e5bd53605cd3243b29e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMap, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetMapNameCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a2c72eb01bd8a15e0e65aea6d911f8905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myLastMapFile</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aec83bae3de89507fb2b7e27e1e48f86a</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>struct stat</type>
      <name>myLastMapFileStat</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a0cf89b688d34c2720bbfdeb62425d460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMapInterface *</type>
      <name>myMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>ae91b3b017a411b343a57fad04ded2c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerHandlerMap &gt;</type>
      <name>myMapChangedCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aa89b6d08bad87bdb293d87a2950421fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myMapFileName</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a163b764c130e4fa01a94b74446d26705</anchor>
      <arglist>[512]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMapName</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>aff0755e1703c903f88fa861cb994f2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myOwnMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a19add004c4934ecf411f47bf3dc76f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArServerHandlerMap &gt;</type>
      <name>myProcessFileCB</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a834c990f5858c4c2b9ca867a2adad967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a0110dd669c6c3ed3ab13ebae5b3f7ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerMap *</type>
      <name>myServerHandlerMap</name>
      <anchorfile>classArServerHandlerMap.html</anchorfile>
      <anchor>a25d62083e1b2ead1be08f05a3db348ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerMapping</name>
    <filename>classArServerHandlerMapping.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addInfoToLog</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>affa3b8851b2e2892b264a58612023d5e</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addLocationData</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a70dfdbb069b3afc04361ee99c5a01b4f</anchor>
      <arglist>(const char *name, ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMappingBegunCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>aeaa5f0071164d78c096ff5ef29054385</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMappingEndCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a2e961eb78879c5b26e904df53cf0e957</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMappingEndedCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a8dc7454c2d5d7c98a5074fed5ee8bdb2</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMappingStartCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>ae8e5a3dad603641ee2b3096ffa7aee12</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPostMoveCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a4c670b100d85e1d7898695251652562d</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPreMoveCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>ad8468fe6a3eb0e7c6f10a1b34f666ca2</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSimpleCommands</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a06d235f24db219f51d1e74fd88264282</anchor>
      <arglist>(ArServerHandlerCommands *handlerCommands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStringForStartOfLogs</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>ada8f46464a8602fc0283f89cae7caf1e</anchor>
      <arglist>(const char *str, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStringsForStartOfLogToMap</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>ab4a8e760757d734465f9df0267d2fe0a</anchor>
      <arglist>(ArMap *arMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTagToLog</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a15924898161ae8638a937bf67a0d1f0d</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerMapping</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a942b282d2bf34464b9b6655d7537eedb</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot, ArLaser *laser, const char *baseDirectory=&quot;&quot;, const char *tempDirectory=&quot;&quot;, bool useReflectorValues=false, ArLaser *laser2=NULL, const char *sickSuffix=NULL, const char *sick2Suffix=NULL, std::list&lt; ArLaser * &gt; *extraLasers=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceReading</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a80eb79de0e40a3d46ab51f29e266063d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getFileName</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>af3a25f17be6dc9e4e09e1ea097226105</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; std::string, ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt; *, ArStrCaseCmpOp &gt; *</type>
      <name>getLocationDataMap</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a60775e7e090598405a56e9852c683cf5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMapName</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a8cda912c64d0dfe2f24dfd8cb2740ae8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArZippable *</type>
      <name>getSnapshotZipFile</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a34250538daf7c786295d7fd4d48feae2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArZippable *</type>
      <name>getZipFile</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a66f63fefcfbf535911a8c8801034e18c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMapping</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>abae8741893a263addedd2c2c8fb4603b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>packetHandler</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a786271fe3d7ed1dce95efdc4bac4ee8c</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remMappingBegunCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a253e2a8c7090e7110fac461ad89d0bec</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remMappingEndCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a8375c99ae1dad0e2c03a8717f36c2083</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remMappingEndedCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a2c473b158c5bc2e8ef10651684dcae0a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remMappingStartCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a64216f5e9d5b7afcf36efcc6b62fac4a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPostMoveCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a490a1a5d677929bacb2958f2cc4bb279</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPreMoveCallback</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>ac039792780eaf7d92704bde9a0871bb8</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remStringForStartOfLogs</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a760dc711eb2a00d49767b85be10ebb9e</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverMappingEnd</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a9e3f4f408780ebd72b54a0f6691ad3fa</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverMappingStart</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a4221bef12f98c7cdc092f96797f426b0</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverMappingStatus</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>aaf1871c87271956a22c90be8436de695</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSnapshotZipFile</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a3c1aae90f31681ce4e0bf5b9dd5f62cb</anchor>
      <arglist>(ArZippable *zipFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZipFile</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a9207ccf2499b1df06f43dada7ebe73ce</anchor>
      <arglist>(ArZippable *zipFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simpleLoopEnd</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a8c4bbcb2cade8c8ca79297829b2404fe</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simpleLoopStart</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a89728b9a2748d32c5e4a81991a89e672</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerMapping</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a4a10da00e279ed974e8ac21c01d1f0fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>makeFilePathName</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a8104da77b78467a8f26bc4a07e6b5138</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArLaser * &gt; *</type>
      <name>myExtraLasers</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a6ec45e34ed8aa53efc7361c806c69764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myFileName</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a4d900811adb325e94ece269bbda61d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myFileName2</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a9aa629e2e2ee3b2197c9cd181587efb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myHandlerCommands</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a31cece5a5359fd4b7f4939ec889cf1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLaser *</type>
      <name>myLaser</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>aeedd65f413d1993a6c63e10942fcd1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLaser *</type>
      <name>myLaser2</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>aedfe323ff20bcd7b0989d2c3c669c9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLaserLogger *</type>
      <name>myLaserLogger</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a63e1823ac8bb01a1b0f1d061c7329779</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLaserLogger *</type>
      <name>myLaserLogger2</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a9aa00535edbd9f21547dc9819231a57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ArRetFunctor3&lt; int, ArTime, ArPose *, ArPoseWithTime * &gt; *, ArStrCaseCmpOp &gt;</type>
      <name>myLocationDataMap</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a7fed2d1a1e5e1ee0b43eecfb86928176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerHandlerMapping, ArArgumentBuilder * &gt;</type>
      <name>myLoopEndCB</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a16a9f8c0233bac61d588c18bb8b7bb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerHandlerMapping, ArArgumentBuilder * &gt;</type>
      <name>myLoopStartCB</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a01f4aec18c14674769a3e74fcc978db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMapName</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>aa8a6a1562c50067cc320b5308fb9004c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myMappingBegunCallbacks</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a51ee670c3661ef2232b1436d2c42ab91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myMappingEndCallbacks</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>af388faa56006d23c8b8a92bfe85cadda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMapping, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myMappingEndCB</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>ae1388847a194ccb34801eb059e9090be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myMappingEndedCallbacks</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a5a6e3f4ef01eaf1093cbda414284d0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myMappingStartCallbacks</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a2a0d1991d28f257996168fb9034f9832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMapping, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myMappingStartCB</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a0bbcbcdc05afa5c5571b301c5f8adae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerMapping, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myMappingStatusCB</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>ac1a15edf1c5cad40be95a944955741db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerHandlerMapping, ArRobotPacket * &gt;</type>
      <name>myPacketHandlerCB</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a92ce70e8da51ff003b7f962f57e9ecbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPostMoveCallbacks</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a5203ea5415e99add43bd4ff6cd8b7679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPreMoveCallbacks</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>adea0614aa6c73297a2885d83777d85f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a4afee7909ae8c75f65c91f40a62568dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a378d5ba7f5e427249e51b49aac131fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArZippable *</type>
      <name>mySnapshotZipFile</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>aaa1d21da8db11f7710f2bc277aceaa97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::string &gt;</type>
      <name>myStringsForStartOfLog</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a3b3d99f3f7bb352ea3c2f0c842511e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mySuffix</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a506a8b8297d8ad5165f7cb72eb16d446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>mySuffix2</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a322345e802bac6a680bfc9a2eeacb451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTempDirectoryHelper</type>
      <name>myTempDirectoryHelper</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>adbec73f8198f2a2318b558720dc8b41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUseReflectorValues</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a047d90afa8a44a123b6ed62d1f163c8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArZippable *</type>
      <name>myZipFile</name>
      <anchorfile>classArServerHandlerMapping.html</anchorfile>
      <anchor>a05d888ab1ee7364c9c89a261d9d59eb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerPopup</name>
    <filename>classArServerHandlerPopup.html</filename>
    <class kind="class">ArServerHandlerPopup::PopupData</class>
    <member kind="enumeration">
      <name>PopupType</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>af3fd6c866c5fd0ceecb8c74a0ab2a9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOICON</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>af3fd6c866c5fd0ceecb8c74a0ab2a9a8a1e37e84c4ca0acc655ad3ba26465db78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INFORMATION</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>af3fd6c866c5fd0ceecb8c74a0ab2a9a8ab99a3f402f6cff49cbc4bc7ad015e94c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WARNING</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>af3fd6c866c5fd0ceecb8c74a0ab2a9a8a34dde11a5f4bcf08dcd2d1be90d8c33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CRITICAL</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>af3fd6c866c5fd0ceecb8c74a0ab2a9a8a3bd20d52dadb84183c9d8bd1dcb89deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QUESTION</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>af3fd6c866c5fd0ceecb8c74a0ab2a9a8a35c85152314909e4443e0f7f3b346157</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerPopup</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>aeb235821fa8919ec108b0bdf66ed49ca</anchor>
      <arglist>(ArServerBase *server)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closePopup</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>aa1979f99135636532f78255662c77461</anchor>
      <arglist>(ArTypes::Byte4 id, const char *closeMessage)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte4</type>
      <name>createPopup</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>ab79890fae1963f6265408079728af806</anchor>
      <arglist>(ArServerHandlerPopupInfo *popupInfo, ArFunctor2&lt; ArTypes::Byte4, int &gt; *callback=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netPopupClicked</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a7fc3996ddcc2dd9c8b11da2a13bc0c35</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netPopupList</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a8dc61188d6f5378794c6af5934d8958c</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverCycleCallback</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>aad0b667eff450022feaef4a194761672</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerPopup</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>afaa6f16480ee499cfa052bba5149536a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildPacket</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a2285a9f9b8175880b308656347e29677</anchor>
      <arglist>(ArNetPacket *sendingPacket, PopupData *popupData)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a3460ab8bfdc7343267f0a1a4f612be92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::Byte4</type>
      <name>myLastID</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>aafde07c90c903fed4b3bceaee77ee1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastTimeCheck</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a668ee44ee8891bece7424ce2d5ffdfa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; ArTypes::Byte4, PopupData * &gt;</type>
      <name>myMap</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a4acdbef5ffaba5df7981bc8aae893858</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerPopup, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetPopupClickedCB</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a5242291bc5d85f1f29a2f98bd1489001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerHandlerPopup, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetPopupListCB</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a25d69543ed622a0d011bf4fb775f228d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a71cba9b8635464b615d47dc4cc78e42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerHandlerPopup &gt;</type>
      <name>myServerCycleCB</name>
      <anchorfile>classArServerHandlerPopup.html</anchorfile>
      <anchor>a48ade8cae1ca2a1a33874ad084458748</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerPopup::PopupData</name>
    <filename>classArServerHandlerPopup_1_1PopupData.html</filename>
    <member kind="function">
      <type></type>
      <name>PopupData</name>
      <anchorfile>classArServerHandlerPopup_1_1PopupData.html</anchorfile>
      <anchor>aed5a2d8c3fdc65a8a9d091a7eaab6f8a</anchor>
      <arglist>(ArServerHandlerPopupInfo *popupInfo, ArTypes::Byte4 id, ArFunctor2&lt; ArTypes::Byte4, int &gt; *callback)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PopupData</name>
      <anchorfile>classArServerHandlerPopup_1_1PopupData.html</anchorfile>
      <anchor>ad44bf197df47820294e17b9d332f01de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ArFunctor2&lt; ArTypes::Byte4, int &gt; *</type>
      <name>myCallback</name>
      <anchorfile>classArServerHandlerPopup_1_1PopupData.html</anchorfile>
      <anchor>a505723a68c4627c997ba381f9104cb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTypes::Byte4</type>
      <name>myID</name>
      <anchorfile>classArServerHandlerPopup_1_1PopupData.html</anchorfile>
      <anchor>a1b6bf5e55c74d6a492efca6e36a48fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArServerHandlerPopupInfo *</type>
      <name>myPopupInfo</name>
      <anchorfile>classArServerHandlerPopup_1_1PopupData.html</anchorfile>
      <anchor>a5fd8ff43b3e1cce71ece78b26e2842d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArTime</type>
      <name>myStarted</name>
      <anchorfile>classArServerHandlerPopup_1_1PopupData.html</anchorfile>
      <anchor>a04a55773508583fc62ad93b532494fc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerHandlerPopupInfo</name>
    <filename>classArServerHandlerPopupInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerPopupInfo</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>ab339485b1dc7569aa9d0a45aac3317b5</anchor>
      <arglist>(const char *ignoreIdentifier, const char *title, const char *message, ArServerHandlerPopup::PopupType popupType, ArTypes::Byte defaultButtonNumber, ArTypes::Byte escapeButtonNumber, int timeoutInSeconds, const char *timeoutString, const char *button0Label, const char *button0Pressed, const char *button1Label=&quot;&quot;, const char *button1Pressed=&quot;&quot;, const char *button2Label=&quot;&quot;, const char *button2Pressed=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerHandlerPopupInfo</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a4cf75eb0a5e8dff0ca2ecc7ec075d68b</anchor>
      <arglist>(const ArServerHandlerPopupInfo &amp;popupInfo)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getButton0Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a0657cb50ef028ab14f30553e5500e1d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getButton0Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a29b270b675624fd919c660c03976e35e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getButton1Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a1dd920ca4e7f9d945e590214596d8312</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getButton1Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>ab3465970e26ed7a23094e0cdbac8f5dc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getButton2Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>ad2c8f13e1f1f34b75d40fa85ebe34471</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getButton2Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a7cf6580859208caeeb309572abb07091</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte</type>
      <name>getDefaultButtonNumber</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>aad55e7d85afd0336e6ea4388b82f7d4e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTypes::Byte</type>
      <name>getEscapeButtonNumber</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a13698e5e6ef1cc914ccf07a95314752f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getIgnoreIdentifier</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a9457426bc399f105d4ef105a7a097729</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMessage</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>afb9d0e955d9d22b040d11dd6a66e171e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArServerHandlerPopup::PopupType</type>
      <name>getPopupType</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a3f395e0f245514654043f05ae013b4be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimeout</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>ab17749da1517d584163f47dbfb68de59</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getTimeoutString</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>acd81e0fef4618fdb17c23f4ad591a5e8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getTitle</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>af4ad307ce2e394538bd5e8bfd8534a23</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArServerHandlerPopupInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a996a091928e6ead4e3799e930284b0e1</anchor>
      <arglist>(const ArServerHandlerPopupInfo &amp;popupInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButton0Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a4f3f045d6d60ba5df86d0c1d8c2eeb32</anchor>
      <arglist>(const char *label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButton0Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a9b2825557fb07876848f43158e154e8e</anchor>
      <arglist>(const char *pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButton1Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a68122f559731ccba35cb6399b1dedab6</anchor>
      <arglist>(const char *label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButton1Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>af1c5076c74620fdc905fdd9a19210b67</anchor>
      <arglist>(const char *pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButton2Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a8e3c5cd898f8f83bababd1b6c4b8e761</anchor>
      <arglist>(const char *label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButton2Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>aaeac4da1ac04109f95269ba807cf7b6f</anchor>
      <arglist>(const char *pressed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultButtonNumber</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>af349bbb9cf03fe1fb7f263e62b204c3e</anchor>
      <arglist>(ArTypes::Byte defaultButtonNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEscapeButtonNumber</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>adbb14bc592d3449b0debe9618d13b364</anchor>
      <arglist>(ArTypes::Byte escapeButtonNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreIdentifier</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>aa7c67a48c0373d2f8a4f6053ed90ed12</anchor>
      <arglist>(const char *identifier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessage</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a0cd098be04d271e81f8a0df17de5c156</anchor>
      <arglist>(const char *message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPopupType</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a3f7300f11f7e291f8edb17fabafca14f</anchor>
      <arglist>(ArServerHandlerPopup::PopupType popupType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a60cf8d03b99b323abd03e41c3ed218e3</anchor>
      <arglist>(int timeoutInSeconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeoutString</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a13a750791c164e163035d88ca3c272fe</anchor>
      <arglist>(const char *timeoutString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>aeb388c181cc24c83ecb9ca4d1af6a6d9</anchor>
      <arglist>(const char *title)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerHandlerPopupInfo</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a756a1ab65703076b1155d0763f95a4f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myButton0Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a69cca23851c9142607cc6103ddbbe652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myButton0Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>ae615956d05f72e50fb24ea28275e1e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myButton1Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>aaecddba3e19cbbc4e55f98a8d5fe3e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myButton1Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a723c7cd4d996e424b993537a025bda8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myButton2Label</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a0903df544d01762888f316e4bca8f106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myButton2Pressed</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>ad44b9fab665b3d2c6352019cfd1628f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::Byte</type>
      <name>myDefaultButtonNumber</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a5c4be8e2b5448b9ed432ac533f8cc5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::Byte</type>
      <name>myEscapeButtonNumber</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>abc651b6f2c6034fcd182d6cc9275a992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myIgnoreIdentifier</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>ac04d8e627312e63169dac277ce2f8a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMessage</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a13b6bb6a4de3767d0c5ed4b13c2343ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerPopup::PopupType</type>
      <name>myPopupType</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>aa8341788a0c9cac4556c8270d6d65702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myTimeout</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a914c23e0a53c34ccec129cf1db1776c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myTimeoutString</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a021e032e699417bcb1e0e3f7f9ca4d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myTitle</name>
      <anchorfile>classArServerHandlerPopupInfo.html</anchorfile>
      <anchor>a5880c6ac04c0ab4f631933a17ccd876a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerInfoDrawings</name>
    <filename>classArServerInfoDrawings.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>addDrawing</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a593c3d93e722ab316ab6404c7f734011</anchor>
      <arglist>(ArDrawingData *drawingData, const char *name, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addRangeDevice</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a6f445808f6921e3dd81f9f97ca702cf4</anchor>
      <arglist>(ArRangeDevice *rangeDevice)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addRobotsRangeDevices</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>afce43fb3fd0324b092600c9eb6fb50a7</anchor>
      <arglist>(ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerInfoDrawings</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>ad9278fea370ec893427b54eb3d85a763</anchor>
      <arglist>(ArServerBase *server)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *</type>
      <name>internalGetDrawingCallback</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a7984332324c25d4dc6d9e5e8948273a1</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>ArDrawingData *</type>
      <name>internalGetDrawingData</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>aed89796bdc6473eee2b6e7f85a4c63f9</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netGetDrawingList</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a1f858e9317bb8eb0f916f7aaaed48eba</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netListDrawings</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>af8612320c95adbe18fd31cff009ac5db</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netRangeDeviceCumulative</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a5538f8db02d88dfe7c6bd385601a5da4</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, ArRangeDevice *device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netRangeDeviceCurrent</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a14e4b9a1d15089141192fecaebaf250e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet, ArRangeDevice *device)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerInfoDrawings</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a53d560a897e98b6d63ea55247d64354c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *, ArStrCaseCmpOp &gt;</type>
      <name>myDrawingCallbacks</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>ae50d4f41806c16bb8633942c808498a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, ArDrawingData *, ArStrCaseCmpOp &gt;</type>
      <name>myDrawingDatas</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>adfd584660076b3975edd4f2b412dd875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoDrawings, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetGetDrawingListCB</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a9e5341a7c9ef875e4fa83d18cc647310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoDrawings, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetListDrawingsCB</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a9aac2ff640b9a52eb6a533e460cd085d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerInfoDrawings.html</anchorfile>
      <anchor>a49542dcd70ddcbf0ebb29660b6ba2a02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerInfoRobot</name>
    <filename>classArServerInfoRobot.html</filename>
    <member kind="function">
      <type>void</type>
      <name>activityTimeInfo</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a37b6b2739285beb767fea6bcb130cdb0</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerInfoRobot</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>ae7a1c348ddaacc8669eb908a12d34c7e</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>batteryInfo</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a4b1f5a1de6266e00dcbe3f8d02d63e10</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>physicalInfo</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>ab2cbbfd21c0deafa12a0e60fd77a5b2a</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a4a0905008a60f291372e53481d6656a2</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNumbers</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a4625b86363da3746a7f194b80a316e61</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateStrings</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a124d06b5f8fd99676200e76222cb7979</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerInfoRobot</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a07e1e158db45699f306a24f7f4cbde7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>userTask</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>ab22b4e8128c3c289fbb8c724feaff5f2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoRobot, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myActivityTimeInfoCB</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>ab2ec56a2825eb0d24e3ec6c7a7ec0294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoRobot, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myBatteryInfoCB</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a20f05293bf9ee42a5b67f59d51017fd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a224a6d07051237503612f336c69bda37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a8885c11cb59b462e01a216dee5e19cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myOldExtendedStatus</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a247cbe7a907306fb54dbe64882ea0671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myOldMode</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a973c53984dea10eb42fa268a1d0cb12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myOldStatus</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a6d009f7d13454f4436d25b88b6fe87c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoRobot, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myPhysicalInfoCB</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>ae31b4dda1ec676ac02107bfced98587e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a010739ba99f0717216c687da3f27c314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a71669dbe0be1c7917db62c8971cf7b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a09da12433a5066862f09df97786180fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoRobot, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myUpdateCB</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>ad40bdcd0ff3badf205dba6f5208b5119</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoRobot, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myUpdateNumbersCB</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a1da2b9b64e5c59c2ffd205b82f1b8f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoRobot, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myUpdateStringsCB</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a5a5ed06648187c14e64d73c9327ba5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerInfoRobot &gt;</type>
      <name>myUserTaskCB</name>
      <anchorfile>classArServerInfoRobot.html</anchorfile>
      <anchor>a0f7f99ed112fdbf7ec1d4d8a1a7ae104</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerInfoSensor</name>
    <filename>classArServerInfoSensor.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerInfoSensor</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>a6142189716002731d1c68bd39301a586</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSensorCumulative</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>aaee254ac71f7b492f0ff0c8c6a09c9fa</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSensorCurrent</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>ab80c9d9690b3046edca548488262de1d</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSensorList</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>a6ed74b4b1a08e222484bc9b689c9e34f</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerInfoSensor</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>ad0b665327947a8013fb461ee0658a3be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoSensor, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetSensorCumulativeCB</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>ab14ac64edcc0211b2d9e5c6cfd595846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoSensor, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetSensorCurrentCB</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>a8a05a84df537cf3251145018ec6b3853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoSensor, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myGetSensorListCB</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>a3f444aa1a500324c153300fcb60e67d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>a51d64cd843ee7f87e173813f8b69f009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerInfoSensor.html</anchorfile>
      <anchor>ab905a56469aedfe12fd669f821344026</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerInfoStrings</name>
    <filename>classArServerInfoStrings.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a00732cab5b92cd9381e4432473325acc</anchor>
      <arglist>(const char *name, ArTypes::UByte2 maxLen, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; *functor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerInfoStrings</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a66bc8483ce13e3f10444ce5fdd71ea43</anchor>
      <arglist>(ArServerBase *server)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor3&lt; const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; * &gt; *</type>
      <name>getAddStringFunctor</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a2c5ebea58bca4a8ad16ce5368e6f668c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArStringInfoHolder *</type>
      <name>internalGetStringInfoHolder</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a0a47d7af475f91dde682621ab2cdfc45</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netGetStrings</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a294bb4c281000232701a5df6cbb4c5bc</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netGetStringsInfo</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a0c33bcedd5fe876692513f423d67033d</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArServerInfoStrings</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>ae1a8d8f1dccbea7bc163fe29b12bb9f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildStringsInfoPacket</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>ad308dda206b26dab0289eb41fd112dff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildStringsPacket</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>ab55e2b284011fe22d4bdccd7bca5239f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor3C&lt; ArServerInfoStrings, const char *, ArTypes::UByte2, ArFunctor2&lt; char *, ArTypes::UByte2 &gt; * &gt;</type>
      <name>myAddStringFunctor</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a3a58eddf809cc5b5dfc935282729bef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastStringPacketBuild</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a196c1504cda1d6cc90de07a9cb730c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTypes::UByte2</type>
      <name>myMaxMaxLength</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a804d930d29aabd1686d009d3d12d301f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoStrings, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetGetStringsCB</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a4f65f20558ea0b2c3e99c584960c2782</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoStrings, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetGetStringsInfoCB</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>ac792967b18a1db106a0ad920933ca8ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a5dc83db77cc0363c6c7d0ef40a327940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myStringInfoPacket</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a70ba0c1af28767cb260e7f59d41a5834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArNetPacket</type>
      <name>myStringPacket</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a6cd2356ee12c84ded2358af204b50427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArStringInfoHolder * &gt;</type>
      <name>myStrings</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>aec664dd1d531551b3722448461149b01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myStringsMutex</name>
      <anchorfile>classArServerInfoStrings.html</anchorfile>
      <anchor>a3d97a5095a7d305ba5823428051af671</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerInfoTrailDrawing</name>
    <filename>classArServerInfoTrailDrawing.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerInfoTrailDrawing</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a18db98a4b27ba080d6758452bd903dc3</anchor>
      <arglist>(const char *name, ArRetFunctor&lt; ArPose &gt; *func, size_t max, const ArDrawingData &amp;dd, ArServerInfoDrawings &amp;drawingServer, unsigned int interval=1, float minDist=0)</arglist>
    </member>
    <member kind="function">
      <type>ArFunctor *</type>
      <name>getPullFunc</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>acebab0ce834c842ee3966e4e666dba99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pull</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a56d45f59830189a17c492800145605a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumPoints</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>ab0239a03d624fb98f9f24e57d9a48c44</anchor>
      <arglist>(unsigned int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinDist</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a578513a6a60097d26f587ac9fe4242ce</anchor>
      <arglist>(float d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPullInterval</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a6f375761d5770dd75b804f828578a79a</anchor>
      <arglist>(unsigned int i)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a488c134b9e82ac1756effb9424fa9321</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *pkt)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myCounter</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a88f67fd5cf1223bc87f54d3e7b84b510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerInfoTrailDrawing, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myDrawFunc</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a758e65086a50aac776a3a98681c7eca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArDrawingData</type>
      <name>myDrawingData</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>adf4674cc7a92d8accd287a595ffa8e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor&lt; ArPose &gt; *</type>
      <name>myFunc</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a47cfd2d05210282d2d4dc450633f9a9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>myInterval</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>ad192fc0af511f7d4aec467e8a2ca33e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>myMinDist</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>aae10f6bf25fd6e2da70fb9e24d2058a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>ac3ea2f10b3692b8688c181fe916ba709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>myNumPoints</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a67f3733cc18ca591fe4981b145bd5e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::deque&lt; ArPose &gt;</type>
      <name>myPoints</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>a7575584a1b16892243fdf487ca815355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerInfoTrailDrawing &gt;</type>
      <name>myPullFunc</name>
      <anchorfile>classArServerInfoTrailDrawing.html</anchorfile>
      <anchor>ab7dcb9c45d741220c0475d40494c4535</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerMode</name>
    <filename>classArServerMode.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a092c6d2981123554324e7697658c6814</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkDefault</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a014227585b6eb3d36dc3dc0763b9eb47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e38e919b51d105bd781f165a7e91679</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a83509005e2ee9ede7464fb5aa9e2fee6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4f82c754ecd65d0f495920555d51cca9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeDrive</name>
    <filename>classArServerModeDrive.html</filename>
    <base>ArServerMode</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a9cbdf5a641f5104864812e0a81588fb8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addControlCommands</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>afdc03ae7cdb5a89517e2269d0bcdbd87</anchor>
      <arglist>(ArServerHandlerCommands *handlerCommands)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerModeDrive</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>ab597ca947ca6d711a7694e49b00a3d37</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot, bool takeControlOnJoystick=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a62c04e2aa6d0047413bc7ee994167857</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>driveJoystick</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a3c02b634cdd8997cfec66043bb99b345</anchor>
      <arglist>(double vel, double rotVel, bool isActivating=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>afcec069d66c9fc4e2e14fb03529e7e2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSafeDriving</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a0132e30cd63fe992573501f218ba6ab5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>serverDriveJoystick</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a44ab3cbb734859235c736ce72714e0b8</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtraUnsafeAction</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>aacf1016b7bcdbbfd061e2b962cee1136</anchor>
      <arglist>(ArAction *action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSafeDriving</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>abde07d6582bd825ddf45b0c58218e7e6</anchor>
      <arglist>(bool safe)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThrottleParams</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a420f1da97b1439f44369698d7af4e9e0</anchor>
      <arglist>(int lowSpeed, int highSpeed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a4367ea5ca3e469de40aac68f32758590</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerModeDrive</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a751a7636fcc821203a6f74ea41e70597</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkDefault</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a014227585b6eb3d36dc3dc0763b9eb47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>joyUserTask</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a76f8032da3fb8858cddc47b8ab25dd26</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverSafeDrivingDisable</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>af951e44f10482836715216c01d867d80</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverSafeDrivingEnable</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>ac1132755c2b8ef0aba3ed6f42ee15310</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionGroupInput</type>
      <name>myDriveGroup</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a83e6d71b78c902505936c10206cce506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDriveSafely</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>ae2542bddfe58becf1db1cd0751c748ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArAction *</type>
      <name>myExtraUnsafeAction</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a8536da9de9e8ee19c10472c633008508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myHandlerCommands</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>ae052d91e556f6bdfe611f5807b156485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionInput *</type>
      <name>myInputAction</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a796670988584aa9afd71f06211eae47a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionJoydrive</type>
      <name>myJoydriveAction</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>af73e38e00eaa9b8abcbff94954b919fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArJoyHandler *</type>
      <name>myJoyHandler</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a16c3b8c5eb99ae4e6c26ffbd6d78e118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeDrive &gt;</type>
      <name>myJoyUserTaskCB</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a519ec184951b7c3a60373960028b92b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myNewDriveSafely</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>adc6fcdf0435783f320e6f7060e32306d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myRotVel</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>abd9d9cbc1d1e442c5e973052be2b4b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeDrive, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myServerDriveJoystickCB</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a5c6b96b5138cb11692336f38adab1c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeDrive &gt;</type>
      <name>myServerSafeDrivingDisableCB</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>aacd61f6a0adbae01a0f88822a79a5a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeDrive &gt;</type>
      <name>myServerSafeDrivingEnableCB</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a3e3f7ac35a92275bd72ee21b3eb59bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionStop</type>
      <name>myStopAction</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a88f16ab6cf936877fd3ccdfbb3128785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTakeControlOnJoystick</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>ab14463181af0923d96f00087215c52a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myVel</name>
      <anchorfile>classArServerModeDrive.html</anchorfile>
      <anchor>a193eeef8c54da6b9bc6c2488c1836644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeIdle</name>
    <filename>classArServerModeIdle.html</filename>
    <base>ArServerMode</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a84867b663457084418b188714cee227f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a5a316e6c42becbddee0a08dcea08a2f0</anchor>
      <arglist>(ArConfig *config, const char *section=&quot;Teleop settings&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerModeIdle</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>ae6092ffbb4125927cd9d451a5fbefb22</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>abb53bfa7fcbb9d7e93c0237d5172320e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>aed7b5eda46cfdfc07d71f8b367c7ad93</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArServerMode *</type>
      <name>getModeInterrupted</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a571138068977fec1f2ccf53082f7c85d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseLocationDependentDevices</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a482635443ab7af7ca1efd6473dda6bc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModeInterrupted</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a285695bf9403307f9aa8d9bbb4a1a98b</anchor>
      <arglist>(ArServerMode *modeInterrupted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseLocationDependentDevices</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>aaee43395c6803b5bec1c6f9d3ceb5b26</anchor>
      <arglist>(bool useLocationDependentDevices, bool internal=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a8739492a9d7f6ad7068c7760726c3274</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerModeIdle</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a30614135b99c1cae7c4cdd098cec6b1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkDefault</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a014227585b6eb3d36dc3dc0763b9eb47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterBackward</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a0807786255bd6e15d20d2b9ac2f52fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterForward</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>addf251cb02a5f3bbbd1fc0062f480c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralLeft</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a0b90cf48bc22610249f063ad01d47e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralRight</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a0074cf3a231317d5ad570a5a472c9217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerMode *</type>
      <name>myModeInterrupted</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a66ac25f699a168092cb163a8c5fae417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeIdle, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetIdleCB</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>af7155b4f1d9544fd918ec0d9fe098354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionGroupStop</type>
      <name>myStopGroup</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>ac799337b13af74f704bd8c5f43aa75a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUseLocationDependentDevices</name>
      <anchorfile>classArServerModeIdle.html</anchorfile>
      <anchor>a2e8798325b9814b7de88ea1daecbe415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeJogPosition</name>
    <filename>classArServerModeJogPosition.html</filename>
    <base>ArServerMode</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a6157251fc3b3ca735af747c84ee3a235</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCommands</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a8447c723f144164f3f0290643ab0e145</anchor>
      <arglist>(ArServerHandlerCommands *commands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>ae804b49ae43c71bca7bd425ed1dd75c0</anchor>
      <arglist>(ArConfig *config, const char *section=&quot;Jog Robot Position&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerModeJogPosition</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a154ee4fbdf5629e5df295c8a9bd7e4d2</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot, const char *name=&quot;jogPositionMode&quot;, ArServerHandlerCommands *customCommands=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>ac0be44b91245424cc158f620084478c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a72a2780024cd1891be31bcfb4b08d6fa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArActionDriveDistance *</type>
      <name>getDriveAction</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>ab0c1b1875042a8cb838e06a2ce4a3d81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArActionInput *</type>
      <name>getTurnAction</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a020c424ed87126722ff0c50a68691d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>heading</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>ab8928d2b01fa6c68bfc6c8ea03caf47a</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a73a0d95fef4dac3f11f8daff6a340d12</anchor>
      <arglist>(double distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turn</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a69b33cd7db01379423918dd363cd201c</anchor>
      <arglist>(double angle)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerModeJogPosition</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>ade84ccfcbdf3c5b781de6efe3b4a262a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkDefault</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a014227585b6eb3d36dc3dc0763b9eb47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4f82c754ecd65d0f495920555d51cca9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverHeading</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a1cb08262d57f01599f2893d800240b7f</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverMove</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a607784b5a45fbe6a1b5ee02f12bb5824</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverTurn</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>ae5469c8ce840463a9def466db0086030</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stringCmdHeading</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a4f7829a043fa1087a4955f244595177e</anchor>
      <arglist>(ArArgumentBuilder *args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stringCmdMove</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>ad97477a6ca9db6e65de1a505f94e962e</anchor>
      <arglist>(ArArgumentBuilder *args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stringCmdTurn</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a8dc1e4fc99bf6f10259d6bab313c2aee</anchor>
      <arglist>(ArArgumentBuilder *args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionGroup</type>
      <name>myActionGroup</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>abd08a182f4b6766fd8862c28e46d5da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myCustomCommandServer</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a4b8bb2d25ada220a00d835a741c491b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDriveDistance *</type>
      <name>myDriveAction</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a0cf74c5a141a45757643f17a8fc7f6c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastCommand</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a5ee6d3c937d6dd71acd7c4be71ad5d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterBackward</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a5b721dcf9eea7f659b77ced1359f90d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterForward</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a0684a7240e1a876a418d4b25273a6b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralLeft</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a9d82f6adaf96514c52befe272c0bd34c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralRight</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a37b128d249129d7eec76a1a3e88b65fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionLimiterRot *</type>
      <name>myLimiterRot</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>af67a4b3692f8b839080ea54edf190551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionMovementParameters *</type>
      <name>myMovementParameters</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a897029f9d17d11fa6950e9fd83af4057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPrinting</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a98d43b2d015181fcf93bff08728c5549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeJogPosition, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myServerHeadingCB</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a50d90a6f055581f251ad63615b158b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeJogPosition, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myServerMoveCB</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a27353ed9109db5ef588bf9b5cc9cda0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeJogPosition, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myServerTurnCB</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a1ff694a720435d1a127f7a9fb0c5b3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerModeJogPosition, ArArgumentBuilder * &gt;</type>
      <name>myStringCommandHeadingCB</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>acc63b3da7e98a861fb2502df8dec3e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerModeJogPosition, ArArgumentBuilder * &gt;</type>
      <name>myStringCommandMoveCB</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a82fc0b354cd0c7c09e25f72322e32007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerModeJogPosition, ArArgumentBuilder * &gt;</type>
      <name>myStringCommandTurnCB</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>aa5c57d90b94f08c3aff6aa0fe9bbf431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionInput *</type>
      <name>myTurnAction</name>
      <anchorfile>classArServerModeJogPosition.html</anchorfile>
      <anchor>a34cb7f7a539fe4c0c7e891db1a61cbe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeRatioDrive</name>
    <filename>classArServerModeRatioDrive.html</filename>
    <base>ArServerMode</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a298f2f1daf9d24292d4885a3ac44f934</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addControlCommands</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a4f2e0b9b1cbdca73db31d95437e095b2</anchor>
      <arglist>(ArServerHandlerCommands *handlerCommands)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDrivingBackwardsCallback</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ae2985794b5ccf221a6a1bdd571618ec7</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSafeDrivingCallback</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>af5ec40eec55a36ad5aeb8e856723ed37</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a5f9789a3e51ca3f52d3efbd7be5d4c66</anchor>
      <arglist>(ArConfig *config, const char *section)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUnsafeDrivingCallback</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ad3e48d9e5eb260d3629a14eca056065b</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerModeRatioDrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a084495b3b4b72574b0fa7f4f44ad3c4e</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot, bool takeControlOnJoystick=true, bool useComputerJoystick=true, bool useRobotJoystick=true, bool useServerCommands=true, const char *name=&quot;ratioDrive&quot;, bool robotJoystickOverridesLocks=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a6a06c21a8fd937809482eb9360ff36d3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a1a71f4eddf2419d40e8e3a52331330ce</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArActionRatioInput *</type>
      <name>getActionRatioInput</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ac9e5174698239d9e450dabdc155cbce0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSafeDriving</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ac33658a9fe0f3943c27921045faa51d8</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseLocationDependentDevices</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a3798ff35dd462fba5e01484ce2755468</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ratioDrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a05695d0bfce99671e9285b934932eb75</anchor>
      <arglist>(double transRatio, double rotRatio, double throttleRatio, bool isActivating=false, double latRatio=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDrivingBackwardsCallback</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a364c704d20137293a708ab58df911fb6</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSafeDrivingCallback</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a2b6310b295db52676229adcab95d65e4</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remUnsafeDrivingCallback</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a969391cd80447eb8f57ce75dfe7b3836</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSafeDriving</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a88962dfc85ceed1d452a9295cfff2f4f</anchor>
      <arglist>(bool safe, bool internal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseLocationDependentDevices</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ac572a6898a8ab1e15b0c548075c7b2e9</anchor>
      <arglist>(bool useLocationDependentDevices, bool internal=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a662446425208fdbc3479bd7bab4bbd2c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerModeRatioDrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a1628d6b721da09c2c702dc697dd86138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkDefault</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a014227585b6eb3d36dc3dc0763b9eb47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>joyUserTask</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ae511bb3aaf38f80c031c7721d6dda69d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ratioFireCallback</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>af81aef876b15e5725d29e1051f569da5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverGetSafeDrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a88cfedb3b240265dcd79df7210dddfef</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverRatioDrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ada4c9dab13063c2ce20efc3893ed07e8</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverSafeDrivingDisable</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>aa35da0a27a38ef8f54565e38da7840a0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverSafeDrivingEnable</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a3eb298e4f7c0832e906de0efb6c4b4b0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serverSetSafeDrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a5507700494a28c304e021ce8111762a1</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDriveSafely</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a86f15356853259e287bcaebe12a902b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDrivingBackwardsCallbacks</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>aeb0696f9d48c1ca4e91f93ca6a9bfdf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myGotServerCommand</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ac449c243cc305eb17d3b1475332c4c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myHandlerCommands</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>aec20ebba39ec3f19d756ef5dfd8de39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRatioInputJoydrive *</type>
      <name>myJoydrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>af4205d24fe17e50bd96fdefd8c31af60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArJoyHandler *</type>
      <name>myJoyHandler</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a95d51c34fbb539b43b3c3acfb06a5894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeRatioDrive &gt;</type>
      <name>myJoyUserTaskCB</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a24c4d778df31eea1c3d3675bfbf78331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastCommand</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a0e067f17fcef6bf6422abe53abac0e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLastRobotSafeDrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>aea0f3c58b466dd7e70b01b2c14a6529c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLastTimedOut</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ad70fb9f43e3de5a7c306547f6d8adec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myLatRatio</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>aa687e61f0b13b967c2108e5fdeeec8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterBackward</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a52bb42e06b081c1a169c4107f92f7e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterForward</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a39ae8f50a0da675ce41a378485f3fa8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralLeft</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a62e09ff6acf71a267d1b56fbe68be676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralRight</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a3c25feca040e296aebeb9185b9a6c32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionMovementParameters *</type>
      <name>myMovementParameters</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a73c209b72435ae5ecc55f461c4c49776</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myNewDriveSafely</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a051595029bae76b1f6a68a4c25f4e607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPrinting</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a8f094383e3c0f7e05d5f0bfccf51420e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionRatioInput *</type>
      <name>myRatioAction</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>af1ad61c4c3fad1d7713ebb091c92cc25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionGroup</type>
      <name>myRatioDriveGroup</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a4a157ba91e8f2609021c5e3b9325d1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeRatioDrive &gt;</type>
      <name>myRatioFireCB</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a8ba6dd3f683a5adf250f9d52a59372de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRatioInputRobotJoydrive *</type>
      <name>myRobotJoydrive</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>aab65d236f35a3441b6b974b2022b7896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobotJoyHandler *</type>
      <name>myRobotJoyHandler</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a632ea40bbd1c077b83fb9ac309664049</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myRobotJoystickOverridesLock</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ad16223946349b03a30a8df6646591f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myRotRatio</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ad56e7b1da6f354f70d5227564b80cd2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySafeDrivingCallbacks</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>af3db23e3131f468fdf78312c7ff1a9b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySentRecenter</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>abd8972dabfa386b4aedeaa97af8fceda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeRatioDrive, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myServerGetSafeDriveCB</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a1b7f517eb534fe07330e064fa327d8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeRatioDrive, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myServerRatioDriveCB</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a2bfba47a4b9d1b387685beca87b0dd89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeRatioDrive &gt;</type>
      <name>myServerSafeDrivingDisableCB</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>afba9dd5e2098c47f826bcda9ca9a8881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeRatioDrive &gt;</type>
      <name>myServerSafeDrivingEnableCB</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a65f53db4d53406b63bb3a4cbcfb629c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeRatioDrive, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myServerSetSafeDriveCB</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>aab22a1bf84bfd5fb3f0b42d7cfc53519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTakeControlOnJoystick</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>abee0d863b4169e3cbc8f77b1a0c381f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myThrottleRatio</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ae363f20f5a8d5ad32b3145a2d407f4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myTimeout</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ae3e7211ac87382ab6c10581971c35d9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myTransRatio</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>acc109900c06aae73d2455ec0cba85f9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myUnsafeDrivingCallbacks</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a9b59e7059f390a0a5a9f476a98c7a47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUseComputerJoystick</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a3082d0f817dacb7746b811d4bb3d0eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUseLocationDependentDevices</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a4f6cdb59ae2fa6f9041fa8079c9c7c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUseRobotJoystick</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>ad66d1370a197092d2ede4d924e347e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUseServerCommands</name>
      <anchorfile>classArServerModeRatioDrive.html</anchorfile>
      <anchor>a0d299988ab2b00f22f76e202aacbd74c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeStop</name>
    <filename>classArServerModeStop.html</filename>
    <base>ArServerMode</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a701b1ae94cfda807e9f3d6c51a9fc53f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a1472b47b0d38e8258296901b2358c5eb</anchor>
      <arglist>(ArConfig *config, const char *section=&quot;Teleop settings&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerModeStop</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>ac826511854107514c4c0fd8c0eafc1b0</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot, bool defunct=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkDefault</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a2e12fe875ae55de5bae5cbdbf20e7e10</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>ace3ae18699e40e1f6120311510474dc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a301e68555c2cecc6cc989549c496cb25</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseLocationDependentDevices</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a490ab627f09fd24fa3e168cf58b3d955</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netStop</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a20fbc6d1a4f90c1cc5bb804086ca7dbb</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseLocationDependentDevices</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a14376fd5821f1c18f005fa364da486d9</anchor>
      <arglist>(bool useLocationDependentDevices, bool internal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a68462fdfdf950982408bbdd71bce0606</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a4443dcf32af692d03a413d89bb8d5659</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerModeStop</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a62199fd6eb5b7d29d3f4c8f3bbc32f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterBackward</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a8fd032d9a5430769b0c4ada268f00855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterForward</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>ae615fc261fe97338e72f94101ce8eed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralLeft</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a859af36bca5bfea694775a0f77da97db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionDeceleratingLimiter *</type>
      <name>myLimiterLateralRight</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>ad33759c1545110232d7073f4226f58cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeStop, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetStopCB</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>ad8285206602ea599ddad6597c3397bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionGroupStop</type>
      <name>myStopGroup</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>ae94b113930b58ca224f8c7af45494f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myUseLocationDependentDevices</name>
      <anchorfile>classArServerModeStop.html</anchorfile>
      <anchor>a7e0f99c9bc54eccf361285a4746a8355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeTestLoop</name>
    <filename>classArServerModeTestLoop.html</filename>
    <base>ArServerMode</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>af8cc07ceea36539a374fcc2b86e7e90a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCommands</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a39c08b52b13434f4ee9e98eafbdf0a3e</anchor>
      <arglist>(ArServerHandlerCommands *cmds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToConfig</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>aead74335d867991f0f588e67dbf41968</anchor>
      <arglist>(ArConfig *config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerModeTestLoop</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>ada2dec7f7f741a6e285c6055d65ee80a</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot, ArConfig *config=NULL, ArServerHandlerCommands *cmds=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>acefce9716dcf990b0c41bda10255d0e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerModeTestLoop</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>afa734dc218ac7d1be0bd15d4987d5749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a83509005e2ee9ede7464fb5aa9e2fee6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumvalue">
      <name>Trans</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>aedfb26cff3bdc2b14e333e02297688e1a185fb2ff733b320e6969b797e11441cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Stop</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>aedfb26cff3bdc2b14e333e02297688e1ad00809ff4711d6a27c646ad667dcf8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Rot</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>aedfb26cff3bdc2b14e333e02297688e1a45a1e453872a59c3b68173da439e0d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Deactivated</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>aedfb26cff3bdc2b14e333e02297688e1ab03c5bd6bd247856202a31808b44549b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerModeTestLoop &gt;</type>
      <name>myActivateCB</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>ac5b46a275d317b3eb544e465842a96a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myDriveDist</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a16498a8caf5bdc300cedb187ca0dd29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeTestLoop, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetTestLoopCB</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a8125c56975db367c3a48d0fa79e443a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myObsDecel</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>ac1faad08e9b9890da3803de0f416aea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myPadding</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a2099d4f5b58a74b9b623a55fe2c6f4c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRotAccel</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a47a55350add6759160232631c0035656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRotDecel</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a52572fe671bc138d0a7730582bf564fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myRotSpeed</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a66269bdd6566a7707b76ed4dd8d9c0ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mySpeed</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>ab1b112ed5354b7d542c19affd28ef191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArPose</type>
      <name>myStartPos</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>aea6503573f21c297a7510ef29f77983b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>enum ArServerModeTestLoop::@7</type>
      <name>myState</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>ac9e47a90c67a2e2e4704bfd40fae6e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myStopDist</name>
      <anchorfile>classArServerModeTestLoop.html</anchorfile>
      <anchor>a7466e26123878ab04e8e0c29bcbfdc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeWander</name>
    <filename>classArServerModeWander.html</filename>
    <base>ArServerMode</base>
    <class kind="class">ArServerModeWander::StopIfNoRangeDevicesAction</class>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activate</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a6c77fb01f8cc4f5fc1cfe5d49a858310</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerModeWander</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a055eb3dd20abc6cb3a66fce71668e53f</anchor>
      <arglist>(ArServerBase *server, ArRobot *robot)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>checkDefault</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>adf9a8b53e6f248cb4d06f609e1fed458</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deactivate</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a04a978ad8c845ec866b2639b2f3eacd3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ArActionGroup *</type>
      <name>getActionGroup</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a9774325c028618ae6eb6d185c2bc9e6b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netWander</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a432017b4c8052c3b267d0612ed438cb3</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userTask</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>aa6766d994f2b80d1999686757f6bb57a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>wander</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a97b8d21460973c9fd9e892da5cbf75ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerModeWander</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>af7ffedb458ca7017c64ce20e825caa62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>activationDenied</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3e6c97caab6953a5886e10ea8a80c9c6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9055642c26c7814c7cee551686f73133</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAsDefaultMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac071f8179603fecc38d69f8e89e88f34</anchor>
      <arglist>(ArListPos::Pos pos=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0b3c5c9aeaf6b63c6e372cc544bab24c</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addModeData</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9acf27a776a00075387380f01d96822c</anchor>
      <arglist>(const char *name, const char *description, ArFunctor2&lt; ArServerClient *, ArNetPacket * &gt; *functor, const char *argumentDescription, const char *returnDescription, const char *commandGroup=NULL, const char *dataFlags=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adce5560f71d030e46eb2aca69028d7aa</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a630990922aa0d3db1b624d0f06005e25</anchor>
      <arglist>(ArFunctor *functor, int position=50)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a2244b7807bc65d8b21d6d1fc7aa48b30</anchor>
      <arglist>(ArRobot *robot, ArServerBase *server, const char *name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>forceUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14ebae2c8954290a9a24ae436d76cfcb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ArTime</type>
      <name>getActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a72957552e992a8a02f679ce15c46de3c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6e66aee860aa207897d03aa1194428f2</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1958150b0f5e06d78b0a8e016c2b659b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1a323c4fba120c61e97e86672271f5af</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a79c34eb7c604eb4c292f45fb976ccaea</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a789e20814dce5a0b1662b9e812970b3a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>internalSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a0f4c90ee6a9fe47abed59865f2a9ac78</anchor>
      <arglist>(ArTime time)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aef0b2b6b2c15781ce4b9e9e9269817cb</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutoResumeAfterInterrupt</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a61e811cdddb8eeca316f49615785f590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5c81f4374bca5c809fe74c3fdc204671</anchor>
      <arglist>(bool willUnlockIfRequested=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remActivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae7684042c77fa0c93a794417fa50a179</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a414a561a1dc614dc5e2ab25a2981c77a</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>acbf53ef90c389f4b1b652e05aae4c826</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remSingleShotPostDeactivateCallback</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a08ec815d73e0835e18446fc3444e2d5c</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requestUnlock</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5870d8eebdcb7d0ba50679b87ace7f05</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActivityTimeToNow</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa06c79717f2c05be4be1738e15a286ac</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af030881b4c33da7ad92a9c21d8ae23cd</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3ccc40a4a377d006dc4ab77e0841ee8b</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a746568cbafdc300088c404234fc18973</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8a5e11075081f6a0dd561d6a14f8b0f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; ArServerModeWander, ArServerClient *, ArNetPacket * &gt;</type>
      <name>myNetWanderCB</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a822e15e0541ab54d188e81fba764633e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StopIfNoRangeDevicesAction</type>
      <name>myStopIfNoRangeDevicesAction</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>a84e0f861333b7cdc8ea2446b644efc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArActionGroupWander</type>
      <name>myWanderGroup</name>
      <anchorfile>classArServerModeWander.html</anchorfile>
      <anchor>abb4fdbadb84226935c9b0f202fa57a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myActivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab3cfe4fcad1830d1cd739348b97ec6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7600d662ad8ed4d258f8a65d0c1bbeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myActivityTimeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af0a5cd17d137c15bf671f8c5f708047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>myDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa2e2e158a5421b7ddabd9b29c7eaa729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myExtendedStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aca9e0fdb6fb3ca81f80387c40cc5cc59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myHasSetActivityTime</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1dda759f1f11f14a403784ce31e0edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myIsActive</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae0a97bcc83e1d13b3f09e1f3b9dc5613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4041998b9de0e5a4b9696b5b386e94b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myName</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a49565b6ee2a61ebd916565bc944d9d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ae437152464cfb29e87ce7fa6c3500416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aa9b2f709812b30d3baa0715e06972ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mySetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>abbd1f1899687d626098ef8ccd976e180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a962670b48e5e976e6db615d2ed2a182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArCallbackList</type>
      <name>mySingleShotPostDeactivateCallbacks</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a4c54b1999a387825eeb937e12ea32ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myStatus</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa94143f88b10591b5f80c63d5a6797f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myStatusSetThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a63534616025bba5c532b5b3e385d2e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArLog::LogLevel</type>
      <name>myVerboseLogLevel</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>adca90d0d23c68ee14dc62095c3d6c336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerMode *</type>
      <name>getActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a3d12ee9d79a46c35b3af45223b771e3f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getActiveModeActivityTimeSecSince</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af7b38792e1c67ba86b86dbe23be05763</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeExtendedStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5ab05a0554d8b418af6c53812278577c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeModeString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85b865d2651047bedfaddcf5771d0721</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ad916f018e9bf69303f495d2aa28afd85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getActiveModeStatusString</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a18c24eabbec199ba6f0311f5cb80cd2f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>getIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a62adbda73b582fcbb56c2ecdaf6ff52f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af778e02b6962d25b53489a568b851d8e</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeDataList</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a8190970059f9c792a223abcb6e082a78</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getModeInfo</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a282706c010844b2d3923b0ec0ac4b802</anchor>
      <arglist>(ArServerClient *client, ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5759f053d1e95063917373035728f667</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>willUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac146b5c1c295c1748807798c4aac4878</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>baseActivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>af5a8feef05fb30934ccd3ca603356ed4</anchor>
      <arglist>(bool canSelfActivateIfLocked=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>baseDeactivate</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9b36a9994a87a9446a7897c80c640e14</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkBroadcastModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aeccf06f0f128f489f56cd07b966ac2b4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ArServerMode *</type>
      <name>getLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afd94f60638f8c31941fb4002ad0d5185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>buildModeInfoPacket</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a76e39322bbaf7429fece462b3245bea9</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt; *</type>
      <name>getRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a25746e810a80c943a0b8f955e4a085f4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>modeUserTask</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a5701ebb7e5a76845fee0be277c40c13e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>aba9a279d8ee8713c3a729bebf4c04b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a29396b0b1f3879af968f50fb0edc9fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeSetActivityThisCycle</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a32ee20e608421d5246c595a388eaa4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68e83ec188c8902d1d8e8ac9c5f6d1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourBroadcastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1fdf8b2a83b3ef3cd0aa0acb46ffdcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeLocked</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ab571f12a0878959d134ee2bc214d816a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourBroadcastActiveModeWillUnlockIfRequested</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a525e08c21cc9f8941e9dac299f631997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourDefaultModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1cd6a6ab0d0159f008a59f85d97a213d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeBusyCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a68762e76a0771a993f80c2dd3ad36827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeDataListCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a6187581ea0bd2b84a94f8b73fc4669fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor2&lt; ArServerClient *, ArNetPacket * &gt;</type>
      <name>ourGetModeInfoCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a337373063bac19e1c46d5f72caed64de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerModeIdle *</type>
      <name>ourIdleMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a9e3ab7fc3bce2ef1d0cb849c3563a122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIdleModeCreated</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>ac4163f344f000fd6991ba2b38390f06a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourIdleModeMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a7dcd3b6ac6729d2b31d95f5e1bc1781b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourIsBusy</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a87dbecb73ca88e29816c93c45089d710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourLastActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a37b5871079b35f4e03f5ae42ff9099db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::multimap&lt; std::string, std::string &gt;</type>
      <name>ourModeDataMap</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a181e8411133da147fcf5e49b3aa54b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArMutex</type>
      <name>ourModeDataMapMutex</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>afa2626f90d550bb3bcb0652b11c2c101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a85e8f155bd5564e5876c05cfe45bf594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerMode *</type>
      <name>ourNextActiveMode</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a600992a4fddda1410dbc275886dfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; ArServerMode * &gt;</type>
      <name>ourRequestedActivateModes</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a14c37dde86119df95e719051a6f35b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArServerBase *</type>
      <name>ourServerBase</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a89d8016220a4304344c3b5d460b6ae0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>ourUserTaskAdded</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a1991e7c90fb5a279ade61870495e9f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static ArGlobalFunctor</type>
      <name>ourUserTaskCB</name>
      <anchorfile>classArServerMode.html</anchorfile>
      <anchor>a159712d2003b1dd822787df6bc49b5ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerModeWander::StopIfNoRangeDevicesAction</name>
    <filename>classArServerModeWander_1_1StopIfNoRangeDevicesAction.html</filename>
    <base virtualness="virtual">ArAction</base>
    <member kind="function">
      <type></type>
      <name>StopIfNoRangeDevicesAction</name>
      <anchorfile>classArServerModeWander_1_1StopIfNoRangeDevicesAction.html</anchorfile>
      <anchor>a1e8d50f7084b61a8ec5bf4fcf36267d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleComGyro</name>
    <filename>classArServerSimpleComGyro.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleComGyro</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>a8ace47adb101103d149ae225d7d8f37c</anchor>
      <arglist>(ArServerHandlerCommands *handlerCommands, ArRobot *robot, ArAnalogGyro *gyro)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gyroDisable</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>aba94d622c7545f371e69a8a35870ba8d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gyroEnable</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>ae2074497a04490553e7ec8ae63ac2a5c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerSimpleComGyro</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>a13e6b2e5f16d5f163ccecc44fa371b1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArAnalogGyro *</type>
      <name>myGyro</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>a88cac5fe2485019a0b349d6910d3ada0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComGyro &gt;</type>
      <name>myGyroDisableCB</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>a6431d614abfdaac24d100d3f889d11a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComGyro &gt;</type>
      <name>myGyroEnableCB</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>a7a56786eadfdbc589840c0dffaaa9d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myHandlerCommands</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>a21e25967fdc6805239bc217577fe50cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerSimpleComGyro.html</anchorfile>
      <anchor>a0dbfeef27b67a0d0f5db27c887b9ed43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleComLogActions</name>
    <filename>classArServerSimpleComLogActions.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleComLogActions</name>
      <anchorfile>classArServerSimpleComLogActions.html</anchorfile>
      <anchor>a7ad350f7e0c87e89fde1a51a6527bce4</anchor>
      <arglist>(ArServerHandlerCommands *commands, ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logActions</name>
      <anchorfile>classArServerSimpleComLogActions.html</anchorfile>
      <anchor>a4c31274c95fcb028649df7a914c66153</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleComLogRobotConfig</name>
    <filename>classArServerSimpleComLogRobotConfig.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleComLogRobotConfig</name>
      <anchorfile>classArServerSimpleComLogRobotConfig.html</anchorfile>
      <anchor>a431dd55e91646fd6f2712356aca73002</anchor>
      <arglist>(ArServerHandlerCommands *commands, ArRobot *robot, ArServerHandlerPopup *popupHandler=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logConfig</name>
      <anchorfile>classArServerSimpleComLogRobotConfig.html</anchorfile>
      <anchor>a8972ae6b6d33b644cedb343715d0720f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logMovementConfig</name>
      <anchorfile>classArServerSimpleComLogRobotConfig.html</anchorfile>
      <anchor>a9a996fe0f677e90a9725c3d002b2d6b1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOrigConfig</name>
      <anchorfile>classArServerSimpleComLogRobotConfig.html</anchorfile>
      <anchor>a1fcddaf69b773f8f1316fd5af8851b82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popupConfig</name>
      <anchorfile>classArServerSimpleComLogRobotConfig.html</anchorfile>
      <anchor>ab48df0732468afd39cf77811ef3d83df</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popupMovementConfig</name>
      <anchorfile>classArServerSimpleComLogRobotConfig.html</anchorfile>
      <anchor>a22da2351f332a066238e42f41f1a4912</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popupOrigConfig</name>
      <anchorfile>classArServerSimpleComLogRobotConfig.html</anchorfile>
      <anchor>adf851f8199de981ff1fcd3a462bc5e84</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleComMovementLogging</name>
    <filename>classArServerSimpleComMovementLogging.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleComMovementLogging</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a1724e81cf81e92f1a9cf4a2c6f9abd20</anchor>
      <arglist>(ArServerHandlerCommands *handlerCommands, ArRobot *robot, ArServerHandlerPopup *popupHandler=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logActions</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>af792c916f6e7e544d54e9a9b4710fd1e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logActionsDisable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>ace05e25156f9c3590ef25a8bffa24e78</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logActionsEnable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a5200bfa7a29c55b3e87cfabc89481a55</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logMovementReceivedDisable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>ab3e012a0cd79bf4a4c5eee012f532951</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logMovementReceivedEnable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a815e8f322ff0116b4f2dde8aa37a1e68</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logMovementSentDisable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a78dac84456e2d37d33bb56adad3d62e4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logMovementSentEnable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>ad80a02edecb8ced3ac6c81645eee5756</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logVelocitiesReceivedDisable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a09c146c178d9fe2607cf8de830c55dc3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logVelocitiesReceivedEnable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a45a117cdf3aeef42bed76bf9ea6ecf4d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetsReceivedTrackingDisable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a406bd9f2db531a3985eff2b6f91b352d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetsReceivedTrackingEnable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a70e4d7ef2a53b241221b1d85f8cafa60</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetsSentTrackingDisable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a488425d55b9c3090a40bfd633a4b40fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packetsSentTrackingEnable</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a34ee000c4e9a1ddc3d20e8c8b5a83f94</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popupMovementParams</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a8a4db77dfc4ad6f4beb385cd2e77ed57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetOdometer</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a452598d078b88c85ab9a156cdf377ddd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerSimpleComMovementLogging</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a1daf6c6e082fa44f22b116881e3dd3f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myHandlerCommands</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a8503f00a5bb83d9e446650e267f061ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogActionsCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>ae7885a1b818922e5829b8cacc825fa68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogActionsDisableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a3b5f6d1d02f6ae66264c7977985b429a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogActionsEnableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>aeb33262dc4c7c0e09fda308e8038f92b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogMovementReceivedDisableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a1f48e79af701ee57cf4f51cf93fb1ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogMovementReceivedEnableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a8090ea56dc9151c8ba5f3b60b395b90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogMovementSentDisableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a0ebc539976becdd7830d692d4e24cd8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogMovementSentEnableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>add60b9c470769101cbfc5b8611b00671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogVelocitiesReceivedDisableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a7c41d41e28ec2cfe53d43ebdc098a382</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myLogVelocitiesReceivedEnableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a4799f96cc362294347bdb87aafc3b756</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myPacketsReceivedTrackingDisableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a5899060c7fac997d9278cec2b2c6bb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myPacketsReceivedTrackingEnableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a57209da787ad6ffb9a45ae51dbf5d11f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myPacketsSentTrackingDisableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a3a775f84c56195787037fbae36bf4b95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myPacketsSentTrackingEnableCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a836f16b2af927e92370020b809cf7a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerPopup *</type>
      <name>myPopupHandler</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a72a47cd2d35628e39f0a6205a6421db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myPopupMovementParamsCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>ab691f51be20ef6e4592daf92799a5840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleComMovementLogging &gt;</type>
      <name>myResetOdometerCB</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>adfd6d4e07ae51f588e3e5248b6e32fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerSimpleComMovementLogging.html</anchorfile>
      <anchor>a0a86205c4f33364861d8c2db332b9147</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleComUC</name>
    <filename>classArServerSimpleComUC.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleComUC</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>af6d4dda940713e45ad648f874628e13e</anchor>
      <arglist>(ArServerHandlerCommands *handlerCommands, ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>command</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>a6dd3182431dde151ccd33d47ae90fcbb</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>motionCommand</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>ab5f458d25662e0bf495ee8ef8f160925</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerSimpleComUC</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>ab969eb484a4056a714e6ca92d8bc1557</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processCommand</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>a961541b539dcf7e222ba1229e3421f36</anchor>
      <arglist>(ArArgumentBuilder *arg, bool motionCommand)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerSimpleComUC, ArArgumentBuilder * &gt;</type>
      <name>myCommandCB</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>a5d727aa54810e32ebc7bd2f5a43fb79f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myHandlerCommands</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>a1fa6a067d6244ed76c903790ba98cff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerSimpleComUC, ArArgumentBuilder * &gt;</type>
      <name>myMotionCommandCB</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>ace61f98c28dea8bfa0b2b4faf2de09b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerSimpleComUC.html</anchorfile>
      <anchor>a52005065d0f9af92f314dae431e79e18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleConnectionTester</name>
    <filename>classArServerSimpleConnectionTester.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleConnectionTester</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>abdf524c6ffa35d8288895aa4e361ed13</anchor>
      <arglist>(ArServerHandlerCommands *handlerCommands, ArRobot *robot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionTestStart</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a3fe26f7bddaa3591f413957848759ffd</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionTestStop</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>ab446e027a90e35c6c0fc282c0fbe0740</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerSimpleConnectionTester</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>aefba836b84e7c5091548c474e0f85c37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>log</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a0ba0282448140172d02b5a6f603a7b57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>packetHandler</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>aa64dd6319391ec8311f4f165309ef25a</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>userTask</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a00999c9d92f2de8c71db7debcfb10588</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleConnectionTester &gt;</type>
      <name>myConnectionTestStartCB</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a9c6cf8f85ed60609a0ae11bc18dfbcdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleConnectionTester &gt;</type>
      <name>myConnectionTestStopCB</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a0f2c7c70720325cb245f856e7a17e43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myCyclesSincePacket</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>aff1f76ae654a5c43011e26ac1ea334be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myFirst</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a9f002449f0d17ed71e9e70d04e91d368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myHandlerCommands</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a9af7dca459d5676001b75085031dbd71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myLastLog</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>aa77db920b9f2b500a4dd9d696ca9bab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myMissedMotorPackets</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>ac197cd7b0cae81196497f499aa45ebab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myMissedPackets</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>ab6a0d61fffe847e9b749b3e861ebd39a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerSimpleConnectionTester, ArRobotPacket * &gt;</type>
      <name>myPacketHandlerCB</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>adb93f375c437ee16cec208f1f5b97b26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArTime</type>
      <name>myPacketReceived</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>ac9669ad54f4f83ad8f5dd5d31c39a0d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myPacketsThisCycle</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a473258466ca80d57f7b22a04d1c39f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myReceivedPackets</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a672444c7739332856742fdc0eafd5774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a804b3f5fe5caccfba9042e527dae6c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; ArServerSimpleConnectionTester &gt;</type>
      <name>myUserTaskCB</name>
      <anchorfile>classArServerSimpleConnectionTester.html</anchorfile>
      <anchor>a801c39a65b950557c6d64e3ac9185812</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleLogRobotDebugPackets</name>
    <filename>classArServerSimpleLogRobotDebugPackets.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addToInfoGroup</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a20cae367899f06c90f526fd54072e1bd</anchor>
      <arglist>(ArStringInfoGroup *infoGroup, const char *name, int whichVal, const char *format=&quot;%d&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleLogRobotDebugPackets</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a2c5e4ef54130c421946d6216d1e6238a</anchor>
      <arglist>(ArServerHandlerCommands *commands, ArRobot *robot, const char *baseDirectory=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumValues</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>ac7d4ce19165e758a3d5095ed0490daae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getValue</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a98ebd080edbd3f0c13ee1a8a6fd5e1b5</anchor>
      <arglist>(int whichVal)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>packetHandler</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a5b8b59faa93c9fdb9c87775c0698c8d6</anchor>
      <arglist>(ArRobotPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startLogging</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>ade3c23ecb5fe258a12857123f0950563</anchor>
      <arglist>(const char *fileName=&quot;robotDebugPacketsLog.txt&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopLogging</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a3a5465c54569ab0fa9a477d5f7a7d6f1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerSimpleLogRobotDebugPackets</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a6901a9a195791f2f1b0fa7b8ca61a981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myBaseDir</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>af799f8cc77b6d83a2d0eb847be334e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myCommands</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a992756ddb61d2ca98c1d7bfdcd3bc5cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FILE *</type>
      <name>myFile</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a0b69ca1f14623131b24cd79512537e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myNumVals</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a988d4af2e840e4f9c90bba3e27431245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerSimpleLogRobotDebugPackets, ArRobotPacket * &gt;</type>
      <name>myPacketHandlerCB</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a327a22e1ad4b7a7bbdee7341fd1cfc47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>a9c535e285f20299cbb06bfdee84c611c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerSimpleLogRobotDebugPackets, const char * &gt;</type>
      <name>myStartLoggingCB</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>af3274adc47f5d283fda154c70b262a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArServerSimpleLogRobotDebugPackets &gt;</type>
      <name>myStopLoggingCB</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>acb0a29af9bab961e593f37ee91c3b1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, int &gt;</type>
      <name>myVals</name>
      <anchorfile>classArServerSimpleLogRobotDebugPackets.html</anchorfile>
      <anchor>ab9256b543c5923c8d714d6c9b0acd353</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleOpener</name>
    <filename>classArServerSimpleOpener.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleOpener</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a0e4bc179ffdeb98856fea613291590ad</anchor>
      <arglist>(ArArgumentParser *parser, const char *prefix=&quot;&quot;, bool addAriaCallbacks=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkAndLog</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>ad05fedc301ab89072e61879999463d17</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>didOpenFail</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a3dfa361873f4ca93cb807a0e476ae43d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPort</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>aaa66363344c96095c0158027a3b6809c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getServerKey</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>ad28178e0b2b6d9d041d1676dd616dab2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOptions</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>abf0eceb61b0aa727cce24d27e8362bf3</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a6429c1069dee5edc19fb7dc94078bed0</anchor>
      <arglist>(ArServerBase *server, const char *baseDirectory=&quot;&quot;, int secondsToTryFor=240)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>aa74b2317502c7f1b140742ee7d4f6f45</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseArgs</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a601d8c6fc3087522eff0ce0764a2e916</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseFile</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a201202a9de1b113cba15a842b7192b9d</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultPort</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>aef4bb6a4f8557bbb2103d61186847f64</anchor>
      <arglist>(int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setServerTcpOnly</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a4e29d515b1bcf77ceb66a7954cdb1ecf</anchor>
      <arglist>(bool serverTcpOnly)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasUserFileBad</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a7416e273f937d9301eb94ed02e04825d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArServerSimpleOpener</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>af9158a92c4d08b8309b946c0babd5274</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>fileServerKeyCallback</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a83935c13b311b90e4dccbac195b4a6ba</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logOptionsWithOutPrefix</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a50e4a62a35bbeb413b7f97ad3e585ab5</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logOptionsWithPrefix</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a41ee579c53fac0db084677212cd2b86b</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseArgsWithOutPrefix</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a9f412b1ade659bf642600c4ecadc77b5</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>parseArgsWithPrefix</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>ac715752e19a6d1e701a78c64af1dc7e8</anchor>
      <arglist>(ArArgumentParser *parser)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>abd4809c60fde31d662884a1537ed76d4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myBadUserFile</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a33045649767ac235d758a9fecf67d321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFileParser</type>
      <name>myFileParser</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>aef4891b393d2fa4e8192a1fbb3371fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerSimpleOpener, ArArgumentBuilder * &gt;</type>
      <name>myFileServerKeyCB</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a551c2efa215dc9e0165295d2f548be94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLogCommandGroups</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>adb158d81eb07511dc9ed93907965251e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArConstFunctorC&lt; ArServerSimpleOpener &gt;</type>
      <name>myLogOptionsCB</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a595e571288dd0710fe32f0ea197a3802</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLogUserInfo</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>ac6ec15e36e71214bdb5aeae238e13397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myOpenFailed</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a635c4d4d5a89c2bcfb01041b1eb28dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>myOpenOnIP</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>ad4ba5b0bd7e903a5c50f6744478c975e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myOwnParser</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a6a2902b888261f8e99881b945f45abde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctorC&lt; bool, ArServerSimpleOpener &gt;</type>
      <name>myParseArgsCB</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>ae49d1ae64ec641747198822fc55b1a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArArgumentParser *</type>
      <name>myParser</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a93df3234d64c80c707667e9068dd10e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myPrefix</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>ae39f06449ab2de04a866bfe192bce9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerBase *</type>
      <name>myServer</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>aa1321c0f148e3f4b5fc7c871b424c259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myServerKey</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a34020893cd46c7af4581924e528d260f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myServerPort</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a26af483d5ff2a9581cd72dbac12e1c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myTcpOnly</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>acf9b4c6a4e524b1dad51da6416babcb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>myUserFile</name>
      <anchorfile>classArServerSimpleOpener.html</anchorfile>
      <anchor>a93dbf14bd52aa7ffdb9584d585b5df9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimplePopup</name>
    <filename>classArServerSimplePopup.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimplePopup</name>
      <anchorfile>classArServerSimplePopup.html</anchorfile>
      <anchor>a20550a4670adfe8ec55dd8ad01697a74</anchor>
      <arglist>(ArServerHandlerCommands *commands, ArServerHandlerPopup *popupHandler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simplePopup</name>
      <anchorfile>classArServerSimplePopup.html</anchorfile>
      <anchor>a3a494ab35569800075a26df398ed2936</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerSimplePopup</name>
      <anchorfile>classArServerSimplePopup.html</anchorfile>
      <anchor>a4c0975b7f6174b4deef90f26e2e09831</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerCommands *</type>
      <name>myCommands</name>
      <anchorfile>classArServerSimplePopup.html</anchorfile>
      <anchor>abad77dee64c324931532ffceb5c684b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerPopup *</type>
      <name>myPopupHandler</name>
      <anchorfile>classArServerSimplePopup.html</anchorfile>
      <anchor>a134647698053f7948eedce5f9a2b7be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; ArServerSimplePopup, ArArgumentBuilder * &gt;</type>
      <name>mySimplePopupCB</name>
      <anchorfile>classArServerSimplePopup.html</anchorfile>
      <anchor>a36d2ce97961f0f091838d5fb2a58f8ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerSimpleServerCommands</name>
    <filename>classArServerSimpleServerCommands.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerSimpleServerCommands</name>
      <anchorfile>classArServerSimpleServerCommands.html</anchorfile>
      <anchor>ac2d01bcb0f13f678a6ae8c0867f2fc2f</anchor>
      <arglist>(ArServerHandlerCommands *commands, ArServerBase *server, bool addLogConnections=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logConnections</name>
      <anchorfile>classArServerSimpleServerCommands.html</anchorfile>
      <anchor>a3038eec1dec7167b5102099e0d4df17f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logTerseTracking</name>
      <anchorfile>classArServerSimpleServerCommands.html</anchorfile>
      <anchor>ad28e46621116f2142378a61bc9dba040</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logVerboseTracking</name>
      <anchorfile>classArServerSimpleServerCommands.html</anchorfile>
      <anchor>a0b70b60335624a91491df019b84a849e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetTracking</name>
      <anchorfile>classArServerSimpleServerCommands.html</anchorfile>
      <anchor>a8a9e147c5e9fcfb4cdf0db30514cbdfb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArServerSimpleServerCommands</name>
      <anchorfile>classArServerSimpleServerCommands.html</anchorfile>
      <anchor>ae0da4c0b6a174fea8e5db7516a5b1595</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArServerUserInfo</name>
    <filename>classArServerUserInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>ArServerUserInfo</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a914e17b9c381213015ca25eab3a36887</anchor>
      <arglist>(const char *baseDirectory=NULL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doNotUse</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a3d897e4ce5b7ccf23847d8255d8503fe</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; std::string, ArStrCaseCmpOp &gt;</type>
      <name>getUsersGroups</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a793e994d3ae5ee6664ac4fd6a2cc9a3c</anchor>
      <arglist>(const char *user) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logUsers</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a4e5f29a70959a85a6f3c384baff8ce46</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matchUserPassword</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a37d5f2dea39ea96eadd406aa92b29f29</anchor>
      <arglist>(const char *user, unsigned char password[16], const char *passwordKey, const char *serverKey, bool logFailureVerbosely=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readFile</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a44558263a89c9482c4da7deacb9c236e</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBaseDirectory</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>ad62b576bf7e929d14a02d09ea4f440a6</anchor>
      <arglist>(const char *baseDirectory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArServerUserInfo</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a24320d985f1094448204578f47c884ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logDigest</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>ac0aa7076836d7400074936807377b456</anchor>
      <arglist>(unsigned char digest[16]) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>removeHandlers</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a0680cb3ba9bd62afede7c9d8e60611e5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>v1DoNotUseCallback</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>acf03d31844f20aa3f6736886d35c91fd</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>v1HeaderCallback</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>aa809f074294aabeaa1a52b7d870beb0c</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>v1UserCallback</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>aae8853a452546b65793b514a9c25e753</anchor>
      <arglist>(ArArgumentBuilder *arg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myBaseDirectory</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a0ae63b7b7ea79dc7761fe2a7d2e48706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArMutex</type>
      <name>myDataMutex</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>aa32dd13114d24196ec59be2d37fb9043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myDoNotUse</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>af0c1d3eeb57e7c8e2ea9b244141ef297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myGotHeader</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a300c1ec68448804dd6e1c62f5ac02f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::set&lt; std::string, ArStrCaseCmpOp &gt; *, ArStrCaseCmpOp &gt;</type>
      <name>myGroups</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>abcca5d5fd6bfb67fa9d26fb5385a2fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myLogFailureVerbosely</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a8d7b1d7dbeb00b5996721264f1b98f6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFileParser</type>
      <name>myParser</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a47c1415e4348cb1ce232364d0ff53611</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string, ArStrCaseCmpOp &gt;</type>
      <name>myPasswords</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a908233d3b7fa64940cd15afabc813674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerUserInfo, ArArgumentBuilder * &gt;</type>
      <name>myV1DoNotUseCB</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a3d945b840dcbd17ba7e70e030208aa74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerUserInfo, ArArgumentBuilder * &gt;</type>
      <name>myV1HeaderCB</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>a6a1501fa978a0841f3a68a0fffac591f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRetFunctor1C&lt; bool, ArServerUserInfo, ArArgumentBuilder * &gt;</type>
      <name>myV1UserCB</name>
      <anchorfile>classArServerUserInfo.html</anchorfile>
      <anchor>ad2bfde5e78bdfff789309c41c76f270d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArTempDirectoryHelper</name>
    <filename>classArTempDirectoryHelper.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addPostMoveCallback</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a9ae9ebb94fad65d553d5f99beca4af3b</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPreMoveCallback</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>af87e83826e44a674b1a2564c5a7530c6</anchor>
      <arglist>(ArFunctor *functor, ArListPos::Pos position=ArListPos::LAST)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArTempDirectoryHelper</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a74cfd23172cf83142ca76e32c1ab66f3</anchor>
      <arglist>(const char *baseDirectory=&quot;&quot;, const char *tempDirectory=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getBaseDirectory</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a97a18737d6088261406a07f15b7c4a14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getTempDirectory</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>afbfa63587f4959a64e1b2046caef0171</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>makeBaseFilePathName</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a1a2e60a9d9108bc48f82d7565f56151b</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>makeTempFilePathName</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a9da9d02363c85ea6c025ec93862c4089</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveFilesToBaseDirectory</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>adfbb587a9c0cde164dd49e0d92f290b3</anchor>
      <arglist>(const std::list&lt; std::string &gt; &amp;fileNameList)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveFileToBaseDirectory</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>abf581d4318e5e84300fde08b5453b338</anchor>
      <arglist>(const char *fileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPostMoveCallback</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a1dba0f0dd8fd394bc1435a9296cc37fe</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remPreMoveCallback</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>aa3d1a14bca3a517e2eee646c50067882</anchor>
      <arglist>(ArFunctor *functor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArTempDirectoryHelper</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a877f8b3c5f9ee129d36b19558385d877</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>makeFilePathName</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a183ae5f55801fbc00461d2161fbc1381</anchor>
      <arglist>(const char *fileName, const char *dirName)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myBaseDirectory</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a8e124f6b1ca508117e2de2926fa9abce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPostMoveCallbacks</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>a23c16c3f24961b016d4bfbf9fd0921f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ArFunctor * &gt;</type>
      <name>myPreMoveCallbacks</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>aee0d55e4239ca8c8676ca435cad7ae79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myTempDirectory</name>
      <anchorfile>classArTempDirectoryHelper.html</anchorfile>
      <anchor>ac474084c75f50f1db397e90688ac9ebd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Circle</name>
    <filename>classCircle.html</filename>
    <member kind="function">
      <type></type>
      <name>Circle</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>a02dd4e6afe1df5a16b1f3ee2ae5b8051</anchor>
      <arglist>(ArServerInfoDrawings *drawingsServer, const std::string &amp;name, ArDrawingData *drawData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumPoints</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>a36fd9cf27d46824f293088fd0545fa91</anchor>
      <arglist>(unsigned int r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPos</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>a82bb144f4d47fec91a79a946bcbb4831</anchor>
      <arglist>(const ArPose &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>a6c5164e476c4dc5133e8a1615a0a8d75</anchor>
      <arglist>(double r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Circle</name>
      <anchorfile>classCircle.html</anchorfile>
      <anchor>ae3f30436e645d73e368e8ee55f8d1650</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>InputHandler</name>
    <filename>classInputHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>InputHandler</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>ad180ef189c326d7ab041351d0cd72fe8</anchor>
      <arglist>(ArClientBase *client, ArKeyHandler *keyHandler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>safeDrive</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a89a0f358138d6145c870a94a2992fc76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InputHandler</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>abe1e27d192d86058ad04ca6e16008110</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>down</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>aff05fcab709f52242af2ab0394c71bbc</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lateralLeft</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a3b88e23e1699f11fad5a959b86ba8337</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lateralRight</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>af1195a9ad1ba1e914aab851326d77dbe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>left</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>acaf4c6a33e622cd02291d7b26ee5eafa</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>listData</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>ae6c404a77a50561dfbec6d75ad110a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logTrackingTerse</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>ac2de3644ad0e689bd1e299db0b81be91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>logTrackingVerbose</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a8a20cb3c607fcdf8659e76410a4c9c19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetTracking</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a720c051d91b5522dbd6cb1ea4d598d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>right</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>ad046e535db8aa2945fd016ef2f2df2ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendInput</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a9e6368d486d4ccf4e2c3e9eebbcc7ddb</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>space</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>aa691a2145a3aa3be4da293331f97010c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>toggleDebug</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>aa7b0fbdc4cffd8aa1dd37cb54242a020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unsafeDrive</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a69d8487cec0c65dca3b2ec9688270070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>up</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>adf7f859e5468b9c3f45eff1440757d12</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a575b5c0ab6ed0beb75ef33a20acd9887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientRatioDrive</type>
      <name>myDriveClient</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a378156dd4ba64c4cfed4c1c4ca12dcaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArKeyHandler *</type>
      <name>myKeyHandler</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a89f34fafe38d6bd2358ceb054c88b9d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPrinting</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>af7cae761984e970db4da4c0bcebec2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myUpCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>aff0e09208e220a4d3607fce986e9885d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myDownCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a97fe4edc677bd1e2abf5b0d27bbc844e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myLeftCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>afa781fa14a8f584ba6bcbe9f2235acec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myRightCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a76e7550c0e9aaccff8cd1a129bf17493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myLateralLeftCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>afc023f75d4bffdaa0835c09280acee81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myLateralRightCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>ae588fe08a9dcc08347d638cf46beeb77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>mySafeDriveCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>aece58b4cf845670cc05396343e20698d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myUnsafeDriveCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a0639257dc6a5fa165f33b03a3b0f004a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myListDataCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a6c7e0a52967d6bcf1f8a22a3acde54df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myLogTrackingTerseCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a0b4371011416a9e9ed03fc373554111f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myLogTrackingVerboseCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>a1c80c4a76397ee2f4a8d7f533d02fdfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myResetTrackingCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>aa7775177aea65a54fcd8c28b922b1956</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>mySpaceCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>ac574c44d47590afe8186ac716eb5985e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctorC&lt; InputHandler &gt;</type>
      <name>myToggleDebugCB</name>
      <anchorfile>classInputHandler.html</anchorfile>
      <anchor>ad6a239ddd6d35320155f25c6bd8db7e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Item</name>
    <filename>structItem.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structItem.html</anchorfile>
      <anchor>a342b7a351c9ae1c5430aa3ef65b670bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>structItem.html</anchorfile>
      <anchor>a49aec685c872d1b9a221c8592ab52a8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>md5_state_s</name>
    <filename>structmd5__state__s.html</filename>
    <member kind="variable">
      <type>md5_word_t</type>
      <name>abcd</name>
      <anchorfile>structmd5__state__s.html</anchorfile>
      <anchor>ac7aead0e98fbd09a0f84b9087284064c</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>md5_byte_t</type>
      <name>buf</name>
      <anchorfile>structmd5__state__s.html</anchorfile>
      <anchor>a71ce7456c47cdb9ba243608dbe6ec7f4</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>md5_word_t</type>
      <name>count</name>
      <anchorfile>structmd5__state__s.html</anchorfile>
      <anchor>ad0b84a513af432acf997597f59b475a3</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OutputHandler</name>
    <filename>classOutputHandler.html</filename>
    <member kind="function">
      <type>void</type>
      <name>handleBatteryInfo</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>ad05eb152a5d330069757e7102f40356f</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMapUpdated</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>aecd792e743bb0efb552f29c8ff4a7938</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleOutput</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a4476f322b905187a09567250ca56bfb3</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleOutputNumbers</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a6cf0991598373c8f3101a351011ff214</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleOutputStrings</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a46bd6ae8b192932d9f3974ff08630724</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handlePhysicalInfo</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a0c09a51124463e5d3da9ab42535706be</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleTemperatureInfo</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a932355ec023774793ade587f90ddd187</anchor>
      <arglist>(ArNetPacket *packet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OutputHandler</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>acf4f3cc64225c0eddef5e62e05bf535e</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutputHandler</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a6078f6edb77501d4ad866abb03950f33</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArClientBase *</type>
      <name>myClient</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a227c709204693144875abdbaed7506bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myGotBatteryInfo</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>ab22104450660163125c6f16d94696364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myNeedToPrintHeader</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>aaea0f1841b181c2f10a7b0b45ed57ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myX</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a74d763d85ded5089cc624ac393811441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myY</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a3b7e68a82fb5766b4fb7aa007db179d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myTh</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a6850953e5a07353f6527b988c5642354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myVel</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a2b46970e9ed26fb2bee64841818ad2aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myRotVel</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a42092465da6636c238e471857cfd4ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myLatVel</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a7ad4184316ad70dfce0b4926d0f56b58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myVoltageIsStateOfCharge</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>ad0cc364b968e6ceb41850e10c8a71daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myTemperature</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>af1c43d0f34cc5063377e7359a03231f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myVoltage</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a3deda3b62c95efc36b1ee8220bb3264a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myStatus</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a28b028e781294ad07ac3ff2de8cc36fd</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>myMode</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a566c4ba4f70b9384fcdf6f0abc5aa9fa</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; OutputHandler, ArNetPacket * &gt;</type>
      <name>myHandleOutputCB</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a25ae6efce0648ffbba357e5413ddac6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; OutputHandler, ArNetPacket * &gt;</type>
      <name>myHandleOutputNumbersCB</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>ac28bd01f78c6717c36162078b4247172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; OutputHandler, ArNetPacket * &gt;</type>
      <name>myHandleOutputStringsCB</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>abe0155203bf50a4de570f744123ee4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; OutputHandler, ArNetPacket * &gt;</type>
      <name>myHandleBatteryInfoCB</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a5c0972cf1fa1cb4c384c3f6afd350993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; OutputHandler, ArNetPacket * &gt;</type>
      <name>myHandlePhysicalInfoCB</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>ae9ff2c6ae5ad93dbcc9697b6a78cbe56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; OutputHandler, ArNetPacket * &gt;</type>
      <name>myHandleTemperatureInfoCB</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>a94c63949c607554bc7375e657df11010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor1C&lt; OutputHandler, ArNetPacket * &gt;</type>
      <name>myHandleMapUpdatedCB</name>
      <anchorfile>classOutputHandler.html</anchorfile>
      <anchor>ab5a1348da0b79fb90c0567be2329581a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PtzCameraExample</name>
    <filename>classPtzCameraExample.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classPtzCameraExample.html</anchorfile>
      <anchor>a0fe9f62f695168f6e67eedfdfbfa76f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PtzCameraExample</name>
      <anchorfile>classPtzCameraExample.html</anchorfile>
      <anchor>af217e9aaaddce8f100b2b5628e715e11</anchor>
      <arglist>(ArClientBase *client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classPtzCameraExample.html</anchorfile>
      <anchor>abebd051cf8fc085f1d3d7b505e1a8c67</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SensorDetectPopup</name>
    <filename>classSensorDetectPopup.html</filename>
    <member kind="function">
      <type></type>
      <name>SensorDetectPopup</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>a176cae5018b13cc1fb2e727f74f0e242</anchor>
      <arglist>(ArRobot *robot, ArServerHandlerPopup *popupServer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>popupClosed</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>ab94ccbef97b46bbd2bc173e9db30d306</anchor>
      <arglist>(ArTypes::Byte4 popupID, int button)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sensorTask</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>aa85f6c8e45eeb576922151c67d4bbbf6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArFunctor2C&lt; SensorDetectPopup, ArTypes::Byte4, int &gt; *</type>
      <name>myPopupClosedCB</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>af82c24053bb2115628bb16d2a7824ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPopupDisplayed</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>a153752cd67025b7e8f07c05c378fa475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArServerHandlerPopup *</type>
      <name>myPopupServer</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>ae9bb25dadda759e8c583ad197ea766ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>myPrevObstacleAngle</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>a07cd92a62a7baf41d19f609b93de27cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>myPrevObstacleAngleValid</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>af4f28ae8a03a9a940ee6078383b94f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ArRobot *</type>
      <name>myRobot</name>
      <anchorfile>classSensorDetectPopup.html</anchorfile>
      <anchor>a4f89ce29c0409c60a8ac10ba8fcceac8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestProvider</name>
    <filename>classTestProvider.html</filename>
    <member kind="function">
      <type>int</type>
      <name>get</name>
      <anchorfile>classTestProvider.html</anchorfile>
      <anchor>a2611aea29c2c36e9ef4a5fe504925f5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inc</name>
      <anchorfile>classTestProvider.html</anchorfile>
      <anchor>a9af588773fc08b7a429a8f8da4113906</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classTestProvider.html</anchorfile>
      <anchor>a784e5176658800fe86340f9016bf5b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TestProvider</name>
      <anchorfile>classTestProvider.html</anchorfile>
      <anchor>af4215073732e7622602942d4a16a00af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classTestProvider.html</anchorfile>
      <anchor>a6546b867875fbe7e46e71112561350b6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestTarget</name>
    <filename>classTestTarget.html</filename>
    <member kind="function">
      <type>void</type>
      <name>printInt</name>
      <anchorfile>classTestTarget.html</anchorfile>
      <anchor>a00fecb6a20c63bc6d117379cccaf3c3f</anchor>
      <arglist>(const int &amp;i)</arglist>
    </member>
  </compound>
  <compound kind="dir">
    <name>examples/</name>
    <path>D:/src/MSw/Aria/ArNetworking/examples/</path>
    <filename>dir_d28a4824dc47e487b107a5db32ef43c4.html</filename>
    <file>changeMapOnServer.cpp</file>
    <file>clientCommandLister.cpp</file>
    <file>clientDemo.cpp</file>
    <file>clientStringInfoExample.cpp</file>
    <file>configClient.cpp</file>
    <file>configClientToServer.cpp</file>
    <file>configServer.cpp</file>
    <file>configServerRobot.cpp</file>
    <file>dataPubExample.cpp</file>
    <file>dataSubExample.cpp</file>
    <file>drawingsExample.cpp</file>
    <file>drawingsExampleWithRobot.cpp</file>
    <file>getVideoExample.cpp</file>
    <file>popupExample.cpp</file>
    <file>ptzCameraClientExample.cpp</file>
    <file>robotUpdateExample.cpp</file>
    <file>serverDemo.cpp</file>
    <file>simpleServerExample.cpp</file>
    <file>videoServerForwarder.cpp</file>
  </compound>
  <compound kind="dir">
    <name>include/</name>
    <path>D:/src/MSw/Aria/ArNetworking/include/</path>
    <filename>dir_d44c64559bbebec7f509842c48db8b23.html</filename>
    <file>ArCentralForwarder.h</file>
    <file>ArCentralManager.h</file>
    <file>ArClientArgUtils.h</file>
    <file>ArClientBase.h</file>
    <file>ArClientCommands.h</file>
    <file>ArClientData.h</file>
    <file>ArClientDataReceiver.h</file>
    <file>ArClientFileUtils.h</file>
    <file>ArClientHandlerConfig.h</file>
    <file>ArClientHandlerRobotUpdate.h</file>
    <file>ArClientRatioDrive.h</file>
    <file>ArClientSimpleConnector.h</file>
    <file>ArClientSwitchManager.h</file>
    <file>ArHybridForwarderVideo.h</file>
    <file>ArMapChanger.h</file>
    <file>ArNetPacket.h</file>
    <file>ArNetPacketReceiverTcp.h</file>
    <file>ArNetPacketReceiverUdp.h</file>
    <file>ArNetPacketSenderTcp.h</file>
    <file>ArNetworking.h</file>
    <file>ArServerAdvertiser.h</file>
    <file>ArServerBase.h</file>
    <file>ArServerClient.h</file>
    <file>ArServerClientData.h</file>
    <file>ArServerClientIdentifier.h</file>
    <file>ArServerCommands.h</file>
    <file>ArServerData.h</file>
    <file>ArServerDataProvider.h</file>
    <file>ArServerFileUtils.h</file>
    <file>ArServerHandlerCamera.h</file>
    <file>ArServerHandlerCameraCollection.h</file>
    <file>ArServerHandlerCommands.h</file>
    <file>ArServerHandlerCommMonitor.h</file>
    <file>ArServerHandlerConfig.h</file>
    <file>ArServerHandlerMap.h</file>
    <file>ArServerHandlerMapping.h</file>
    <file>ArServerHandlerPopup.h</file>
    <file>ArServerInfoDrawings.h</file>
    <file>ArServerInfoRobot.h</file>
    <file>ArServerInfoSensor.h</file>
    <file>ArServerInfoStrings.h</file>
    <file>ArServerInfoTrailDrawing.h</file>
    <file>ArServerMode.h</file>
    <file>ArServerModeDrive.h</file>
    <file>ArServerModeIdle.h</file>
    <file>ArServerModeJogPosition.h</file>
    <file>ArServerModeRatioDrive.h</file>
    <file>ArServerModeStop.h</file>
    <file>ArServerModeTestLoop.h</file>
    <file>ArServerModeWander.h</file>
    <file>ArServerSimpleCommands.h</file>
    <file>ArServerSimpleOpener.h</file>
    <file>ArServerUserInfo.h</file>
    <file>ArTempDirectoryHelper.h</file>
    <file>md5.h</file>
  </compound>
  <compound kind="dir">
    <name>src/</name>
    <path>D:/src/MSw/Aria/ArNetworking/src/</path>
    <filename>dir_68267d1309a1af8e8297ef4c3efbcdba.html</filename>
    <file>ArCentralForwarder.cpp</file>
    <file>ArCentralManager.cpp</file>
    <file>ArClientArgUtils.cpp</file>
    <file>ArClientBase.cpp</file>
    <file>ArClientData.cpp</file>
    <file>ArClientFileUtils.cpp</file>
    <file>ArClientHandlerConfig.cpp</file>
    <file>ArClientHandlerRobotUpdate.cpp</file>
    <file>ArClientRatioDrive.cpp</file>
    <file>ArClientSimpleConnector.cpp</file>
    <file>ArClientSwitchManager.cpp</file>
    <file>ArHybridForwarderVideo.cpp</file>
    <file>ArMapChanger.cpp</file>
    <file>ArNetPacket.cpp</file>
    <file>ArNetPacketReceiverTcp.cpp</file>
    <file>ArNetPacketReceiverUdp.cpp</file>
    <file>ArNetPacketSenderTcp.cpp</file>
    <file>ArServerBase.cpp</file>
    <file>ArServerClient.cpp</file>
    <file>ArServerData.cpp</file>
    <file>ArServerFileUtils.cpp</file>
    <file>ArServerHandlerCamera.cpp</file>
    <file>ArServerHandlerCameraCollection.cpp</file>
    <file>ArServerHandlerCommands.cpp</file>
    <file>ArServerHandlerCommMonitor.cpp</file>
    <file>ArServerHandlerConfig.cpp</file>
    <file>ArServerHandlerMap.cpp</file>
    <file>ArServerHandlerMapping.cpp</file>
    <file>ArServerHandlerPopup.cpp</file>
    <file>ArServerInfoDrawings.cpp</file>
    <file>ArServerInfoRobot.cpp</file>
    <file>ArServerInfoSensor.cpp</file>
    <file>ArServerInfoStrings.cpp</file>
    <file>ArServerMode.cpp</file>
    <file>ArServerModeDrive.cpp</file>
    <file>ArServerModeIdle.cpp</file>
    <file>ArServerModeJogPosition.cpp</file>
    <file>ArServerModeRatioDrive.cpp</file>
    <file>ArServerModeStop.cpp</file>
    <file>ArServerModeTestLoop.cpp</file>
    <file>ArServerModeWander.cpp</file>
    <file>ArServerSimpleCommands.cpp</file>
    <file>ArServerSimpleOpener.cpp</file>
    <file>ArServerUserInfo.cpp</file>
    <file>ArTempDirectoryHelper.cpp</file>
    <file>md5.cpp</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>ArNetworking</title>
    <filename>index</filename>
    <docanchor file="index">overviewintro</docanchor>
    <docanchor file="index">Servers</docanchor>
    <docanchor file="index">ServerModes</docanchor>
    <docanchor file="index">SimpleServerCommands</docanchor>
    <docanchor file="index">ARNLServerClasses</docanchor>
    <docanchor file="index">PreMadeServices</docanchor>
    <docanchor file="index">Clients</docanchor>
  </compound>
</tagfile>
